openapi: 3.0.0
info:
  title: Azure API Management - Templates
  description: Use these REST APIs for performing operations on Email Templates associated
    with your Azure API Management deployment.
  version: 2017-03-01
security:
  - apim_key: []
paths:
  /templates:
    get:
      tags:
        - EmailTemplate
      operationId: EmailTemplate_List
      description: Lists a collection of properties defined within a service instance.
      parameters:
        - name: $filter
          in: query
          required: false
          description: >-
            | Field          | Supported operators    | Supported
            functions                         |

            |----------------|------------------------|---------------------------------------------|

            | id             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/TopQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/SkipQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        "200":
          description: A Collection of the Email Template for the specified API Management
            service instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTemplateCollection"
      x-ms-pageable:
        nextLinkName: nextLink
  "/templates/{templateName}":
    get:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_Get
      description: Gets the details of the email template specified by its identifier.
      parameters:
        - $ref: "#/components/parameters/TemplateNameParameter"
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        "200":
          description: The response body contains the specified Email template.
          headers:
            ETag:
              description: Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTemplateContract"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
    put:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_CreateOrUpdate
      description: Updates an Email Template.
      parameters:
        - $ref: "#/components/parameters/TemplateNameParameter"
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailTemplateUpdateParameters"
        description: Email Template update parameters.
        required: true
      responses:
        "200":
          description: Email Template was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTemplateContract"
        "201":
          description: Email Template was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTemplateContract"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
    patch:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_Update
      description: Updates the specific Email Template.
      parameters:
        - $ref: "#/components/parameters/TemplateNameParameter"
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailTemplateUpdateParameters"
        description: Update parameters.
        required: true
      responses:
        "204":
          description: Email Template was successfully updated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
    delete:
      tags:
        - EmailTemplates
      operationId: EmailTemplate_Delete
      description: Reset the Email Template to default template provided by the API
        Management service instance.
      parameters:
        - $ref: "#/components/parameters/TemplateNameParameter"
        - name: If-Match
          in: header
          required: true
          description: The entity state (Etag) version of the Email Template to delete. A
            value of "*" can be used for If-Match to unconditionally apply the
            operation.
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        "204":
          description: Email Template was successfully reset to default.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
servers:
  - url: "{apimBaseUrl}"
    variables:
      apimBaseUrl:
        description: The management endpoint of the API Management service, for example
          https://myapimservice.management.azure-api.net.
        x-ms-skip-url-encoding: true
        default: ""
components:
  parameters:
    TemplateNameParameter:
      name: templateName
      in: path
      required: true
      x-ms-enum:
        name: TemplateName
        modelAsString: true
      description: Email Template Name Identifier.
      x-ms-parameter-location: method
      schema:
        type: string
        enum:
          - applicationApprovedNotificationMessage
          - accountClosedDeveloper
          - quotaLimitApproachingDeveloperNotificationMessage
          - newDeveloperNotificationMessage
          - emailChangeIdentityDefault
          - inviteUserNotificationMessage
          - newCommentNotificationMessage
          - confirmSignUpIdentityDefault
          - newIssueNotificationMessage
          - purchaseDeveloperNotificationMessage
          - passwordResetIdentityDefault
          - passwordResetByAdminNotificationMessage
          - rejectDeveloperNotificationMessage
          - requestDeveloperNotificationMessage
  securitySchemes:
    apim_key:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    EmailTemplateCollection:
      properties:
        value:
          type: array
          items:
            $ref: "#/components/schemas/EmailTemplateContract"
          description: Page values.
        count:
          type: integer
          description: Total number of entities
        nextLink:
          type: string
          description: Next page link if any.
      description: Paged email template list representation.
    EmailTemplateContract:
      properties:
        id:
          type: string
          description: Identifier of the Template Contract.
      allOf:
        - $ref: "#/components/schemas/EmailTemplateContractProperties"
      description: Email Template details.
    EmailTemplateContractProperties:
      properties:
        subject:
          type: string
          description: Subject of the Template.
          minLength: 1
          maxLength: 1000
        body:
          type: string
          description: Email Template Body. This should be a valid XDocument
          minLength: 1
        title:
          type: string
          description: Title of the Template.
        description:
          type: string
          description: Description of the Email Template.
        isDefault:
          type: boolean
          description: Whether the template is the default template provided by Api
            Management or has been edited.
          readOnly: true
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/EmailTemplateParametersContractProperties"
          description: Email Template Parameter values.
      required:
        - body
        - subject
      description: Email Template Contract properties.
    EmailTemplateUpdateParameters:
      properties:
        subject:
          type: string
          description: Subject of the Template.
          minLength: 1
          maxLength: 1000
        title:
          type: string
          description: Title of the Template.
        description:
          type: string
          description: Description of the Email Template.
        body:
          type: string
          description: Email Template Body. This should be a valid XDocument
          minLength: 1
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/EmailTemplateParametersContractProperties"
          description: Email Template Parameter values.
      description: Email Template Update Contract properties.
    EmailTemplateParametersContractProperties:
      properties:
        name:
          type: string
          description: Template parameter name.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
        title:
          type: string
          description: Template parameter title.
          minLength: 1
          maxLength: 4096
        description:
          type: string
          description: Template parameter description.
          minLength: 1
          maxLength: 256
          pattern: ^[A-Za-z0-9-._]+$
      description: Email Template Parameter contract.