openapi: 3.1.0
info:
  title: Connectors API
  description: Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
  contact: {}
  version: 'v1'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://connectors.googleapis.com/
  variables: {}
paths:
  /v1/{name}:
    delete:
      tags:
      - operations
      summary: DeleteV1ByName
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: DeleteV1ByName
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: The name of the operation resource to be deleted.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/operations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - operations
      summary: GetV1ByName
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: GetV1ByName
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: The name of the operation resource.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/operations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    patch:
      tags:
      - connections
      summary: PatchV1ByName
      description: Updates the parameters of a single Connection.
      operationId: PatchV1ByName
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: 'Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/connections/[^/]+$
          type: string
      - name: updateMask
        in: query
        description: 'Required. You can modify only the fields listed below. To lock/unlock a connection: * `lock_config` To suspend/resume a connection: * `suspended` To update the connection details: * `description` * `labels` * `connector_version` * `config_variables` * `auth_config` * `destination_configs` * `node_config`'
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:cancel:
    post:
      tags:
      - operations
      summary: CancelV1CancelByName
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: CancelV1CancelByName
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: The name of the operation resource to be cancelled.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/operations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}/operations:
    get:
      tags:
      - operations
      summary: ListV1OperationsByName
      description: "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
      operationId: ListV1OperationsByName
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: The name of the operation's parent resource.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: filter
        in: query
        description: The standard list filter.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: The standard list page token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The standard list page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/versions:
    get:
      tags:
      - versions
      summary: ListV1VersionsByParent
      description: Lists Connector Versions in a given project and location.
      operationId: ListV1VersionsByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: view
        in: query
        description: 'Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `BASIC` view. (Acceptable values are: "CONNECTOR_VERSION_VIEW_UNSPECIFIED", "CONNECTOR_VERSION_VIEW_BASIC", "CONNECTOR_VERSION_VIEW_FULL")'
        style: form
        explode: true
        schema:
          type: string
          default: CONNECTOR_VERSION_VIEW_UNSPECIFIED
      - name: parent
        in: path
        description: 'Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for ConnectorVersion resource.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorVersionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/connectors:
    get:
      tags:
      - connectors
      summary: ListV1ConnectorsByParent
      description: Lists Connectors in a given project and location.
      operationId: ListV1ConnectorsByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*` Only global location is supported for Connector resource.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/providers/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{resource}:testIamPermissions:
    post:
      tags:
      - providers
      summary: TestIamPermissionsV1TestIamPermissionsByResource
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: TestIamPermissionsV1TestIamPermissionsByResource
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: resource
        in: path
        description: 'REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/providers/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{resource}:getIamPolicy:
    get:
      tags:
      - providers
      summary: GetIamPolicyV1GetIamPolicyByResource
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: GetIamPolicyV1GetIamPolicyByResource
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: options.requestedPolicyVersion
        in: query
        description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: resource
        in: path
        description: 'REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/providers/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/providers:
    get:
      tags:
      - providers
      summary: ListV1ProvidersByParent
      description: Lists Providers in a given project and location.
      operationId: ListV1ProvidersByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Parent resource of the API, of the form: `projects/*/locations/*` Only global location is supported for Provider resource.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvidersResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{resource}:setIamPolicy:
    post:
      tags:
      - providers
      summary: SetIamPolicyV1SetIamPolicyByResource
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: SetIamPolicyV1SetIamPolicyByResource
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: resource
        in: path
        description: 'REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/providers/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/runtimeActionSchemas:
    get:
      tags:
      - runtimeActionSchemas
      summary: ListV1RuntimeActionSchemasByParent
      description: List schema of a runtime actions filtered by action name.
      operationId: ListV1RuntimeActionSchemasByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. Parent resource of RuntimeActionSchema Format: projects/{project}/locations/{location}/connections/{connection}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/connections/[^/]+$
          type: string
      - name: filter
        in: query
        description: 'Required. Filter Format: action="{actionId}" Only action field is supported with literal equality operator. Accepted filter example: action="CancelOrder" Wildcards are not supported in the filter currently.'
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeActionSchemasResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/runtimeEntitySchemas:
    get:
      tags:
      - runtimeEntitySchemas
      summary: ListV1RuntimeEntitySchemasByParent
      description: List schema of a runtime entities filtered by entity name.
      operationId: ListV1RuntimeEntitySchemasByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: filter
        in: query
        description: 'Required. Filter Format: entity="{entityId}" Only entity field is supported with literal equality operator. Accepted filter example: entity="Order" Wildcards are not supported in the filter currently.'
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Parent resource of RuntimeEntitySchema Format: projects/{project}/locations/{location}/connections/{connection}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/connections/[^/]+$
          type: string
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRuntimeEntitySchemasResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/connections:
    post:
      tags:
      - connections
      summary: CreateV1ConnectionsByParent
      description: Creates a new Connection in a given project and location.
      operationId: CreateV1ConnectionsByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. Parent resource of the Connection, of the form: `projects/*/locations/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: connectionId
        in: query
        description: Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - connections
      summary: ListV1ConnectionsByParent
      description: Lists Connections in a given project and location.
      operationId: ListV1ConnectionsByParent
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. Parent resource of the Connection, of the form: `projects/*/locations/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: orderBy
        in: query
        description: Order by parameters.
        style: form
        explode: true
        schema:
          type: string
      - name: view
        in: query
        description: 'Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view. (Acceptable values are: "CONNECTION_VIEW_UNSPECIFIED", "BASIC", "FULL")'
        style: form
        explode: true
        schema:
          type: string
          default: CONNECTION_VIEW_UNSPECIFIED
      - name: filter
        in: query
        description: Filter.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}/locations:
    get:
      tags:
      - locations
      summary: ListV1LocationsByName
      description: Lists information about the supported locations for this service.
      operationId: ListV1LocationsByName
      parameters:
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: The resource that owns the locations collection, if applicable.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: The maximum number of results to return. If not set, the service selects a default.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: filter
        in: query
        description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
components:
  schemas:
    ListConnectionsResponse:
      title: ListConnectionsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Next page token.
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        connections:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
          description: Connections.
      description: Response message for ConnectorsService.ListConnections
    Secret:
      title: Secret
      type: object
      properties:
        secretVersion:
          type: string
          description: 'The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`.'
      description: Secret provides a reference to entries in Secret Manager.
    Destination:
      title: Destination
      type: object
      properties:
        port:
          type: integer
          description: The port is the target port number that is accepted by the destination.
          contentEncoding: int32
        serviceAttachment:
          type: string
          description: 'PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*'
        host:
          type: string
          description: For publicly routable host.
    SshPublicKey:
      title: SshPublicKey
      type: object
      properties:
        certType:
          type: string
          description: Format of SSH Client cert.
        sshClientCertPass:
          allOf:
          - $ref: '#/components/schemas/Secret'
          - description: Secret provides a reference to entries in Secret Manager.
        username:
          type: string
          description: The user account used to authenticate.
        sshClientCert:
          allOf:
          - $ref: '#/components/schemas/Secret'
          - description: Secret provides a reference to entries in Secret Manager.
      description: Parameters to support Ssh public key Authentication.
    Binding:
      title: Binding
      type: object
      properties:
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.'
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
        condition:
          allOf:
          - $ref: '#/components/schemas/Expr'
          - description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      description: Associates `members`, or principals, with a `role`.
    Status:
      title: Status
      type: object
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          contentEncoding: int32
        details:
          type: array
          items: {}
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    ConfigVariable:
      title: ConfigVariable
      type: object
      properties:
        key:
          type: string
          description: Key of the config variable.
        intValue:
          type: string
          description: Value is an integer
        boolValue:
          type: boolean
          description: Value is a bool.
        stringValue:
          type: string
          description: Value is a string.
        secretValue:
          allOf:
          - $ref: '#/components/schemas/Secret'
          - description: Secret provides a reference to entries in Secret Manager.
      description: ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.
    SupportedRuntimeFeatures:
      title: SupportedRuntimeFeatures
      type: object
      properties:
        sqlQuery:
          type: boolean
          description: Specifies if the connector supports 'ExecuteSqlQuery' operation.
        actionApis:
          type: boolean
          description: Specifies if the connector supports action apis like 'executeAction'.
        entityApis:
          type: boolean
          description: Specifies if the connector supports entity apis like 'createEntity'.
      description: Supported runtime features of a connector version. This is passed to the management layer to add a new connector version by the connector developer. Details about how this proto is passed to the management layer is covered in this doc - go/runtime-manifest.
    Policy:
      title: Policy
      type: object
      properties:
        bindings:
          type: array
          items:
            $ref: '#/components/schemas/Binding'
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
        auditConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AuditConfig'
          description: Specifies cloud audit logging configuration for this policy.
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          contentEncoding: int32
        etag:
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    ExtractionRules:
      title: ExtractionRules
      type: object
      properties:
        extractionRule:
          type: array
          items:
            $ref: '#/components/schemas/ExtractionRule'
          description: Collection of Extraction Rule.
      description: Extraction Rules to identity the backends from customer provided configuration in Connection resource.
    Connection:
      title: Connection
      type: object
      properties:
        lockConfig:
          description: Optional. Configuration that indicates whether or not the Connection can be edited.
        status:
          description: Output only. Current status of the connection.
        nodeConfig:
          description: Optional. Configuration for the connection.
        suspended:
          type: boolean
          description: Optional. Suspended indicates if a user has suspended a connection or not.
        updateTime:
          type: string
          description: Output only. Updated time.
        authConfig:
          description: Optional. Configuration for establishing the connection's authentication with an external system.
        envoyImageLocation:
          type: string
          description: 'Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}'
        serviceDirectory:
          type: string
          description: Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        imageLocation:
          type: string
          description: 'Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}'
        name:
          type: string
          description: 'Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}'
        createTime:
          type: string
          description: Output only. Created time.
        serviceAccount:
          type: string
          description: Optional. Service account needed for runtime plane to access GCP resources.
        connectorVersion:
          type: string
          description: 'Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource.'
        destinationConfigs:
          type: array
          items: {}
          description: Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
        description:
          type: string
          description: Optional. Description of the resource.
        configVariables:
          type: array
          items: {}
          description: Optional. Configuration for configuring the connection with an external system.
      description: Connection represents an instance of connector.
    ConfigVariableTemplate:
      title: ConfigVariableTemplate
      type: object
      properties:
        enumOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOption'
          description: Enum options. To be populated if `ValueType` is `ENUM`
        displayName:
          type: string
          description: Display name of the parameter.
        valueType:
          allOf:
          - $ref: '#/components/schemas/ValueType'
          - description: 'Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.'
        roleGrant:
          allOf:
          - $ref: '#/components/schemas/RoleGrant'
          - description: This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected prinicpal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.
        description:
          type: string
          description: Description.
        required:
          type: boolean
          description: Flag represents that this `ConfigVariable` must be provided for a connection.
        validationRegex:
          type: string
          description: Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`.
        authorizationCodeLink:
          allOf:
          - $ref: '#/components/schemas/AuthorizationCodeLink'
          - description: This configuration captures the details required to render an authorization link for the OAuth Authorization Code Flow.
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: State of the config variable.
        key:
          type: string
          description: Key of the config variable.
      description: ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection.
    AuthConfig:
      title: AuthConfig
      type: object
      properties:
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/SshPublicKey'
          - description: Parameters to support Ssh public key Authentication.
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of authentication configured.
        oauth2ClientCredentials:
          allOf:
          - $ref: '#/components/schemas/Oauth2ClientCredentials'
          - description: Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
        userPassword:
          allOf:
          - $ref: '#/components/schemas/UserPassword'
          - description: Parameters to support Username and Password Authentication.
        oauth2JwtBearer:
          allOf:
          - $ref: '#/components/schemas/Oauth2JwtBearer'
          - description: Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
        additionalVariables:
          type: array
          items:
            $ref: '#/components/schemas/ConfigVariable'
          description: List containing additional auth configs.
      description: AuthConfig defines details of a authentication type.
    AuditLogConfig:
      title: AuditLogConfig
      type: object
      properties:
        exemptedMembers:
          type: array
          items:
            type: string
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
        logType:
          allOf:
          - $ref: '#/components/schemas/LogType'
          - description: The log type that this config enables.
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    ListRuntimeActionSchemasResponse:
      title: ListRuntimeActionSchemasResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Next page token.
        runtimeActionSchemas:
          type: array
          items:
            $ref: '#/components/schemas/RuntimeActionSchema'
          description: Runtime action schemas.
      description: Response message for ConnectorsService.ListRuntimeActionSchemas.
    TestIamPermissionsResponse:
      title: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      description: Response message for `TestIamPermissions` method.
    Operation:
      title: Operation
      type: object
      properties:
        metadata:
          type: object
          additionalProperties: {}
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
        response:
          type: object
          additionalProperties: {}
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        error:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      description: This resource represents a long-running operation that is the result of a network API call.
    Source:
      title: Source
      type: object
      properties:
        fieldId:
          type: string
          description: Field identifier. For example config vaiable name.
        sourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          - description: Type of the source.
      description: Source to extract the backend from.
    ListOperationsResponse:
      title: ListOperationsResponse
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
    DestinationConfig:
      title: DestinationConfig
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          description: The destinations for the key.
        key:
          type: string
          description: The key is the destination identifier that is supported by the Connector.
      description: Define the Connectors target endpoint.
    ListProvidersResponse:
      title: ListProvidersResponse
      type: object
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: Next page token.
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: A list of providers.
      description: Response message for Connectors.ListProviders.
    ListRuntimeEntitySchemasResponse:
      title: ListRuntimeEntitySchemasResponse
      type: object
      properties:
        runtimeEntitySchemas:
          type: array
          items:
            $ref: '#/components/schemas/RuntimeEntitySchema'
          description: Runtime entity schemas.
        nextPageToken:
          type: string
          description: Next page token.
      description: Response message for ConnectorsService.ListRuntimeEntitySchemas.
    Oauth2ClientCredentials:
      title: Oauth2ClientCredentials
      type: object
      properties:
        clientId:
          type: string
          description: The client identifier.
        clientSecret:
          description: Secret version reference containing the client secret.
      description: Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
    Field:
      title: Field
      type: object
      properties:
        description:
          type: string
          description: A brief description of the Field.
        key:
          type: boolean
          description: The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType'
          - description: The data type of the Field.
        defaultValue:
          description: The following field specifies the default value of the Field provided by the external system if a value is not provided.
        field:
          type: string
          description: Name of the Field.
        readonly:
          type: boolean
          description: Specifies if the Field is readonly.
        nullable:
          type: boolean
          description: Specifies whether a null value is allowed.
        additionalDetails:
          type: object
          additionalProperties: {}
          description: The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
      description: Metadata of an entity field.
    Location:
      title: Location
      type: object
      properties:
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        metadata:
          type: object
          additionalProperties: {}
          description: Service-specific metadata. For example the available capacity at the given location.
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
      description: A resource that represents Google Cloud Platform location.
    Provider:
      title: Provider
      type: object
      properties:
        externalUri:
          type: string
          description: Output only. Link to external page.
        name:
          type: string
          description: 'Output only. Resource name of the Provider. Format: projects/{project}/locations/{location}/providers/{provider} Only global location is supported for Provider resource.'
        description:
          type: string
          description: Output only. Description of the resource.
        webAssetsLocation:
          type: string
          description: Output only. Cloud storage location of icons etc consumed by UI.
        updateTime:
          type: string
          description: Output only. Updated time.
        createTime:
          type: string
          description: Output only. Created time.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        documentationUri:
          type: string
          description: Output only. Link to documentation page.
        displayName:
          type: string
          description: Output only. Display name.
        launchStage:
          allOf:
          - $ref: '#/components/schemas/LaunchStage'
          - description: Output only. Flag to mark the version indicating the launch stage.
      description: Provider indicates the owner who provides the connectors.
    EgressControlConfig:
      title: EgressControlConfig
      type: object
      properties:
        extractionRules:
          allOf:
          - $ref: '#/components/schemas/ExtractionRules'
          - description: Extraction Rules to identity the backends from customer provided configuration in Connection resource.
        backends:
          type: string
          description: Static Comma separated backends which are common for all Connection resources. Supported formats for each backend are host:port or just host (host can be ip address or domain name).
      description: Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.
    RoleGrant:
      title: RoleGrant
      type: object
      properties:
        resource:
          description: Resource on which the roles needs to be granted for the principal.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          - description: Prinicipal/Identity for whom the role need to assigned.
        roles:
          type: array
          items:
            type: string
          description: List of roles that need to be granted.
        helperTextTemplate:
          type: string
          description: Template that UI can use to provide helper text to customers.
      description: This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected prinicpal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.
    InputParameter:
      title: InputParameter
      type: object
      properties:
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType1'
          - description: The data type of the Parameter.
        description:
          type: string
          description: A brief description of the Parameter.
        parameter:
          type: string
          description: Name of the Parameter.
        nullable:
          type: boolean
          description: Specifies whether a null value is allowed.
        defaultValue:
          description: The following field specifies the default value of the Parameter provided by the external system if a value is not provided.
      description: Metadata of an input parameter.
    RuntimeConfig:
      title: RuntimeConfig
      type: object
      properties:
        schemaGcsBucket:
          type: string
          description: Output only. The Cloud Storage bucket that stores connector's schema reports.
        state:
          allOf:
          - $ref: '#/components/schemas/State1'
          - description: Output only. The state of the location.
        conndSubscription:
          type: string
          description: Output only. Pub/Sub subscription for connd to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}
        name:
          type: string
          description: 'Output only. Name of the runtimeConfig resource. Format: projects/{project}/locations/{location}/runtimeConfig'
        locationId:
          type: string
          description: Output only. location_id of the runtime location. E.g. "us-west1".
        controlPlaneSubscription:
          type: string
          description: Output only. Pub/Sub subscription for control plane to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}
        serviceDirectory:
          type: string
          description: Output only. The name of the Service Directory service name.
        controlPlaneTopic:
          type: string
          description: Output only. Pub/Sub topic for control plne to send message. communication. E.g. projects/{project-id}/topics/{topic-id}
        runtimeEndpoint:
          type: string
          description: Output only. The endpoint of the connectors runtime ingress.
        conndTopic:
          type: string
          description: Output only. Pub/Sub topic for connd to send message. E.g. projects/{project-id}/topics/{topic-id}
      description: 'RuntimeConfig is the singleton resource of each location. It includes generic resource configs consumed by control plane and runtime plane like: pub/sub topic/subscription resource name, Cloud Storage location storing schema etc.'
    ConnectorVersion:
      title: ConnectorVersion
      type: object
      properties:
        roleGrant:
          allOf:
          - $ref: '#/components/schemas/RoleGrant'
          - description: This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected prinicpal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.
        displayName:
          type: string
          description: Output only. Display name.
        updateTime:
          type: string
          description: Output only. Updated time.
        supportedRuntimeFeatures:
          allOf:
          - $ref: '#/components/schemas/SupportedRuntimeFeatures'
          - description: Supported runtime features of a connector version. This is passed to the management layer to add a new connector version by the connector developer. Details about how this proto is passed to the management layer is covered in this doc - go/runtime-manifest.
        configVariableTemplates:
          type: array
          items:
            $ref: '#/components/schemas/ConfigVariableTemplate'
          description: Output only. List of config variables needed to create a connection.
        name:
          type: string
          description: 'Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version} Only global location is supported for Connector resource.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        launchStage:
          allOf:
          - $ref: '#/components/schemas/LaunchStage'
          - description: Output only. Flag to mark the version indicating the launch stage.
        egressControlConfig:
          allOf:
          - $ref: '#/components/schemas/EgressControlConfig'
          - description: Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.
        releaseVersion:
          type: string
          description: 'Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".'
        roleGrants:
          type: array
          items:
            $ref: '#/components/schemas/RoleGrant'
          description: Output only. Role grant configurations for this connector version.
        createTime:
          type: string
          description: Output only. Created time.
        authConfigTemplates:
          type: array
          items:
            $ref: '#/components/schemas/AuthConfigTemplate'
          description: Output only. List of auth configs supported by the Connector Version.
      description: ConnectorVersion indicates a specific version of a connector.
    Expr:
      title: Expr
      type: object
      properties:
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
        location:
          type: string
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    AuditConfig:
      title: AuditConfig
      type: object
      properties:
        service:
          type: string
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
        auditLogConfigs:
          type: array
          items: {}
          description: The configuration for logging of each type of permission.
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
    EnumOption:
      title: EnumOption
      type: object
      properties:
        id:
          type: string
          description: Id of the option.
        displayName:
          type: string
          description: Display name of the option.
      description: EnumOption definition
    ExtractionRule:
      title: ExtractionRule
      type: object
      properties:
        source:
          description: Source on which the rule is applied.
        extractionRegex:
          type: string
          description: Regex used to extract backend details from source. If empty, whole source value will be used.
      description: Extraction Rule.
    ResultMetadata:
      title: ResultMetadata
      type: object
      properties:
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType2'
          - description: The data type of the field.
        description:
          type: string
          description: A brief description of the field.
        field:
          type: string
          description: Name of the result field.
      description: Metadata of result field.
    ListConnectorsResponse:
      title: ListConnectorsResponse
      type: object
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        nextPageToken:
          type: string
          description: Next page token.
        connectors:
          type: array
          items:
            $ref: '#/components/schemas/Connector'
          description: A list of connectors.
      description: Response message for Connectors.ListConnectors.
    UserPassword:
      title: UserPassword
      type: object
      properties:
        password:
          description: Secret version reference containing the password.
        username:
          type: string
          description: Username.
      description: Parameters to support Username and Password Authentication.
    Resource:
      title: Resource
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: Different types of resource supported.
        pathTemplate:
          type: string
          description: Template to uniquely represent a GCP resource in a format IAM expects This is a template that can have references to other values provided in the config variable template.
      description: Resource definition
    OperationMetadata:
      title: OperationMetadata
      type: object
      properties:
        statusMessage:
          type: string
          description: Output only. Human-readable status of the operation, if any.
        createTime:
          type: string
          description: Output only. The time the operation was created.
        apiVersion:
          type: string
          description: Output only. API version used to start the operation.
        endTime:
          type: string
          description: Output only. The time the operation finished running.
        target:
          type: string
          description: Output only. Server-defined resource path for the target of the operation.
        requestedCancellation:
          type: boolean
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        verb:
          type: string
          description: Output only. Name of the verb executed by the operation.
      description: Represents the metadata of the long-running operation.
    ConnectionStatus:
      title: ConnectionStatus
      type: object
      properties:
        status:
          type: string
          description: Status provides detailed information for the state.
        description:
          type: string
          description: Description.
        state:
          allOf:
          - $ref: '#/components/schemas/State2'
          - description: State.
      description: ConnectionStatus indicates the state of the connection.
    AuthorizationCodeLink:
      title: AuthorizationCodeLink
      type: object
      properties:
        enablePkce:
          type: boolean
          description: Whether to enable PKCE for the auth code flow.
        uri:
          type: string
          description: The base URI the user must click to trigger the authorization code login flow.
        scopes:
          type: array
          items:
            type: string
          description: The scopes for which the user will authorize GCP Connectors on the connector data source.
        clientId:
          type: string
          description: The client ID assigned to the GCP Connectors OAuth app for the connector data source.
      description: This configuration captures the details required to render an authorization link for the OAuth Authorization Code Flow.
    TestIamPermissionsRequest:
      title: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
      description: Request message for `TestIamPermissions` method.
    Connector:
      title: Connector
      type: object
      properties:
        labels:
          type: object
          additionalProperties:
            type: string
          description: Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        webAssetsLocation:
          type: string
          description: Output only. Cloud storage location of icons etc consumed by UI.
        createTime:
          type: string
          description: Output only. Created time.
        name:
          type: string
          description: 'Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector} Only global location is supported for Connector resource.'
        documentationUri:
          type: string
          description: Output only. Link to documentation page.
        launchStage:
          allOf:
          - $ref: '#/components/schemas/LaunchStage'
          - description: Output only. Flag to mark the version indicating the launch stage.
        updateTime:
          type: string
          description: Output only. Updated time.
        externalUri:
          type: string
          description: Output only. Link to external page.
        description:
          type: string
          description: Output only. Description of the resource.
        displayName:
          type: string
          description: Output only. Display name.
      description: Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.
    Oauth2JwtBearer:
      title: Oauth2JwtBearer
      type: object
      properties:
        clientKey:
          description: 'Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`.'
        jwtClaims:
          description: JwtClaims providers fields to generate the token.
      description: Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
    LockConfig:
      title: LockConfig
      type: object
      properties:
        reason:
          type: string
          description: Describes why a connection is locked.
        locked:
          type: boolean
          description: Indicates whether or not the connection is locked.
      description: Determines whether or no a connection is locked. If locked, a reason must be specified.
    NodeConfig:
      title: NodeConfig
      type: object
      properties:
        minNodeCount:
          type: integer
          description: Minimum number of nodes in the runtime nodes.
          contentEncoding: int32
        maxNodeCount:
          type: integer
          description: Maximum number of nodes in the runtime nodes.
          contentEncoding: int32
      description: Configuration for the connection.
    JwtClaims:
      title: JwtClaims
      type: object
      properties:
        audience:
          type: string
          description: Value for the "aud" claim.
        subject:
          type: string
          description: Value for the "sub" claim.
        issuer:
          type: string
          description: Value for the "iss" claim.
      description: JWT claims used for the jwt-bearer authorization grant.
    ConnectionSchemaMetadata:
      title: ConnectionSchemaMetadata
      type: object
      properties:
        entities:
          type: array
          items:
            type: string
          description: Output only. List of entity names.
        name:
          type: string
          description: 'Output only. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata'
        updateTime:
          type: string
          description: Output only. Timestamp when the connection runtime schema was updated.
        refreshTime:
          type: string
          description: Output only. Timestamp when the connection runtime schema refresh was triggered.
        actions:
          type: array
          items:
            type: string
          description: Output only. List of actions.
        state:
          allOf:
          - $ref: '#/components/schemas/State3'
          - description: Output only. The current state of runtime schema.
      description: ConnectionSchemaMetadata is the singleton resource of each connection. It includes the entity and action names of runtime resources exposed by a connection backend.
    RuntimeEntitySchema:
      title: RuntimeEntitySchema
      type: object
      properties:
        fields:
          type: array
          items: {}
          description: Output only. List of fields in the entity.
        entity:
          type: string
          description: Output only. Name of the entity.
      description: Schema of a runtime entity.
    ListConnectorVersionsResponse:
      title: ListConnectorVersionsResponse
      type: object
      properties:
        unreachable:
          type: array
          items:
            type: string
          description: Locations that could not be reached.
        connectorVersions:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorVersion'
          description: A list of connector versions.
        nextPageToken:
          type: string
          description: Next page token.
      description: Response message for Connectors.ListConnectorVersions.
    RuntimeActionSchema:
      title: RuntimeActionSchema
      type: object
      properties:
        resultMetadata:
          type: array
          items: {}
          description: Output only. List of result field metadata.
        action:
          type: string
          description: Output only. Name of the action.
        inputParameters:
          type: array
          items: {}
          description: Output only. List of input parameter metadata for the action.
      description: Schema of a runtime action.
    ListLocationsResponse:
      title: ListLocationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The standard List next-page token.
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
      description: The response message for Locations.ListLocations.
    AuthConfigTemplate:
      title: AuthConfigTemplate
      type: object
      properties:
        configVariableTemplates:
          type: array
          items: {}
          description: Config variables to describe an `AuthConfig` for a `Connection`.
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of authentication configured.
      description: AuthConfigTemplate defines required field over an authentication type.
    SetIamPolicyRequest:
      title: SetIamPolicyRequest
      type: object
      properties:
        updateMask:
          type: string
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      description: Request message for `SetIamPolicy` method.
    AuthType:
      title: AuthType
      enum:
      - AUTH_TYPE_UNSPECIFIED
      - USER_PASSWORD
      - OAUTH2_JWT_BEARER
      - OAUTH2_CLIENT_CREDENTIALS
      - SSH_PUBLIC_KEY
      - OAUTH2_AUTH_CODE_FLOW
      type: string
      description: The type of authentication configured.
    DataType:
      title: DataType
      enum:
      - DATA_TYPE_UNSPECIFIED
      - DATA_TYPE_INT
      - DATA_TYPE_SMALLINT
      - DATA_TYPE_DOUBLE
      - DATA_TYPE_DATE
      - DATA_TYPE_DATETIME
      - DATA_TYPE_TIME
      - DATA_TYPE_STRING
      - DATA_TYPE_LONG
      - DATA_TYPE_BOOLEAN
      - DATA_TYPE_DECIMAL
      - DATA_TYPE_UUID
      - DATA_TYPE_BLOB
      - DATA_TYPE_BIT
      - DATA_TYPE_TINYINT
      - DATA_TYPE_INTEGER
      - DATA_TYPE_BIGINT
      - DATA_TYPE_FLOAT
      - DATA_TYPE_REAL
      - DATA_TYPE_NUMERIC
      - DATA_TYPE_CHAR
      - DATA_TYPE_VARCHAR
      - DATA_TYPE_LONGVARCHAR
      - DATA_TYPE_TIMESTAMP
      - DATA_TYPE_NCHAR
      - DATA_TYPE_NVARCHAR
      - DATA_TYPE_LONGNVARCHAR
      - DATA_TYPE_NULL
      - DATA_TYPE_OTHER
      - DATA_TYPE_JAVA_OBJECT
      - DATA_TYPE_DISTINCT
      - DATA_TYPE_STRUCT
      - DATA_TYPE_ARRAY
      - DATA_TYPE_CLOB
      - DATA_TYPE_REF
      - DATA_TYPE_DATALINK
      - DATA_TYPE_ROWID
      - DATA_TYPE_BINARY
      - DATA_TYPE_VARBINARY
      - DATA_TYPE_LONGVARBINARY
      - DATA_TYPE_NCLOB
      - DATA_TYPE_SQLXML
      - DATA_TYPE_REF_CURSOR
      - DATA_TYPE_TIME_WITH_TIMEZONE
      - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
      type: string
      description: The data type of the Field.
    DataType1:
      title: DataType1
      enum:
      - DATA_TYPE_UNSPECIFIED
      - DATA_TYPE_INT
      - DATA_TYPE_SMALLINT
      - DATA_TYPE_DOUBLE
      - DATA_TYPE_DATE
      - DATA_TYPE_DATETIME
      - DATA_TYPE_TIME
      - DATA_TYPE_STRING
      - DATA_TYPE_LONG
      - DATA_TYPE_BOOLEAN
      - DATA_TYPE_DECIMAL
      - DATA_TYPE_UUID
      - DATA_TYPE_BLOB
      - DATA_TYPE_BIT
      - DATA_TYPE_TINYINT
      - DATA_TYPE_INTEGER
      - DATA_TYPE_BIGINT
      - DATA_TYPE_FLOAT
      - DATA_TYPE_REAL
      - DATA_TYPE_NUMERIC
      - DATA_TYPE_CHAR
      - DATA_TYPE_VARCHAR
      - DATA_TYPE_LONGVARCHAR
      - DATA_TYPE_TIMESTAMP
      - DATA_TYPE_NCHAR
      - DATA_TYPE_NVARCHAR
      - DATA_TYPE_LONGNVARCHAR
      - DATA_TYPE_NULL
      - DATA_TYPE_OTHER
      - DATA_TYPE_JAVA_OBJECT
      - DATA_TYPE_DISTINCT
      - DATA_TYPE_STRUCT
      - DATA_TYPE_ARRAY
      - DATA_TYPE_CLOB
      - DATA_TYPE_REF
      - DATA_TYPE_DATALINK
      - DATA_TYPE_ROWID
      - DATA_TYPE_BINARY
      - DATA_TYPE_VARBINARY
      - DATA_TYPE_LONGVARBINARY
      - DATA_TYPE_NCLOB
      - DATA_TYPE_SQLXML
      - DATA_TYPE_REF_CURSOR
      - DATA_TYPE_TIME_WITH_TIMEZONE
      - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
      type: string
      description: The data type of the Parameter.
    DataType2:
      title: DataType2
      enum:
      - DATA_TYPE_UNSPECIFIED
      - DATA_TYPE_INT
      - DATA_TYPE_SMALLINT
      - DATA_TYPE_DOUBLE
      - DATA_TYPE_DATE
      - DATA_TYPE_DATETIME
      - DATA_TYPE_TIME
      - DATA_TYPE_STRING
      - DATA_TYPE_LONG
      - DATA_TYPE_BOOLEAN
      - DATA_TYPE_DECIMAL
      - DATA_TYPE_UUID
      - DATA_TYPE_BLOB
      - DATA_TYPE_BIT
      - DATA_TYPE_TINYINT
      - DATA_TYPE_INTEGER
      - DATA_TYPE_BIGINT
      - DATA_TYPE_FLOAT
      - DATA_TYPE_REAL
      - DATA_TYPE_NUMERIC
      - DATA_TYPE_CHAR
      - DATA_TYPE_VARCHAR
      - DATA_TYPE_LONGVARCHAR
      - DATA_TYPE_TIMESTAMP
      - DATA_TYPE_NCHAR
      - DATA_TYPE_NVARCHAR
      - DATA_TYPE_LONGNVARCHAR
      - DATA_TYPE_NULL
      - DATA_TYPE_OTHER
      - DATA_TYPE_JAVA_OBJECT
      - DATA_TYPE_DISTINCT
      - DATA_TYPE_STRUCT
      - DATA_TYPE_ARRAY
      - DATA_TYPE_CLOB
      - DATA_TYPE_REF
      - DATA_TYPE_DATALINK
      - DATA_TYPE_ROWID
      - DATA_TYPE_BINARY
      - DATA_TYPE_VARBINARY
      - DATA_TYPE_LONGVARBINARY
      - DATA_TYPE_NCLOB
      - DATA_TYPE_SQLXML
      - DATA_TYPE_REF_CURSOR
      - DATA_TYPE_TIME_WITH_TIMEZONE
      - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
      type: string
      description: The data type of the field.
    LaunchStage:
      title: LaunchStage
      enum:
      - LAUNCH_STAGE_UNSPECIFIED
      - PREVIEW
      - GA
      - DEPRECATED
      type: string
      description: Output only. Flag to mark the version indicating the launch stage.
    LogType:
      title: LogType
      enum:
      - LOG_TYPE_UNSPECIFIED
      - ADMIN_READ
      - DATA_WRITE
      - DATA_READ
      type: string
      description: The log type that this config enables.
    Principal:
      title: Principal
      enum:
      - PRINCIPAL_UNSPECIFIED
      - CONNECTOR_SA
      type: string
      description: Prinicipal/Identity for whom the role need to assigned.
    SourceType:
      title: SourceType
      enum:
      - SOURCE_TYPE_UNSPECIFIED
      - CONFIG_VARIABLE
      type: string
      description: Type of the source.
    State:
      title: State
      enum:
      - STATE_UNSPECIFIED
      - ACTIVE
      - DEPRECATED
      type: string
      description: State of the config variable.
    State1:
      title: State1
      enum:
      - STATE_UNSPECIFIED
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - CREATING
      - DELETING
      - UPDATING
      type: string
      description: Output only. The state of the location.
    State2:
      title: State2
      enum:
      - STATE_UNSPECIFIED
      - CREATING
      - ACTIVE
      - INACTIVE
      - DELETING
      - UPDATING
      - ERROR
      type: string
      description: State.
    State3:
      title: State3
      enum:
      - STATE_UNSPECIFIED
      - REFRESHING
      - UPDATED
      type: string
      description: Output only. The current state of runtime schema.
    Type:
      title: Type
      enum:
      - TYPE_UNSPECIFIED
      - GCP_PROJECT
      - GCP_RESOURCE
      - GCP_SECRETMANAGER_SECRET
      - GCP_SECRETMANAGER_SECRET_VERSION
      type: string
      description: Different types of resource supported.
    ValueType:
      title: ValueType
      enum:
      - VALUE_TYPE_UNSPECIFIED
      - STRING
      - INT
      - BOOL
      - SECRET
      - ENUM
      - AUTHORIZATION_CODE
      type: string
      description: 'Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.'
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: operations
  description: ''
- name: versions
  description: ''
- name: connectors
  description: ''
- name: providers
  description: ''
- name: runtimeActionSchemas
  description: ''
- name: runtimeEntitySchemas
  description: ''
- name: connections
  description: ''
- name: locations
  description: ''
