openapi: 3.1.0
info:
  title: Application Integration API
  description: ''
  contact: {}
  version: 'v1'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://integrations.googleapis.com/
  variables: {}
paths:
  /v1/{parent}/appsScriptProjects:
    post:
      tags:
      - appsScriptProjects
      summary: CreateV1AppsScriptProjectsByParent
      description: Creates an Apps Script project.
      operationId: CreateV1AppsScriptProjectsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The project that the executed integration belongs to.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/appsScriptProjects:link:
    post:
      tags:
      - appsScriptProjects
      summary: LinkV1AppsScriptProjectsLinkByParent
      description: Links a existing Apps Script project.
      operationId: LinkV1AppsScriptProjectsLinkByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The project that the executed integration belongs to.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:
    patch:
      tags:
      - sfdcChannels
      summary: PatchV1ByName
      description: Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
      operationId: PatchV1ByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$
          type: string
      - name: updateMask
        in: query
        description: Field mask specifying the fields in the above SfdcChannel that have been modified and need to be updated.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    delete:
      tags:
      - sfdcChannels
      summary: DeleteV1ByName
      description: Deletes an sfdc channel.
      operationId: DeleteV1ByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. The name that is associated with the SfdcChannel.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - sfdcChannels
      summary: GetV1ByName
      description: Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
      operationId: GetV1ByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. The name that is associated with the SfdcChannel.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+/sfdcChannels/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/sfdcChannels:
    post:
      tags:
      - sfdcChannels
      summary: CreateV1SfdcChannelsByParent
      description: Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
      operationId: CreateV1SfdcChannelsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. "projects/{project}/locations/{location}" format.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - sfdcChannels
      summary: ListV1SfdcChannelsByParent
      description: Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the current client only.
      operationId: ListV1SfdcChannelsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The size of entries in the response. If unspecified, defaults to 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: readMask
        in: query
        description: The mask which specifies fields that need to be returned in the SfdcChannel's response.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The client, which owns this collection of SfdcChannels.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/sfdcInstances/[^/]+$
          type: string
      - name: pageToken
        in: query
        description: The token returned in the previous response.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/sfdcInstances:
    get:
      tags:
      - sfdcInstances
      summary: ListV1SfdcInstancesByParent
      description: Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the current client only.
      operationId: ListV1SfdcInstancesByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The size of entries in the response. If unspecified, defaults to 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: The token returned in the previous response.
        style: form
        explode: true
        schema:
          type: string
      - name: readMask
        in: query
        description: The mask which specifies fields that need to be returned in the SfdcInstance's response.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The client, which owns this collection of SfdcInstances.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    post:
      tags:
      - sfdcInstances
      summary: CreateV1SfdcInstancesByParent
      description: Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
      operationId: CreateV1SfdcInstancesByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. "projects/{project}/locations/{location}" format.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcInstance'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcInstance'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/executionsnapshots:
    get:
      tags:
      - executionsnapshots
      summary: ListV1ExecutionsnapshotsByParent
      description: Lists the snapshots of a given integration executions. This RPC is not being used.
      operationId: ListV1ExecutionsnapshotsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: The token used to retrieve the next page results.
        style: form
        explode: true
        schema:
          type: string
      - name: readMask
        in: query
        description: View mask for the response data. If set, only the field specified will be returned as part of the result. If not set, all fields in event execution snapshot will be filled and returned.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Number of entries to be returned in a page.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: parent
        in: path
        description: Required. The parent resource name of the integration execution.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      - name: filter
        in: query
        description: Currently supports filter by `execution_info_id` or `execution_snapshot_id`.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:publish:
    post:
      tags:
      - versions
      summary: PublishV1PublishByName
      description: This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws an exception if the version being published is DRAFT, and if the `locked_by` user is not the same as the user performing the Publish. Audit fields updated include last_published_timestamp, last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this integration is released.
      operationId: PublishV1PublishByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The version to publish. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:updateBundle:
    patch:
      tags:
      - versions
      summary: UpdateBundleV1UpdateBundleByName
      description: THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to update the Bundle
      operationId: UpdateBundleV1UpdateBundleByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. Bundle name
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaUpdateBundleRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaUpdateBundleResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:getBundle:
    get:
      tags:
      - versions
      summary: GetBundleV1GetBundleByName
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to get details of the Bundle
      operationId: GetBundleV1GetBundleByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. The bundle name.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaGetBundleResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/versions:
    post:
      tags:
      - versions
      summary: CreateV1VersionsByParent
      description: Create a integration with a draft version in the specified project.
      operationId: CreateV1VersionsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent resource where this version will be created. Format: projects/{project}/locations/{location}/integrations/{integration}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      - name: newIntegration
        in: query
        description: Set this flag to true, if draft version is to be created for a brand new integration. False, if the request is for an existing integration. For backward compatibility reasons, even if this flag is set to `false` and no existing integration is found, a new draft integration will still be created.
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - versions
      summary: ListV1VersionsByParent
      description: Returns the list of all integration versions in the specified project.
      operationId: ListV1VersionsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: fieldMask
        in: query
        description: The field mask which specifies the particular data to be returned.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: A page token, received from a previous `ListIntegrationVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListIntegrationVersions` must match the call that provided the page token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent resource where this version will be created. Format: projects/{project}/locations/{location}/integrations/{integration} Specifically, when parent equals: 1. projects//locations//integrations/, Meaning: "List versions (with filter) for a particular integration". 2. projects//locations//integrations/- Meaning: "List versions (with filter) for a client within a particular region". 3. projects//locations/-/integrations/- Meaning: "List versions (with filter) for a client".'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 50 versions will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: orderBy
        in: query
        description: 'The results would be returned in order you specified here. Currently supported sort keys are: Descending sort order for "last_modified_time", "created_time", "snapshot_number" Ascending sort order for "name".'
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/versions:upload:
    post:
      tags:
      - versions
      summary: UploadV1VersionsUploadByParent
      description: Uploads an integration. The content can be a previously downloaded integration. Performs the same function as CreateDraftIntegrationVersion, but accepts input in a string format, which holds the complete representation of the IntegrationVersion content.
      operationId: UploadV1VersionsUploadByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The version to upload. Format: projects/{project}/locations/{location}/integrations/{integration}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:archive:
    post:
      tags:
      - versions
      summary: ArchiveV1ArchiveByName
      description: Soft-deletes the integration. Changes the status of the integration to ARCHIVED. If the integration being ARCHIVED is tagged as "HEAD", the tag is removed from this snapshot and set to the previous non-ARCHIVED snapshot. The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too. This RPC throws an exception if the version being archived is DRAFT, and if the `locked_by` user is not the same as the user performing the Archive. Audit fields updated include last_modified_timestamp, last_modified_by. Any existing lock is released when Archiving a integration. Currently, there is no unarchive mechanism.
      operationId: ArchiveV1ArchiveByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The version to archive. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:download:
    get:
      tags:
      - versions
      summary: DownloadV1DownloadByName
      description: Downloads an integration. Retrieves the `IntegrationVersion` for a given `integration_id` and returns the response as a string.
      operationId: DownloadV1DownloadByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The version to download. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      - name: fileFormat
        in: query
        description: 'File format for download request. (Acceptable values are: "FILE_FORMAT_UNSPECIFIED", "JSON", "YAML")'
        style: form
        explode: true
        schema:
          type: string
          default: FILE_FORMAT_UNSPECIFIED
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:validate:
    post:
      tags:
      - versions
      summary: ValidateV1ValidateByName
      description: Validates the given integration. If the id doesn't exist, a NotFoundException is thrown. If validation fails a CanonicalCodeException is thrown. If there was no failure an empty response is returned.
      operationId: ValidateV1ValidateByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The version to validate. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{integrationVersion}:takeoverEditLock:
    post:
      tags:
      - versions
      summary: TakeoverEditLockV1TakeoverEditLockByIntegrationVersion
      description: Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It then performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the integration as a SNAPSHOT and then creates a new DRAFT version with the `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set to the current timestamp). Both the `locked_by` and `user_taking_over` are notified via email about the takeover. This RPC throws an exception if the integration is not in DRAFT status or if the `locked_by` and `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the same as an edit of the integration, and hence shares ACLs with edit. Audit fields updated include last_modified_timestamp, last_modified_by.
      operationId: TakeoverEditLockV1TakeoverEditLockByIntegrationVersion
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: integrationVersion
        in: path
        description: 'Required. The version to take over edit lock. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:unpublish:
    post:
      tags:
      - versions
      summary: UnpublishV1UnpublishByName
      description: Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the version being snapshot is not ACTIVE. Audit fields added include action, action_by, action_timestamp.
      operationId: UnpublishV1UnpublishByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The version to deactivate. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:deactivate:
    post:
      tags:
      - versions
      summary: DeactivateV1DeactivateByName
      description: Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the version being snapshot is not ACTIVE. Audit fields added include action, action_by, action_timestamp.
      operationId: DeactivateV1DeactivateByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The version to deactivate. Format: projects/{project}/locations/{location}/integrations/{integration}/versions/{version}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/versions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:lift:
    post:
      tags:
      - suspensions
      summary: LiftV1LiftByName
      description: '* Lifts suspension for advanced suspension task. Fetch corresponding suspension with provided suspension Id, resolve suspension, and set up suspension result for the Suspension Task.'
      operationId: LiftV1LiftByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. The resource that the suspension belongs to. "projects/{project}/locations/{location}/products/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}" format.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaLiftSuspensionRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaLiftSuspensionResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/suspensions:
    get:
      tags:
      - suspensions
      summary: ListV1SuspensionsByParent
      description: '* Lists suspensions associated with a specific execution. Only those with permissions to resolve the relevant suspensions will be able to view them.'
      operationId: ListV1SuspensionsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$
          type: string
      - name: pageToken
        in: query
        description: Token to retrieve a specific page.
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: Field name to order by.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Maximum number of entries in the response.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: filter
        in: query
        description: Standard filter field.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListSuspensionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:resolve:
    post:
      tags:
      - suspensions
      summary: ResolveV1ResolveByName
      description: '* Resolves (lifts/rejects) any number of suspensions. If the integration is already running, only the status of the suspension is updated. Otherwise, the suspended integration will begin execution again.'
      operationId: ResolveV1ResolveByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id}
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+/suspensions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaResolveSuspensionRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:cancel:
    post:
      tags:
      - executions
      summary: CancelV1CancelByName
      description: Cancellation of an execution
      operationId: CancelV1CancelByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The execution resource name. Format: projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_id}/executions/{execution_id}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+/executions/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCancelExecutionResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/executions:
    get:
      tags:
      - executions
      summary: ListV1ExecutionsByParent
      description: Lists the results of all the integration executions. The response includes the same information as the [execution log](https://cloud.google.com/application-integration/docs/viewing-logs) in the Integration UI.
      operationId: ListV1ExecutionsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The parent resource name of the integration execution.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      - name: filterParams.workflowName
        in: query
        description: Workflow name.
        style: form
        explode: true
        schema:
          type: string
      - name: readMask
        in: query
        description: Optional. View mask for the response data. If set, only the field specified will be returned as part of the result. If not set, all fields in event execution info will be filled and returned.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.parameterKey
        in: query
        description: Param key. DEPRECATED. User parameter_pair_key instead.
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: Optional. The results would be returned in order you specified here. Currently supporting "last_modified_time" and "create_time".
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: Optional. The token returned in the previous response.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.taskStatuses
        in: query
        description: List of possible task statuses.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.startTime
        in: query
        description: Start timestamp.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Optional. The size of entries in the response.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: filterParams.eventStatuses
        in: query
        description: List of possible event statuses.
        style: form
        explode: true
        schema:
          type: string
      - name: truncateParams
        in: query
        description: Optional. If true, the service will truncate the params to only keep the first 1000 characters of string params and empty the executions in order to make response smaller. Only works for UI and when the params fields are not filtered out.
        style: form
        explode: true
        schema:
          type: boolean
      - name: filterParams.parameterPairKey
        in: query
        description: Param key in the key value pair filter.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.endTime
        in: query
        description: End timestamp.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.parameterType
        in: query
        description: Param type.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.parameterValue
        in: query
        description: Param value. DEPRECATED. User parameter_pair_value instead.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.customFilter
        in: query
        description: Optional user-provided custom filter.
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.executionId
        in: query
        description: Execution id.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: 'Optional. Standard filter field, we support filtering on all fields in EventExecutionParamIndexes table. All fields support for EQUALS, in additional: CreateTimestamp support for LESS_THAN, GREATER_THAN ParameterKey, ParameterValue, ParameterType support for HAS For example: "parameter_value" HAS \"parameter1\" Also supports operators like AND, OR, NOT For example, trigger_id=\"id1\" AND event_execution_state=\"FAILED\"'
        style: form
        explode: true
        schema:
          type: string
      - name: filterParams.parameterPairValue
        in: query
        description: Param value in the key value pair filter.
        style: form
        explode: true
        schema:
          type: string
      - name: refreshAcl
        in: query
        description: Optional. If true, the service will use the most recent acl information to list event execution infos and renew the acl cache. Note that fetching the most recent acl is synchronous, so it will increase RPC call latency.
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListExecutionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:schedule:
    post:
      tags:
      - integrations
      summary: ScheduleV1ScheduleByName
      description: Schedules an integration for execution by passing the trigger id and the scheduled time in the request body.
      operationId: ScheduleV1ScheduleByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: The integration resource name.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:archiveBundle:
    post:
      tags:
      - integrations
      summary: ArchiveBundleV1ArchiveBundleByName
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Soft-deletes the bundle.
      operationId: ArchiveBundleV1ArchiveBundleByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: 'Required. The bundle to archive. Format: projects/{project}/locations/{location}/integrations/{integration}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:test:
    post:
      tags:
      - integrations
      summary: TestV1TestByName
      description: Execute the integration in draft state
      operationId: TestV1TestByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Output only. Auto-generated primary key.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaTestIntegrationsRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaTestIntegrationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}:monitorexecutionstats:
    post:
      tags:
      - integrations
      summary: MonitorexecutionstatsV1MonitorexecutionstatsByParent
      description: Get execution stats
      operationId: MonitorexecutionstatsV1MonitorexecutionstatsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent resource name: {parent=projects/*/locations/*}.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:execute:
    post:
      tags:
      - integrations
      summary: ExecuteV1ExecuteByName
      description: Executes integrations synchronously by passing the trigger id in the request body. The request is not returned until the requested executions are either fulfilled or experienced an error. If the integration name is not specified (passing `-`), all of the associated integration under the given trigger_id will be executed. Otherwise only the specified integration for the given `trigger_id` is executed. This is helpful for execution the integration from UI.
      operationId: ExecuteV1ExecuteByName
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. The integration resource name.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+/integrations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/integrations:
    get:
      tags:
      - integrations
      summary: ListV1IntegrationsByParent
      description: Returns the list of all integrations in the specified project.
      operationId: ListV1IntegrationsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Project and location from which the integrations should be listed. Format: projects/{project}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      - name: orderBy
        in: query
        description: 'The results would be returned in order you specified here. Supported sort keys are: Descending sort order by "last_modified_time", "created_time", "snapshot_number". Ascending sort order by the integration name.'
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The page size for the resquest.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: The page token for the resquest.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filter on fields of IntegrationVersion. Fields can be compared with literal values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less than), >=" (greater than or equal to), "<=" (less than or equal to), and "!=" (inequality) operators. Negation, conjunction, and disjunction are written using NOT, AND, and OR keywords. For example, organization_id=\"1\" AND state=ACTIVE AND description:"test". Filtering cannot be performed on repeated fields like `task_config`.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListIntegrationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/cloudFunctions:
    post:
      tags:
      - cloudFunctions
      summary: CreateV1CloudFunctionsByParent
      description: Creates an cloud function project.
      operationId: CreateV1CloudFunctionsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The project that the executed integration belongs to.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCreateCloudFunctionRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCreateCloudFunctionResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/authConfigs:
    get:
      tags:
      - authConfigs
      summary: ListV1AuthConfigsByParent
      description: Lists all auth configs that match the filter. Restrict to auth configs belong to the current client only.
      operationId: ListV1AuthConfigsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: readMask
        in: query
        description: The mask which specifies fields that need to be returned in the AuthConfig's response.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: The token returned in the previous response.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The size of entries in the response. If unspecified, defaults to 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: parent
        in: path
        description: Required. The client, which owns this collection of AuthConfigs.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListAuthConfigsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    post:
      tags:
      - authConfigs
      summary: CreateV1AuthConfigsByParent
      description: Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store the encrypted credentials in Spanner. Returns the encrypted auth config.
      operationId: CreateV1AuthConfigsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: clientCertificate.encryptedPrivateKey
        in: query
        description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
        style: form
        explode: true
        schema:
          type: string
      - name: clientCertificate.passphrase
        in: query
        description: "'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key."
        style: form
        explode: true
        schema:
          type: string
      - name: clientCertificate.sslCertificate
        in: query
        description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. "projects/{project}/locations/{location}" format.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAuthConfig'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAuthConfig'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/certificates:
    get:
      tags:
      - certificates
      summary: ListV1CertificatesByParent
      description: List all the certificates that match the filter. Restrict to certificate of current client only.
      operationId: ListV1CertificatesByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filtering as supported in https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: The token returned in the previous response.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The client, which owns this collection of Certificates.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: The size of entries in the response. If unspecified, defaults to 100.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: readMask
        in: query
        description: The mask which specifies fields that need to be returned in the Certificate's response.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListCertificatesResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    post:
      tags:
      - certificates
      summary: CreateV1CertificatesByParent
      description: Creates a new certificate. The certificate will be registered to the trawler service and will be encrypted using cloud KMS and stored in Spanner Returns the certificate.
      operationId: CreateV1CertificatesByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. "projects/{project}/locations/{location}" format.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCertificate'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCertificate'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}:createBundle:
    post:
      tags:
      - products
      summary: CreateBundleV1CreateBundleByParent
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Create a bundle.
      operationId: CreateBundleV1CreateBundleByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The location resource of the request.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCreateBundleRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCreateBundleResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}:listTaskEntities:
    get:
      tags:
      - products
      summary: ListTaskEntitiesV1ListTaskEntitiesByParent
      description: This is a UI only method and will be moved away. Returns a list of common tasks.
      operationId: ListTaskEntitiesV1ListTaskEntitiesByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: Required. The location resource of the request. This is not going to be used but preserve the field for future.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/products/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/runtimeActionSchemas:
    get:
      tags:
      - runtimeActionSchemas
      summary: ListV1RuntimeActionSchemasByParent
      description: Lists the JSON schemas for the inputs and outputs of actions, filtered by action name.
      operationId: ListV1RuntimeActionSchemasByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filter. Only the action field with literal equality operator is supported.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Parent resource of RuntimeActionSchema. Format: projects/{project}/locations/{location}/connections/{connection}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/connections/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/runtimeEntitySchemas:
    get:
      tags:
      - runtimeEntitySchemas
      summary: ListV1RuntimeEntitySchemasByParent
      description: Lists the JSON schemas for the properties of runtime entities, filtered by entity name.
      operationId: ListV1RuntimeEntitySchemasByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: parent
        in: path
        description: 'Required. Parent resource of RuntimeEntitySchema. Format: projects/{project}/locations/{location}/connections/{connection}'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/connections/[^/]+$
          type: string
      - name: filter
        in: query
        description: Filter. Only the entity field with literal equality operator is supported.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/connections:
    get:
      tags:
      - connections
      summary: ListV1ConnectionsByParent
      description: Lists Connections in a given project and location.
      operationId: ListV1ConnectionsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: Filter.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: orderBy
        in: query
        description: Order by parameters.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: Page token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Parent resource of the Connection, of the form: `projects/*/locations/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaListConnectionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/clients:provision:
    post:
      tags:
      - clients
      summary: ProvisionV1ClientsProvisionByParent
      description: Perform the provisioning steps to enable a user GCP project to use IP. If GCP project already registered on IP end via Apigee Integration, provisioning will fail.
      operationId: ProvisionV1ClientsProvisionByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Required: The ID of the GCP Project to be provisioned.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaProvisionClientRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/clients:deprovision:
    post:
      tags:
      - clients
      summary: DeprovisionV1ClientsDeprovisionByParent
      description: Perform the deprovisioning steps to disable a user GCP project to use IP and purge all related data in a wipeout-compliant way.
      operationId: DeprovisionV1ClientsDeprovisionByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Required: The ID of the GCP Project to be deprovisioned.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/clients:
    get:
      tags:
      - locations
      summary: GetClientsV1ClientsByParent
      description: Gets the client configuration for the given project and location resource name
      operationId: GetClientsV1ClientsByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Required: The ID of the GCP Project to be provisioned.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaGetClientResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/clientmetadata:
    get:
      tags:
      - projects
      summary: GetClientmetadataV1ClientmetadataByParent
      description: Gets the metadata info for the requested client
      operationId: GetClientmetadataV1ClientmetadataByParent
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. Required: The ID of the GCP Project to be provisioned.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaGetClientMetadataResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/callback:generateToken:
    get:
      tags:
      - callback
      summary: GenerateTokenV1CallbackGenerateToken
      description: Receives the auth code and auth config id to combine that with the client id and secret to retrieve access tokens from the token endpoint. Returns either a success or error message when it's done.
      operationId: GenerateTokenV1CallbackGenerateToken
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: redirectUri
        in: query
        description: Redirect uri of the auth code request
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: The auth config id for the given request
        style: form
        explode: true
        schema:
          type: string
      - name: code
        in: query
        description: The auth code for the given request
        style: form
        explode: true
        schema:
          type: string
      - name: gcpProjectId
        in: query
        description: The gcp project id of the request
        style: form
        explode: true
        schema:
          type: string
      - name: product
        in: query
        description: 'Which product sends the request (Acceptable values are: "UNSPECIFIED_PRODUCT", "IP", "APIGEE", "SECURITY")'
        style: form
        explode: true
        schema:
          type: string
          default: UNSPECIFIED_PRODUCT
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaGenerateTokenResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/connectorPlatformRegions:enumerate:
    get:
      tags:
      - connectorPlatformRegions
      summary: EnumerateV1ConnectorPlatformRegionsEnumerate
      description: Enumerates the regions for which Connector Platform is provisioned.
      operationId: EnumerateV1ConnectorPlatformRegionsEnumerate
      parameters:
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
components:
  schemas:
    GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse:
      title: GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Next page token.
        runtimeActionSchemas:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaRuntimeActionSchema'
          description: Runtime action schemas.
      description: Response for listing RuntimeActionSchemas for a specific Connection.
    EnterpriseCrmEventbusProtoSuccessPolicy:
      title: EnterpriseCrmEventbusProtoSuccessPolicy
      type: object
      properties:
        finalState:
          allOf:
          - $ref: '#/components/schemas/FinalState'
          - description: State to which the execution snapshot status will be set if the task succeeds.
      description: Policy that dictates the behavior for the task after it completes successfully.
    GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse:
      title: GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The token returned in the previous response.
        executionSnapshots:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionSnapshot'
          description: Required. The detailed information for the execution snapshot.
      description: Response for listing the integration execution snapshot.
    EnterpriseCrmEventbusProtoConditionResult:
      title: EnterpriseCrmEventbusProtoConditionResult
      type: object
      properties:
        currentTaskNumber:
          type: string
          description: the current task number.
        nextTaskNumber:
          type: string
          description: the next task number.
        result:
          type: boolean
          description: the result comes out after evaluate the combined condition. True if there's no combined condition specified.
      description: Contains the combined condition calculation results.
    GoogleCloudIntegrationsV1alphaSfdcInstance:
      title: GoogleCloudIntegrationsV1alphaSfdcInstance
      type: object
      properties:
        authConfigId:
          type: array
          items:
            type: string
          description: A list of AuthConfigs that can be tried to open the channel to SFDC
        deleteTime:
          type: string
          description: Output only. Time when the instance was deleted. Empty if not deleted.
        sfdcOrgId:
          type: string
          description: The SFDC Org Id. This is defined in salesforce.
        description:
          type: string
          description: A description of the sfdc instance.
        serviceAuthority:
          type: string
          description: URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig).
        name:
          type: string
          description: Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
        createTime:
          type: string
          description: Output only. Time when the instance is created
        displayName:
          type: string
          description: User selected unique name/alias to easily reference an instance.
        updateTime:
          type: string
          description: Output only. Time when the instance was last updated
      description: The SfdcInstance resource use to hold channels and connection config data.
    GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse:
      title: GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The token used to retrieve the next page of results.
        sfdcChannels:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcChannel'
          description: The list of SfdcChannels retrieved.
      description: Response to list SfdcChannels.
    GoogleCloudIntegrationsV1alphaUpdateBundleRequest:
      title: GoogleCloudIntegrationsV1alphaUpdateBundleRequest
      type: object
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig'
          - description: This proto holds the core runner data in the bundle task. It is not expected to be directly edited by the user. Instead, a default value will be provided at the task creation time.
      description: THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Request message for Bundle update
    EnterpriseCrmEventbusProtoProtoParameterArray:
      title: EnterpriseCrmEventbusProtoProtoParameterArray
      type: object
      properties:
        protoValues:
          type: array
          items: {}
          description: ''
    EnterpriseCrmLoggingGwsSanitizeOptions:
      title: EnterpriseCrmLoggingGwsSanitizeOptions
      type: object
      properties:
        sanitizeType:
          $ref: '#/components/schemas/SanitizeType'
        isAlreadySanitized:
          type: boolean
          description: If true, the value has already been sanitized and needs no further sanitization. For instance, a D3 customer id is already an obfuscated entity and *might not* need further sanitization.
        logType:
          type: array
          items:
            $ref: '#/components/schemas/LogType'
          description: To which type(s) of logs the sanitize options apply.
        privacy:
          $ref: '#/components/schemas/Privacy'
      description: "Identifies whether a field contains, or may contain, PII or sensitive data, and how to sanitize the field if it does. If a field's privacy type cannot be determined then it is sanitized (e.g., scrubbed). The specific sanitizer implementation is determined by run-time configuration and environment options (e.g., prod vs. qa). next_id: 5"
    EnterpriseCrmEventbusProtoNextTask:
      title: EnterpriseCrmEventbusProtoNextTask
      type: object
      properties:
        combinedConditions:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoCombinedCondition'
          description: 'Combined condition for this task to become an eligible next task. Each of these combined_conditions are joined with logical OR. DEPRECATED: use `condition`'
        description:
          type: string
          description: User-provided description intended to give more business context about the next task edge or condition.
        taskConfigId:
          type: string
          description: ID of the next task.
        condition:
          type: string
          description: Standard filter expression for this task to become an eligible next task.
        taskNumber:
          type: string
          description: Task number of the next task.
        label:
          type: string
          description: User-provided label that is attached to this edge in the UI.
      description: The task that is next in line to be executed, if the condition specified evaluated to true.
    GoogleCloudIntegrationsV1alphaServiceAccountCredentials:
      title: GoogleCloudIntegrationsV1alphaServiceAccountCredentials
      type: object
      properties:
        scope:
          type: string
          description: A space-delimited list of requested scope permissions.
        serviceAccount:
          type: string
          description: Name of the service account that has the permission to make the request.
      description: Represents the service account which can be used to generate access token for authenticating the service call.
    GoogleCloudConnectorsV1AuthConfigUserPassword:
      title: GoogleCloudConnectorsV1AuthConfigUserPassword
      type: object
      properties:
        password:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1Secret'
          - description: Secret provides a reference to entries in Secret Manager.
        username:
          type: string
          description: Username.
      description: Parameters to support Username and Password Authentication.
    EnterpriseCrmEventbusProtoFunctionType:
      title: EnterpriseCrmEventbusProtoFunctionType
      type: object
      properties:
        protoFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoProtoFunction'
        doubleArrayFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoDoubleArrayFunction'
        intFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoIntFunction'
        booleanArrayFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBooleanArrayFunction'
        intArrayFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoIntArrayFunction'
        baseFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBaseFunction'
        booleanFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBooleanFunction'
        stringArrayFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoStringArrayFunction'
        jsonFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoJsonFunction'
        stringFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoStringFunction'
        doubleFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoDoubleFunction'
        protoArrayFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoProtoArrayFunction'
    GoogleCloudIntegrationsV1alphaListIntegrationsResponse:
      title: GoogleCloudIntegrationsV1alphaListIntegrationsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: The next page token for the response.
        integrations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegration'
          description: The integrations which match the request.
      description: Response for ListIntegrations.
    EnterpriseCrmEventbusProtoCondition:
      title: EnterpriseCrmEventbusProtoCondition
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoValueType'
          - description: Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
        operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          - description: Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.
        eventPropertyKey:
          type: string
          description: Key that's evaluated against the `value`. Please note the data type of the runtime value associated with the key should match the data type of `value`, else an IllegalArgumentException is thrown.
      description: Condition that uses `operator` to evaluate the key against the value.
    EnterpriseCrmFrontendsEventbusProtoParameterMapEntry:
      title: EnterpriseCrmFrontendsEventbusProtoParameterMapEntry
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterMapField'
          - description: Field represents either the key or value in an entry.
        value:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterMapField'
          - description: Field represents either the key or value in an entry.
      description: Entry is a pair of key and value.
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRule:
      title: EnterpriseCrmEventbusProtoParamSpecEntryValidationRule
      type: object
      properties:
        intRange:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange'
          - description: Range used to validate longs and ints.
        doubleRange:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange'
          - description: Range used to validate doubles and floats.
        stringRegex:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex'
          - description: Rule used to validate strings.
    GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer:
      title: GoogleCloudConnectorsV1AuthConfigOauth2JwtBearer
      type: object
      properties:
        clientKey:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1Secret'
          - description: Secret provides a reference to entries in Secret Manager.
        jwtClaims:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims'
          - description: JWT claims used for the jwt-bearer authorization grant.
      description: Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
    EnterpriseCrmEventbusProtoFunction:
      title: EnterpriseCrmEventbusProtoFunction
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTransformExpression'
          description: List of parameters required for the transformation.
        functionType:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoFunctionType'
    GoogleCloudIntegrationsV1alphaSuspensionApprovalExpiration:
      title: GoogleCloudIntegrationsV1alphaSuspensionApprovalExpiration
      type: object
      properties:
        expireTime:
          type: string
          description: Output only. Time after which the suspension expires, if no action taken.
        remindTime:
          type: string
          description: Time after the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.
        liftWhenExpired:
          type: boolean
          description: Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.
      description: Expiration configs for the approval request.
    EnterpriseCrmFrontendsEventbusProtoEventParameters:
      title: EnterpriseCrmFrontendsEventbusProtoEventParameters
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry'
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same workflow execution.
      description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
    GoogleCloudIntegrationsV1alphaListExecutionsResponse:
      title: GoogleCloudIntegrationsV1alphaListExecutionsResponse
      type: object
      properties:
        executionInfos:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo'
          description: Required. The detailed information of requested executions.
        executions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaExecution'
          description: The detailed information of requested executions
        nextPageToken:
          type: string
          description: The token used to retrieve the next page results.
      description: Response for listing the integration execution data.
    GoogleCloudIntegrationsV1alphaLiftSuspensionResponse:
      title: GoogleCloudIntegrationsV1alphaLiftSuspensionResponse
      type: object
      properties:
        eventExecutionInfoId:
          type: string
          description: Execution Id that will be returned
      description: Response of lift Suspense
    GoogleCloudIntegrationsV1alphaTestIntegrationsRequest:
      title: GoogleCloudIntegrationsV1alphaTestIntegrationsRequest
      type: object
      properties:
        integrationVersion:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion'
          - description: The integration version definition.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters'
          - description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
        clientId:
          type: string
          description: Required. This is used to identify the client on whose behalf the event will be executed.
        testMode:
          type: boolean
          description: Optional. Can be specified in the event request, otherwise false (default). If true, enables tasks with condition "test_mode = true". If false, disables tasks with condition "test_mode = true" if global test mode (set by platform) is also false {@link EventBusConfig}.
        deadlineSecondsTime:
          type: string
          description: Optional. custom deadline of the rpc
        triggerId:
          type: string
          description: Required. The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
        inputParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaValueType'
          description: Optional. Input parameters used during integration execution.
      description: The request for testing an integration.
    EnterpriseCrmEventbusProtoBaseFunction:
      title: EnterpriseCrmEventbusProtoBaseFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName5'
    EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata:
      title: EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata
      type: object
      properties:
        taskName:
          type: string
          description: the task name associated with this snapshot. Could be empty.
        eventAttemptNum:
          type: integer
          description: the event attempt number this snapshot belongs to.
          contentEncoding: int32
        taskNumber:
          type: string
          description: The task number associated with this snapshot. Could be empty.
        taskAttemptNum:
          type: integer
          description: the task attempt number this snapshot belongs to. Could be empty.
          contentEncoding: int32
    GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse:
      title: GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse
      type: object
      properties:
        runtimeEntitySchemas:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaRuntimeEntitySchema'
          description: Runtime entity schemas.
        nextPageToken:
          type: string
          description: Next page token.
      description: Response for listing RuntimeEntitySchemas for a specific Connection.
    GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims:
      title: GoogleCloudConnectorsV1AuthConfigOauth2JwtBearerJwtClaims
      type: object
      properties:
        subject:
          type: string
          description: Value for the "sub" claim.
        issuer:
          type: string
          description: Value for the "iss" claim.
        audience:
          type: string
          description: Value for the "aud" claim.
      description: JWT claims used for the jwt-bearer authorization grant.
    GoogleCloudIntegrationsV1alphaBooleanParameterArray:
      title: GoogleCloudIntegrationsV1alphaBooleanParameterArray
      type: object
      properties:
        booleanValues:
          type: array
          items:
            type: boolean
          description: Boolean array.
      description: This message only contains a field of boolean array.
    EnterpriseCrmEventbusProtoFieldMappingConfig:
      title: EnterpriseCrmEventbusProtoFieldMappingConfig
      type: object
      properties:
        mappedFields:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoMappedField'
          description: ''
      description: 'Field Mapping Config to map multiple output fields values from input fields values. Next id: 2'
    GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue:
      title: GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue
      type: object
      properties:
        percentage:
          type: integer
          description: Percentage threshold.
          contentEncoding: int32
        absolute:
          type: string
          description: Absolute value threshold.
      description: The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
    GoogleCloudIntegrationsV1alphaCreateBundleResponse:
      title: GoogleCloudIntegrationsV1alphaCreateBundleResponse
      type: object
      properties:
        triggerId:
          type: string
          description: trigger_id of the bundle task
        config:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig'
          - description: This proto holds the core runner data in the bundle task. It is not expected to be directly edited by the user. Instead, a default value will be provided at the task creation time.
      description: Response for create bundle.
    EnterpriseCrmEventbusProtoParameterValueType:
      title: EnterpriseCrmEventbusProtoParameterValueType
      type: object
      properties:
        doubleValue:
          type: number
        stringValue:
          type: string
        booleanArray:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBooleanParameterArray'
        protoArray:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoProtoParameterArray'
        serializedObjectValue:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSerializedObjectParameter'
        protoValue:
          type: object
          additionalProperties: {}
        intArray:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoIntParameterArray'
        booleanValue:
          type: boolean
        intValue:
          type: string
        stringArray:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoStringParameterArray'
        doubleArray:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoDoubleParameterArray'
      description: 'LINT.IfChange To support various types of parameter values. Next available id: 14'
    GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest:
      title: GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest
      type: object
      properties:
        inputParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaValueType'
          description: Optional. Input parameters used by integration execution.
        requestId:
          type: string
          description: 'This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned.'
        scheduleTime:
          type: string
          description: The time that the integration should be executed. If the time is less or equal to the current time, the integration is executed immediately.
        triggerId:
          type: string
          description: Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id)
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoEventParameters'
          - description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
        parameterEntries:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry'
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
      description: The request for scheduling an integration.
    EnterpriseCrmEventbusProtoDoubleArrayFunction:
      title: EnterpriseCrmEventbusProtoDoubleArrayFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName1'
    EnterpriseCrmEventbusProtoValueType:
      title: EnterpriseCrmEventbusProtoValueType
      type: object
      properties:
        intValue:
          type: string
        doubleArray: {}
        booleanValue:
          type: boolean
        protoValue:
          type: object
          additionalProperties: {}
        intArray: {}
        doubleValue:
          type: number
        stringValue:
          type: string
        stringArray: {}
      description: Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
    EnterpriseCrmEventbusProtoIntParameterArray:
      title: EnterpriseCrmEventbusProtoIntParameterArray
      type: object
      properties:
        intValues:
          type: array
          items:
            type: string
          description: ''
    EnterpriseCrmCardsTemplatesAplosSeriesData:
      title: EnterpriseCrmCardsTemplatesAplosSeriesData
      type: object
      properties:
        rows:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesDataRow'
          description: A single Series Row
      description: Data used to render an Aplos Series card.
    EnterpriseCrmEventbusProtoEventBusProperties:
      title: EnterpriseCrmEventbusProtoEventBusProperties
      type: object
      properties:
        properties:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoPropertyEntry'
          description: An unordered list of property entries.
      description: LINT.IfChange This message is used for storing key value pair properties for each Event / Task in the EventBus. Please see go/cloud-crm-eng/platform/event_bus.md for more details.
    GoogleCloudIntegrationsV1alphaValueType:
      title: GoogleCloudIntegrationsV1alphaValueType
      type: object
      properties:
        doubleArray:
          description: Double Number Array.
        booleanArray:
          description: Boolean Array.
        stringArray:
          description: String Array.
        booleanValue:
          type: boolean
          description: Boolean.
        jsonValue:
          type: string
          description: Json.
        doubleValue:
          type: number
          description: Double Number.
        intValue:
          type: string
          description: Integer.
        intArray:
          description: Integer Array.
        stringValue:
          type: string
          description: String.
      description: The type of the parameter.
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent
      type: object
      properties:
        groupBy:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestGroupBy'
          - description: MashQuery GroupBy parameters.
        pointOperation:
          type: string
          description: Optional. optional, Point Operation on single query or joined query.
        borgTaskMetric:
          allOf:
          - $ref: '#/components/schemas/BorgTaskMetric'
          - description: Required. The metric for monarch.BorgTask.
        fetchFilters:
          type: array
          items:
            type: string
          description: Optional. optional, filters for Fetch Raw, "metric:client_id" not supported.
        timeDelta:
          type: string
          description: Required. Window time delta.
        dataFilters:
          type: array
          items:
            type: string
          description: Optional. optional, filters on fetched data, "metric:client_id" not supported.
      description: The components for constructing MashQuery.
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse
      type: object
      properties:
        aplosSeriesListData:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesListData'
          - description: Data used for Aplos charts that accept multiple Series.
        tableData:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmCardsTabularData'
          - description: The generic data format returned from all connectors.
      description: The response for getting Execution stats.
    GoogleCloudIntegrationsV1alphaCloudSchedulerConfig:
      title: GoogleCloudIntegrationsV1alphaCloudSchedulerConfig
      type: object
      properties:
        errorMessage:
          type: string
          description: Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations
        location:
          type: string
          description: Required. The location where associated cloud scheduler job will be created
        cronTab:
          type: string
          description: Required. The cron tab of cloud scheduler trigger.
        serviceAccountEmail:
          type: string
          description: Required. Service account used by Cloud Scheduler to trigger the integration at scheduled time
      description: Cloud Scheduler Trigger configuration
    GoogleCloudIntegrationsV1alphaProjectProperties:
      title: GoogleCloudIntegrationsV1alphaProjectProperties
      type: object
      properties:
        provisionedRegions:
          type: array
          items:
            type: string
          description: A list of provisioned regions on the current project
        ipEnablementState:
          allOf:
          - $ref: '#/components/schemas/IpEnablementState'
          - description: An enum value of what the enablement state is for the given project
      description: Metadata information for the given project
    EnterpriseCrmCardsTabularData:
      title: EnterpriseCrmCardsTabularData
      type: object
      properties:
        rows:
          type: array
          items: {}
          description: Ordered list of table rows.
        headers:
          type: array
          items:
            type: string
          description: Ordered list of column headers.
      description: The generic data format returned from all connectors.
    EnterpriseCrmEventbusProtoIntFunction:
      title: EnterpriseCrmEventbusProtoIntFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName2'
    GoogleCloudIntegrationsV1alphaExecutionDetails:
      title: GoogleCloudIntegrationsV1alphaExecutionDetails
      type: object
      properties:
        executionSnapshots:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaExecutionSnapshot'
          description: List of snapshots taken during the execution.
        attemptStats:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAttemptStats'
          description: List of Start and end time of the execution attempts.
        state:
          allOf:
          - $ref: '#/components/schemas/State1'
          - description: Status of the execution.
      description: 'Contains the details of the execution info: this includes the tasks execution details plus the event execution statistics.'
    EnterpriseCrmEventbusProtoTaskUiModuleConfig:
      title: EnterpriseCrmEventbusProtoTaskUiModuleConfig
      type: object
      properties:
        moduleId:
          allOf:
          - $ref: '#/components/schemas/ModuleId'
          - description: ID of the config module.
      description: Task author would use this type to configure a config module.
    EnterpriseCrmCardsTemplatesAplosSeriesListDataSeries:
      title: EnterpriseCrmCardsTemplatesAplosSeriesListDataSeries
      type: object
      properties:
        name:
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmCardsTemplatesAplosSeriesData'
          - description: Data used to render an Aplos Series card.
    GoogleCloudIntegrationsV1alphaIntegrationVersion:
      title: GoogleCloudIntegrationsV1alphaIntegrationVersion
      type: object
      properties:
        teardown:
          description: Optional. Contains a graph of tasks that will be executed before putting the event in a terminal state (SUCCEEDED/FAILED/FATAL), regardless of success or failure, similar to "finally" in code.
        updateTime:
          type: string
          description: Output only. Auto-generated.
        triggerConfigsInternal:
          type: array
          items: {}
          description: Optional. Trigger configurations.
        databasePersistencePolicy:
          allOf:
          - $ref: '#/components/schemas/DatabasePersistencePolicy'
          - description: Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
        lockHolder:
          type: string
          description: Optional. The edit lock holder's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        name:
          type: string
          description: Output only. Auto-generated primary key.
        integrationParametersInternal:
          description: Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
        userLabel:
          type: string
          description: Optional. A user-defined label that annotates an integration version. Typically, this is only set when the integration version is created.
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Output only. User should not set it as an input.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          - description: Output only. Generated by eventbus. User should not set it as an input.
        taskConfigs:
          type: array
          items: {}
          description: Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
        integrationParameters:
          type: array
          items: {}
          description: Optional. Parameters that are expected to be passed to the integration when an event is triggered. This consists of all the parameters that are expected in the integration execution. This gives the user the ability to provide default values, add information like PII and also provide data types of each parameter.
        triggerConfigs:
          type: array
          items: {}
          description: Optional. Trigger configurations.
        parentTemplateId:
          type: string
          description: Optional. The id of the template which was used to create this integration_version.
        lastModifierEmail:
          type: string
          description: Optional. The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        snapshotNumber:
          type: string
          description: Optional. An increasing sequence that is set when a new snapshot is created. The last created snapshot can be identified by [workflow_name, org_id latest(snapshot_number)]. However, last created snapshot need not be same as the HEAD. So users should always use "HEAD" tag to identify the head.
        createTime:
          type: string
          description: Output only. Auto-generated.
        taskConfigsInternal:
          type: array
          items: {}
          description: Optional. Task configuration for the integration. It's optional, but the integration doesn't do anything without task_configs.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          - description: Optional. The origin that indicates where this integration is coming from.
        description:
          type: string
          description: Optional. The integration description.
      description: The integration version definition.
    EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray:
      title: EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray
      type: object
      properties:
        booleanValues:
          type: array
          items:
            type: boolean
          description: ''
    GoogleCloudIntegrationsV1alphaGetBundleResponse:
      title: GoogleCloudIntegrationsV1alphaGetBundleResponse
      type: object
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig'
          - description: This proto holds the core runner data in the bundle task. It is not expected to be directly edited by the user. Instead, a default value will be provided at the task creation time.
      description: Response for GetBundle.
    EnterpriseCrmEventbusProtoTaskAlertConfig:
      title: EnterpriseCrmEventbusProtoTaskAlertConfig
      type: object
      properties:
        durationThresholdMs:
          type: string
          description: Should be specified only for TASK_AVERAGE_DURATION and TASK_PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
        alertDisabled:
          type: boolean
          description: Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
        playbookUrl:
          type: string
          description: Link to a playbook for resolving the issue that triggered this alert.
        metricType:
          $ref: '#/components/schemas/MetricType'
        thresholdType:
          allOf:
          - $ref: '#/components/schemas/ThresholdType'
          - description: The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
        aggregationPeriod:
          type: string
          description: The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week).
        onlyFinalAttempt:
          type: boolean
          description: Only count final task attempts, not retries.
        warningEnumList:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList'
          - description: List of error enums for alerts.
        numAggregationPeriods:
          type: integer
          description: For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
          contentEncoding: int32
        clientId:
          type: string
          description: Client associated with this alert configuration. Must be a client enabled in one of the containing workflow's triggers.
        thresholdValue:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue'
          - description: The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig. See go/eventbus-alert-config-examples
        errorEnumList:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList'
          - description: List of error enums for alerts.
        alertName:
          type: string
          description: A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique in within the scope of the containing workflow.
      description: Message to be used to configure alerting in the {@code TaskConfig} protos for tasks in an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
    GoogleCloudIntegrationsV1alphaSuspension:
      title: GoogleCloudIntegrationsV1alphaSuspension
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/State2'
          - description: Required. State of this suspension, indicating what action a resolver has taken.
        audit:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSuspensionAudit'
          - description: Contains when and by whom the suspension was resolved.
        suspensionConfig:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSuspensionConfig'
        eventExecutionInfoId:
          type: string
          description: Required. ID of the associated execution.
        taskId:
          type: string
          description: Required. Task id of the associated SuspensionTask.
        approvalConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig'
          - description: Configurations for approving the Suspension.
        createTime:
          type: string
          description: Output only. Auto-generated.
        name:
          type: string
          description: Resource name for suspensions suspension/{suspension_id}
        integration:
          type: string
          description: Required. The name of the originating integration.
        lastModifyTime:
          type: string
          description: Output only. Auto-generated.
      description: A record representing a suspension.
    EnterpriseCrmFrontendsEventbusProtoStringParameterArray:
      title: EnterpriseCrmFrontendsEventbusProtoStringParameterArray
      type: object
      properties:
        stringValues:
          type: array
          items:
            type: string
          description: ''
    EnterpriseCrmEventbusProtoTaskExecutionDetails:
      title: EnterpriseCrmEventbusProtoTaskExecutionDetails
      type: object
      properties:
        taskAttemptStats:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTaskExecutionDetailsTaskAttemptStats'
          description: ''
        taskExecutionState:
          $ref: '#/components/schemas/TaskExecutionState'
        taskNumber:
          type: string
          description: Pointer to the task config it used for execution.
      description: 'Contains the details of the execution of this task. Next available id: 11'
    EnterpriseCrmEventbusProtoTaskMetadataAdmin:
      title: EnterpriseCrmEventbusProtoTaskMetadataAdmin
      type: object
      properties:
        googleGroupEmail:
          type: string
        userEmail:
          type: string
      description: Admins are owners of a Task, and have all permissions on a particular task identified by the task name. By default, Eventbus periodically scans all task metadata and syncs (adds) any new admins defined here to Zanzibar.
    GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse:
      title: GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse
      type: object
      properties:
        eventParameters:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters'
          - description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
        executionFailed:
          type: boolean
          description: Is true if any execution in the integration failed. False otherwise.
        parameterEntries:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry'
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
        executionId:
          type: string
          description: The id of the execution corresponding to this run of integration.
        outputParameters:
          type: object
          additionalProperties: {}
          description: 'OUTPUT parameters in format of Map. Where Key is the name of the parameter. Note: Name of the system generated parameters are wrapped by backtick(`) to distinguish them from the user defined parameters.'
      description: The response for executing an integration.
    EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats:
      title: EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats
      type: object
      properties:
        endTime:
          type: string
          description: The end time of the event execution for current attempt.
        startTime:
          type: string
          description: The start time of the event execution for current attempt. This could be in the future if it's been scheduled.
    GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse:
      title: GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse
      type: object
      properties:
        noPermission:
          type: boolean
          description: Whether the user has no permission on the version or not.
        integrationVersions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion'
          description: The integrations which match the request.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response for ListIntegrationVersions.
    EnterpriseCrmEventbusProtoBooleanParameterArray:
      title: EnterpriseCrmEventbusProtoBooleanParameterArray
      type: object
      properties:
        booleanValues:
          type: array
          items:
            type: boolean
          description: ''
    EnterpriseCrmFrontendsEventbusProtoRollbackStrategy:
      title: EnterpriseCrmFrontendsEventbusProtoRollbackStrategy
      type: object
      properties:
        rollbackTaskImplementationClassName:
          type: string
          description: Required. This is the name of the task that needs to be executed upon rollback of this task.
        taskNumbersToRollback:
          type: array
          items:
            type: string
          description: Required. These are the tasks numbers of the tasks whose `rollback_strategy.rollback_task_implementation_class_name` needs to be executed upon failure of this task.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters'
          - description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
      description: 'Next available id: 4'
    GoogleCloudIntegrationsV1alphaExecution:
      title: GoogleCloudIntegrationsV1alphaExecution
      type: object
      properties:
        eventExecutionDetails:
          description: The execution info about this event.
        requestParameters:
          type: object
          additionalProperties: {}
          description: Event parameters come in as part of the request.
        executionMethod:
          allOf:
          - $ref: '#/components/schemas/ExecutionMethod'
          - description: The ways user posts this event.
        name:
          type: string
          description: Auto-generated primary key.
        directSubExecutions:
          type: array
          items: {}
          description: Direct sub executions of the following Execution.
        requestParams:
          type: array
          items: {}
          description: Event parameters come in as part of the request.
        updateTime:
          type: string
          description: Output only. Last modified time of the execution.
        responseParameters:
          type: object
          additionalProperties: {}
          description: Event parameters returned as part of the response.
        triggerId:
          type: string
          description: The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
        responseParams:
          type: array
          items: {}
          description: Event parameters come out as part of the response.
        createTime:
          type: string
          description: Output only. Created time of the execution.
        executionDetails:
          description: Detailed info of this execution.
      description: The Execution resource contains detailed information of an individual integration execution.
    GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse:
      title: GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse
      type: object
      properties:
        regions:
          type: array
          items:
            type: string
          description: All regions where Connector Platform is provisioned.
      description: Response containing all provisioned regions for Connector Platform.
    GoogleCloudIntegrationsV1alphaCreateBundleRequest:
      title: GoogleCloudIntegrationsV1alphaCreateBundleRequest
      type: object
      properties:
        bundleId:
          type: string
          description: Required. name of the bundle that will be created
        secondaryCustomerOrgId:
          type: string
          description: Optional. The prefix for the SA, it should be in the format "o". This is an optional field, and if empty service account will be created per project, where we are creating bundle. This should only be used as the org ID for which we want to run the integrations in the bundle.
        integrations:
          type: array
          items:
            type: string
          description: A list of integrations that can be executed by the bundle
      description: PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. Request to create a new Bundle.
    GoogleCloudIntegrationsV1alphaExecutionSnapshot:
      title: GoogleCloudIntegrationsV1alphaExecutionSnapshot
      type: object
      properties:
        checkpointTaskNumber:
          type: string
          description: Indicates "after which checkpoint task's execution" this snapshot is taken.
        executionSnapshotMetadata:
          description: Metadata of the execution snapshot.
        params:
          type: object
          additionalProperties: {}
          description: Parameters used during the execution.
        taskExecutionDetails:
          type: array
          items: {}
          description: All of the task execution details at the given point of time.
      description: Contains the snapshot of the execution for a given checkpoint.
    EnterpriseCrmEventbusProtoStringFunction:
      title: EnterpriseCrmEventbusProtoStringFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName9'
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQuery:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQuery
      type: object
      properties:
        firstQuery:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent'
          - description: The components for constructing MashQuery.
        operationMode:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationMode'
          - description: Operation between 2 query
        secondQuery:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryComponent'
          - description: The components for constructing MashQuery.
      description: The MashQuery for searching data, set both queries for Join Operation.
    EnterpriseCrmEventbusProtoSerializedObjectParameter:
      title: EnterpriseCrmEventbusProtoSerializedObjectParameter
      type: object
      properties:
        objectValue:
          type: string
    EnterpriseCrmEventbusProtoIntArray:
      title: EnterpriseCrmEventbusProtoIntArray
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: ''
    CrmlogErrorCode:
      title: CrmlogErrorCode
      type: object
      properties:
        commonErrorCode:
          $ref: '#/components/schemas/CommonErrorCode'
      description: Registered ids for errors, as "oneof" enums. Each task or logical grouping of tasks may share the same enum.
    EnterpriseCrmFrontendsEventbusProtoTriggerConfig:
      title: EnterpriseCrmFrontendsEventbusProtoTriggerConfig
      type: object
      properties:
        description:
          type: string
          description: User-provided description intended to give more business context about the task.
        alertConfig:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoWorkflowAlertConfig'
          description: An alert threshold configuration for the [trigger + client + workflow] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + workflow] when published.
        triggerCriteria:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTriggerCriteria'
        startTasks:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoNextTask'
          description: Set of tasks numbers from where the workflow execution is started by this trigger. If this is empty, then workflow is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution graph).
        properties:
          type: object
          additionalProperties:
            type: string
          description: Configurable properties of the trigger, not to be confused with workflow parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub triggers.
        triggerNumber:
          type: string
          description: Required. A number to uniquely identify each trigger config within the workflow on UI.
        position:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoCoordinate'
          - description: Represents two-dimensional positions.
        label:
          type: string
          description: The user created label for a particular trigger.
        cloudSchedulerConfig:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoCloudSchedulerConfig'
          - description: Cloud Scheduler Trigger configuration
        pauseWorkflowExecutions:
          type: boolean
          description: Optional. If set to true, any upcoming requests for this trigger config will be paused and the executions will be resumed later when the flag is reset. The workflow to which this trigger config belongs has to be in ACTIVE status for the executions to be paused or resumed.
        triggerId:
          type: string
          description: The backend trigger ID.
        enabledClients:
          type: array
          items:
            type: string
          description: Required. The list of client ids which are enabled to execute the workflow using this trigger. In other words, these clients have the workflow execution privledges for this trigger. For API trigger, the client id in the incoming request is validated against the list of enabled clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled client.
        triggerType:
          $ref: '#/components/schemas/TriggerType'
        nextTasksExecutionPolicy:
          allOf:
          - $ref: '#/components/schemas/NextTasksExecutionPolicy'
          - description: Dictates how next tasks will be executed.
      description: 'Configuration detail of a trigger. Next available id: 17'
    EnterpriseCrmEventbusProtoNextTeardownTask:
      title: EnterpriseCrmEventbusProtoNextTeardownTask
      type: object
      properties:
        name:
          type: string
          description: Required. Name of the next teardown task.
      description: The teardown task that is next in line to be executed. We support only sequential execution of teardown tasks (i.e. no branching).
    EnterpriseCrmEventbusProtoEventExecutionDetails:
      title: EnterpriseCrmEventbusProtoEventExecutionDetails
      type: object
      properties:
        eventExecutionState:
          $ref: '#/components/schemas/EventExecutionState'
        eventAttemptStats:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats'
          description: ''
        nextExecutionTime:
          type: string
          description: Next scheduled execution time in case the execution status was RETRY_ON_HOLD.
        eventRetriesFromBeginningCount:
          type: integer
          description: Indicates the number of times the execution has restarted from the beginning.
          contentEncoding: int32
        logFilePath:
          type: string
          description: The log file path (aka. cns address) for this event.
        eventExecutionSnapshot:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionSnapshot'
          description: ''
        networkAddress:
          type: string
          description: The network address (aka. bns address) that indicates where the event executor is running.
        ryeLockUnheldCount:
          type: integer
          description: Used internally and shouldn't be exposed to users. A counter for the cron job to record how many times this event is in in_process state but don't have a lock consecutively/
          contentEncoding: int32
      description: 'Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10'
    EnterpriseCrmFrontendsEventbusProtoParameterMapField:
      title: EnterpriseCrmFrontendsEventbusProtoParameterMapField
      type: object
      properties:
        literalValue:
          description: Passing a literal value.
        referenceKey:
          type: string
          description: Referencing one of the WF variables.
      description: Field represents either the key or value in an entry.
    EnterpriseCrmEventbusProtoTeardown:
      title: EnterpriseCrmEventbusProtoTeardown
      type: object
      properties:
        teardownTaskConfigs:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTeardownTaskConfig'
          description: Required.
    GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse:
      title: GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse
      type: object
      properties:
        integrationVersion:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion'
          - description: The integration version definition.
      description: Response for UploadIntegrationVersion.
    EnterpriseCrmEventbusProtoLogSettings:
      title: EnterpriseCrmEventbusProtoLogSettings
      type: object
      properties:
        sanitizeOptions:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmLoggingGwsSanitizeOptions'
          - description: "Identifies whether a field contains, or may contain, PII or sensitive data, and how to sanitize the field if it does. If a field's privacy type cannot be determined then it is sanitized (e.g., scrubbed). The specific sanitizer implementation is determined by run-time configuration and environment options (e.g., prod vs. qa). next_id: 5"
        seedScope:
          $ref: '#/components/schemas/SeedScope'
        shorteningLimits:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmLoggingGwsFieldLimits'
          - description: 'Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6'
        logFieldName:
          type: string
          description: The name of corresponding logging field of the event property. If omitted, assumes the same name as the event property key.
        seedPeriod:
          $ref: '#/components/schemas/SeedPeriod'
      description: The LogSettings define the logging attributes for an event property. These attributes are used to map the property to the parameter in the log proto. Also used to define scrubbing/truncation behavior and PII information. See go/integration-platform/analytics/logging_task.md for details.
    EnterpriseCrmFrontendsEventbusProtoParameterMap:
      title: EnterpriseCrmFrontendsEventbusProtoParameterMap
      type: object
      properties:
        valueType:
          $ref: '#/components/schemas/ValueType'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterMapEntry'
          description: ''
        keyType:
          allOf:
          - $ref: '#/components/schemas/KeyType'
          - description: Option to specify key value type for all entries of the map. If provided then field types for all entries must conform to this.
      description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
    EnterpriseCrmEventbusProtoPropertyEntry:
      title: EnterpriseCrmEventbusProtoPropertyEntry
      type: object
      properties:
        key:
          type: string
          description: Key is used to retrieve the corresponding property value. This should be unique for a given fired event. The Tasks should be aware of the keys used while firing the events for them to be able to retrieve the values.
        value:
          description: Values for the defined keys. Each value can either be string, int, double or any proto message.
      description: Key-value pair of EventBus property.
    GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse:
      title: GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse
      type: object
      properties:
        content:
          type: string
          description: String representation of the integration version.
      description: Response for DownloadIntegrationVersion.
    EnterpriseCrmEventbusProtoTransformExpression:
      title: EnterpriseCrmEventbusProtoTransformExpression
      type: object
      properties:
        transformationFunctions:
          type: array
          items: {}
          description: Transformations to be applied sequentially.
        initialValue:
          description: Initial value upon which to perform transformations.
    GoogleCloudIntegrationsV1alphaRuntimeActionSchema:
      title: GoogleCloudIntegrationsV1alphaRuntimeActionSchema
      type: object
      properties:
        action:
          type: string
          description: Name of the action.
        outputSchema:
          type: string
          description: Output parameter schema for the action.
        inputSchema:
          type: string
          description: Input parameter schema for the action.
      description: Metadata of an action, including schemas for its inputs and outputs.
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestGroupBy:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestGroupBy
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
          description: Optional. optional, metrics list for GroupBy.
        reducer:
          type: string
          description: Optional. optional, reduce function for GroupBy.
      description: MashQuery GroupBy parameters.
    EnterpriseCrmEventbusProtoErrorDetail:
      title: EnterpriseCrmEventbusProtoErrorDetail
      type: object
      properties:
        taskNumber:
          type: integer
          description: The task try-number, in which, the error occurred. If zero, the error happened at the event level.
          contentEncoding: int32
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          - description: 'The severity of the error: ERROR|WARN|INFO.'
        errorCode:
          allOf:
          - $ref: '#/components/schemas/CrmlogErrorCode'
          - description: Registered ids for errors, as "oneof" enums. Each task or logical grouping of tasks may share the same enum.
        errorMessage:
          type: string
          description: The full text of the error message, including any parameters that were thrown along with the exception.
      description: An error, warning, or information message associated with a workflow.
    EnterpriseCrmFrontendsEventbusProtoProtoParameterArray:
      title: EnterpriseCrmFrontendsEventbusProtoProtoParameterArray
      type: object
      properties:
        protoValues:
          type: array
          items: {}
          description: ''
    EnterpriseCrmEventbusProtoParameterMapEntry:
      title: EnterpriseCrmEventbusProtoParameterMapEntry
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterMapField'
          - description: Field represents either the key or value in an entry.
        value:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterMapField'
          - description: Field represents either the key or value in an entry.
      description: Entry is a pair of key and value.
    GoogleCloudIntegrationsV1alphaExecutionSnapshotExecutionSnapshotMetadata:
      title: GoogleCloudIntegrationsV1alphaExecutionSnapshotExecutionSnapshotMetadata
      type: object
      properties:
        taskAttempt:
          type: integer
          description: the task attempt number this snapshot belongs to.
          contentEncoding: int32
        task:
          type: string
          description: the task name associated with this snapshot.
        executionAttempt:
          type: integer
          description: the execution attempt number this snapshot belongs to.
          contentEncoding: int32
        taskNumber:
          type: string
          description: The task number associated with this snapshot.
      description: Metadata of the execution snapshot.
    EnterpriseCrmFrontendsEventbusProtoWorkflowParameters:
      title: EnterpriseCrmFrontendsEventbusProtoWorkflowParameters
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry'
          description: Parameters are a part of Event and can be used to communiticate between different tasks that are part of the same workflow execution.
      description: LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as "children" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters.
    GoogleCloudIntegrationsV1alphaIntegrationAlertConfig:
      title: GoogleCloudIntegrationsV1alphaIntegrationAlertConfig
      type: object
      properties:
        displayName:
          type: string
          description: Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration.
        thresholdType:
          allOf:
          - $ref: '#/components/schemas/ThresholdType2'
          - description: The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
        metricType:
          allOf:
          - $ref: '#/components/schemas/MetricType2'
          - description: The type of metric.
        aggregationPeriod:
          type: string
          description: The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
        onlyFinalAttempt:
          type: boolean
          description: For either events or tasks, depending on the type of alert, count only final attempts, not retries.
        durationThreshold:
          type: string
          description: Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
        disableAlert:
          type: boolean
          description: Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert.
        thresholdValue:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue'
          - description: The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
        alertThreshold:
          type: integer
          description: For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
          contentEncoding: int32
      description: Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
    EnterpriseCrmEventbusProtoAttributes:
      title: EnterpriseCrmEventbusProtoAttributes
      type: object
      properties:
        logSettings:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoLogSettings'
          - description: The LogSettings define the logging attributes for an event property. These attributes are used to map the property to the parameter in the log proto. Also used to define scrubbing/truncation behavior and PII information. See go/integration-platform/analytics/logging_task.md for details.
        isSearchable:
          type: boolean
          description: 'Used to indicate if a ParameterEntry should be converted to ParamIndexes for ST-Spanner full-text search. DEPRECATED: use searchable.'
        taskVisibility:
          type: array
          items:
            type: string
          description: List of tasks that can view this property, if empty then all.
        isRequired:
          type: boolean
          description: Required for event execution. The validation will be done by the event bus when the event is triggered.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType2'
          - description: Things like URL, Email, Currency, Timestamp (rather than string, int64...)
        searchable:
          $ref: '#/components/schemas/Searchable'
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoValueType'
          - description: Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
      description: 'Attributes are additional options that can be associated with each event property. For more information, see go/integration-platform/event_bus/attributes_registry.md. Next available: 8'
    EnterpriseCrmEventbusProtoDoubleFunction:
      title: EnterpriseCrmEventbusProtoDoubleFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName10'
    EnterpriseCrmEventbusProtoCombinedCondition:
      title: EnterpriseCrmEventbusProtoCombinedCondition
      type: object
      properties:
        conditions:
          type: array
          items: {}
          description: A set of individual constituent conditions.
      description: This message recursively combines constituent conditions using logical AND.
    EnterpriseCrmEventbusStatsDimensions:
      title: EnterpriseCrmEventbusStatsDimensions
      type: object
      properties:
        taskNumber:
          type: string
        workflowId:
          type: string
        clientId:
          type: string
        warningEnumString:
          type: string
        workflowName:
          type: string
        enumFilterType:
          allOf:
          - $ref: '#/components/schemas/EnumFilterType'
          - description: Whether to include or exclude the enums matching the regex.
        retryAttempt:
          $ref: '#/components/schemas/RetryAttempt'
        triggerId:
          type: string
          description: Stats have been or will be aggregated on set fields for any semantically-meaningful combination.
        errorEnumString:
          type: string
        taskName:
          type: string
    EnterpriseCrmEventbusProtoTaskMetadata:
      title: EnterpriseCrmEventbusProtoTaskMetadata
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status1'
          - description: Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
        docMarkdown:
          type: string
          description: Snippet of markdown documentation to embed in the RHP for this task.
        externalDocMarkdown:
          type: string
          description: 'DEPRECATED: Use external_doc_html.'
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          description: The actual class name or the annotated name of the task. Task Author should initialize this field with value from the getName() method of the Task class.
        tags:
          type: array
          items:
            type: string
          description: A set of tags that pertain to a particular task. This can be used to improve the searchability of tasks with several names ("REST Caller" vs. "Call REST Endpoint") or to help users find tasks based on related words.
        iconLink:
          type: string
          description: URL to gstatic image icon for this task. This icon shows up on the task list panel along with the task name in the Workflow Editor screen. Use the 24p, 2x, gray color icon image format. See go/icons.
        defaultJsonValidationOption:
          allOf:
          - $ref: '#/components/schemas/DefaultJsonValidationOption'
          - description: Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
        isDeprecated:
          type: boolean
          description: The deprecation status of the current task. Default value is false;
        externalDocLink:
          type: string
          description: Doc link for external-facing documentation (separate from g3doc).
        standaloneExternalDocHtml:
          type: string
          description: External-facing documention for standalone IP in pantheon embedded in the RHP for this task. Non null only if different from external_doc_html
        system:
          $ref: '#/components/schemas/System'
        codeSearchLink:
          type: string
          description: The Code Search link to the Task Java file.
        externalCategory:
          $ref: '#/components/schemas/ExternalCategory'
        descriptiveName:
          type: string
          description: The string name to show on the task list on the Workflow editor screen. This should be a very short, one to two words name for the task. (e.g. "Send Mail")
        description:
          type: string
          description: In a few sentences, describe the purpose and usage of the task.
        g3DocLink:
          type: string
          description: URL to the associated G3 Doc for the task if available
        activeTaskName:
          type: string
          description: The new task name to replace the current task if it is deprecated. Otherwise, it is the same as the current task name.
        defaultSpec:
          type: string
          description: Contains the initial configuration of the task with default values set. For now, The string should be compatible to an ASCII-proto format.
        externalDocHtml:
          type: string
          description: External-facing documention embedded in the RHP for this task.
        externalCategorySequence:
          type: integer
          description: Sequence with which the task in specific category to be displayed in task discovery panel for external users.
          contentEncoding: int32
        admins:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTaskMetadataAdmin'
          description: ''
      description: 'TaskMetadata are attributes that are associated to every common Task we have. Next available: 26'
    EnterpriseCrmEventbusProtoSuspensionConfig:
      title: EnterpriseCrmEventbusProtoSuspensionConfig
      type: object
      properties:
        suspensionExpiration:
          description: Indicates the next steps when no external actions happen on the suspension.
        customMessage:
          type: string
          description: Optional information to provide recipients of the suspension in addition to the resolution URL, typically containing relevant parameter values from the originating workflow.
        notifications:
          type: array
          items: {}
          description: ''
        whoMayResolve:
          type: array
          items: {}
          description: Identities able to resolve this suspension.
    EnterpriseCrmEventbusProtoTeardownTaskConfig:
      title: EnterpriseCrmEventbusProtoTeardownTaskConfig
      type: object
      properties:
        creatorEmail:
          type: string
          description: The creator's email address.
        name:
          type: string
          description: Required. Unique identifier of the teardown task within this Config. We use this field as the identifier to find next teardown tasks.
        properties: {}
        parameters:
          description: The parameters the user can pass to this task.
        nextTeardownTask: {}
        teardownTaskImplementationClassName:
          type: string
          description: Required. Implementation class name.
    GoogleCloudIntegrationsV1alphaGenerateTokenResponse:
      title: GoogleCloudIntegrationsV1alphaGenerateTokenResponse
      type: object
      properties:
        message:
          type: string
          description: The message that notifies the user if the request succeeded or not.
      description: Returns success or error message
    GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest:
      title: GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest
      type: object
      properties:
        scriptId:
          type: string
          description: The id of the Apps Script project to be linked.
      description: Request for LinkAppsScriptProject rpc call.
    GoogleCloudConnectorsV1AuthConfigSshPublicKey:
      title: GoogleCloudConnectorsV1AuthConfigSshPublicKey
      type: object
      properties:
        sshClientCert:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1Secret'
          - description: Secret provides a reference to entries in Secret Manager.
        certType:
          type: string
          description: Format of SSH Client cert.
        sshClientCertPass:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1Secret'
          - description: Secret provides a reference to entries in Secret Manager.
        username:
          type: string
          description: The user account used to authenticate.
      description: Parameters to support Ssh public key Authentication.
    GoogleCloudIntegrationsV1alphaFailurePolicy:
      title: GoogleCloudIntegrationsV1alphaFailurePolicy
      type: object
      properties:
        maxRetries:
          type: integer
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
          contentEncoding: int32
        retryStrategy:
          allOf:
          - $ref: '#/components/schemas/RetryStrategy'
          - description: Defines what happens to the task upon failure.
        intervalTime:
          type: string
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the initial interval in seconds for backoff.
      description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
    EnterpriseCrmEventbusProtoIntArrayFunction:
      title: EnterpriseCrmEventbusProtoIntArrayFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName1'
    EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter:
      title: EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter
      type: object
      properties:
        objectValue:
          type: string
    EnterpriseCrmEventbusProtoMappedField:
      title: EnterpriseCrmEventbusProtoMappedField
      type: object
      properties:
        inputField:
          description: The input field being mapped from.
        outputField:
          description: The output field being mapped to.
      description: 'Mapped field is a pair of input field and output field. Next Id: 3'
    EnterpriseCrmEventbusProtoStringArray:
      title: EnterpriseCrmEventbusProtoStringArray
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: ''
    GoogleCloudConnectorsV1Secret:
      title: GoogleCloudConnectorsV1Secret
      type: object
      properties:
        secretVersion:
          type: string
          description: 'The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`.'
      description: Secret provides a reference to entries in Secret Manager.
    GoogleCloudConnectorsV1DestinationConfig:
      title: GoogleCloudConnectorsV1DestinationConfig
      type: object
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudConnectorsV1Destination'
          description: The destinations for the key.
        key:
          type: string
          description: The key is the destination identifier that is supported by the Connector.
      description: Define the Connectors target endpoint.
    GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentials:
      title: GoogleCloudIntegrationsV1alphaOAuth2ResourceOwnerCredentials
      type: object
      properties:
        scope:
          type: string
          description: A space-delimited list of requested scope permissions.
        clientSecret:
          type: string
          description: The client's secret.
        clientId:
          type: string
          description: The client's ID.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAccessToken'
          - description: The access token represents the authorization of a specific application to access specific parts of a user’s data.
        tokenParams:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap'
          - description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
        tokenEndpoint:
          type: string
          description: The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
        username:
          type: string
          description: The user's username.
        password:
          type: string
          description: The user's password.
        requestType:
          allOf:
          - $ref: '#/components/schemas/RequestType'
          - description: Represent how to pass parameters to fetch access token
      description: For resource owner credentials grant, the client will ask the user for their authorization credentials (ususally a username and password) and send a POST request to the authorization server. The authorization server will respond with a JSON object containing the access token.
    GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata:
      title: GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
          description: List of actions.
        entities:
          type: array
          items:
            type: string
          description: List of entity names.
      description: Metadata of runtime connection schema.
    GoogleCloudConnectorsV1LockConfig:
      title: GoogleCloudConnectorsV1LockConfig
      type: object
      properties:
        reason:
          type: string
          description: Describes why a connection is locked.
        locked:
          type: boolean
          description: Indicates whether or not the connection is locked.
      description: Determines whether or no a connection is locked. If locked, a reason must be specified.
    GoogleCloudIntegrationsV1alphaCloudLoggingConfig:
      title: GoogleCloudIntegrationsV1alphaCloudLoggingConfig
      type: object
      properties:
        enableCloudLogging:
          type: boolean
          description: This field determines whether the logs should be sent to cloud logging api
        bucket:
          type: string
          description: Cloud bucket name for the project.
      description: Config info for Cloud Logging
    EnterpriseCrmEventbusProtoCustomSuspensionRequest:
      title: EnterpriseCrmEventbusProtoCustomSuspensionRequest
      type: object
      properties:
        postToQueueWithTriggerIdRequest:
          allOf:
          - $ref: '#/components/schemas/GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest'
          - description: 'Use this request to post all workflows associated with a given trigger id. Next available id: 10'
        suspensionInfoEventParameterKey:
          type: string
          description: In the fired event, set the SuspensionInfo message as the value for this key.
    GoogleCloudIntegrationsV1alphaIntegrationParameter:
      title: GoogleCloudIntegrationsV1alphaIntegrationParameter
      type: object
      properties:
        key:
          type: string
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
        inputOutputType:
          allOf:
          - $ref: '#/components/schemas/InputOutputType'
          - description: Specifies the input/output type for the parameter.
        searchable:
          type: boolean
          description: Searchable in the execution log or not.
        jsonSchema:
          type: string
          description: This schema will be used to validate runtime JSON-typed values of this parameter.
        producer:
          type: string
          description: The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaValueType'
          - description: The type of the parameter.
        displayName:
          type: string
          description: The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
        isTransient:
          type: boolean
          description: Whether this parameter is a transient parameter.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType3'
          - description: Type of the parameter.
      description: Integration Parameter is defined in the integration config and are used to provide information about data types of the expected parameters and provide any default values if needed. They can also be used to add custom attributes. These are static in nature and should not be used for dynamic event definition.
    GoogleCloudConnectorsV1ConfigVariable:
      title: GoogleCloudConnectorsV1ConfigVariable
      type: object
      properties:
        boolValue:
          type: boolean
          description: Value is a bool.
        intValue:
          type: string
          description: Value is an integer
        secretValue:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1Secret'
          - description: Secret provides a reference to entries in Secret Manager.
        stringValue:
          type: string
          description: Value is a string.
        key:
          type: string
          description: Key of the config variable.
      description: ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.
    GoogleCloudIntegrationsV1alphaCertificate:
      title: GoogleCloudIntegrationsV1alphaCertificate
      type: object
      properties:
        credentialId:
          type: string
          description: Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
        certificateStatus:
          allOf:
          - $ref: '#/components/schemas/CertificateStatus'
          - description: Status of the certificate
        displayName:
          type: string
          description: Name of the certificate
        validEndTime:
          type: string
          description: Output only. The timestamp after which certificate will expire
        validStartTime:
          type: string
          description: Output only. The timestamp after which certificate will be valid
        description:
          type: string
          description: Description of the certificate
        rawCertificate:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaClientCertificate'
          - description: Contains client certificate information
        name:
          type: string
          description: Output only. Auto generated primary key
        requestorId:
          type: string
          description: Immutable. Requestor ID to be used to register certificate with trawler
      description: The certificate definition
    GoogleCloudIntegrationsV1alphaUsernameAndPassword:
      title: GoogleCloudIntegrationsV1alphaUsernameAndPassword
      type: object
      properties:
        username:
          type: string
          description: Username to be used
        password:
          type: string
          description: Password to be used
      description: Username and password pair.
    GoogleCloudIntegrationsV1alphaEventParameter:
      title: GoogleCloudIntegrationsV1alphaEventParameter
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaValueType'
          - description: The type of the parameter.
        key:
          type: string
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
      description: This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus.
    GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse:
      title: GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse
      type: object
      properties:
        scriptId:
          type: string
          description: The id of the linked Apps Script project.
      description: Response for LinkAppsScriptProject rpc call.
    EnterpriseCrmEventbusProtoWorkflowAlertConfig:
      title: EnterpriseCrmEventbusProtoWorkflowAlertConfig
      type: object
      properties:
        playbookUrl:
          type: string
          description: Link to a playbook for resolving the issue that triggered this alert.
        alertDisabled:
          type: boolean
          description: Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
        thresholdType:
          allOf:
          - $ref: '#/components/schemas/ThresholdType1'
          - description: The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
        aggregationPeriod:
          type: string
          description: For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
        thresholdValue:
          description: The metric value, above or below which the alert should be triggered. See go/eventbus-alert-config-examples.
        errorEnumList: {}
        durationThresholdMs:
          type: string
          description: Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
        clientId:
          type: string
          description: Client associated with this alert configuration.
        warningEnumList: {}
        numAggregationPeriods:
          type: integer
          description: For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
          contentEncoding: int32
        metricType:
          $ref: '#/components/schemas/MetricType1'
        alertName:
          type: string
          description: A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.
        onlyFinalAttempt:
          type: boolean
          description: For either events or tasks, depending on the type of alert, count only final attempts, not retries.
      description: Message to be used to configure custom alerting in the {@code EventConfig} protos for an event. See go/eventbus-alert-config-examples for examples of the different alerts that can be configured.
    EnterpriseCrmEventbusProtoField:
      title: EnterpriseCrmEventbusProtoField
      type: object
      properties:
        protoDefPath:
          type: string
          description: Optional. The fully qualified proto name (e.g. enterprise.crm.storage.Account). Required for output field of type PROTO_VALUE or PROTO_ARRAY. For e.g., if input field_type is BYTES and output field_type is PROTO_VALUE, then fully qualified proto type url should be provided to parse the input bytes. If field_type is *_ARRAY, then all the converted protos are of the same type.
        transformExpression:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTransformExpression'
        referenceKey:
          type: string
          description: This holds the reference key of the workflow or task parameter. 1. Any workflow parameter, for e.g. $workflowParam1$. 2. Any task input or output parameter, for e.g. $task1_param1$. 3. Any workflow or task parameters with subfield references, for e.g., $task1_param1.employee.id$
        fieldType:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          - description: Specifies the data type of the field.
        cardinality:
          allOf:
          - $ref: '#/components/schemas/Cardinality'
          - description: By default, if the cardinality is unspecified the field is considered required while mapping.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType'
          - description: 'LINT.IfChange To support various types of parameter values. Next available id: 14'
      description: 'Information about the value and type of the field. Next Id: 8'
    EnterpriseCrmEventbusProtoAddress:
      title: EnterpriseCrmEventbusProtoAddress
      type: object
      properties:
        email:
          type: string
          description: Required.
        name:
          type: string
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoToken'
          description: ''
      description: Email address along with optional name and tokens. These tokens will be substituted for the variables in the form of [{var_name}], where var_name could be any string of no more than 32 bytes.
    EnterpriseCrmEventbusStats:
      title: EnterpriseCrmEventbusStats
      type: object
      properties:
        qps:
          type: number
          description: Queries per second.
        errorRate:
          type: number
          description: Average error rate.
        durationInSeconds:
          type: number
          description: Average duration in seconds.
        dimensions:
          $ref: '#/components/schemas/EnterpriseCrmEventbusStatsDimensions'
        warningRate:
          type: number
          description: Average warning rate.
      description: 'Stats for the requested dimensions: QPS, duration, and error/warning rate'
    GoogleCloudIntegrationsV1alphaTaskConfig:
      title: GoogleCloudIntegrationsV1alphaTaskConfig
      type: object
      properties:
        description:
          type: string
          description: Optional. User-provided description intended to give additional business context about the task.
        taskExecutionStrategy:
          allOf:
          - $ref: '#/components/schemas/TaskExecutionStrategy'
          - description: Optional. The policy dictating the execution strategy of this task.
        task:
          type: string
          description: Optional. The name for the task.
        failurePolicy:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaFailurePolicy'
          - description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
        synchronousCallFailurePolicy:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaFailurePolicy'
          - description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
        taskTemplate:
          type: string
          description: Optional. Used to define task-template name if task is of type task-template
        successPolicy:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSuccessPolicy'
          - description: Policy that dictates the behavior for the task after it completes successfully.
        taskId:
          type: string
          description: Required. The identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_id`).
        nextTasksExecutionPolicy:
          allOf:
          - $ref: '#/components/schemas/NextTasksExecutionPolicy1'
          - description: Optional. The policy dictating the execution of the next set of tasks for the current task.
        nextTasks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaNextTask'
          description: Optional. The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaEventParameter'
          description: Optional. The customized parameters the user can pass to this task.
        jsonValidationOption:
          allOf:
          - $ref: '#/components/schemas/JsonValidationOption'
          - description: Optional. If set, overrides the option configured in the Task implementation class.
        displayName:
          type: string
          description: Optional. User-provided label that is attached to this TaskConfig in the UI.
      description: The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task.
    EnterpriseCrmEventbusProtoParameterEntry:
      title: EnterpriseCrmEventbusProtoParameterEntry
      type: object
      properties:
        key:
          type: string
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
        value:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType'
          - description: 'LINT.IfChange To support various types of parameter values. Next available id: 14'
      description: Key-value pair of EventBus parameters.
    EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition:
      title: EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition
      type: object
      properties:
        fullName:
          type: string
          description: The fully-qualified proto name. This message, for example, would be "enterprise.crm.eventbus.proto.ParamSpecEntry.ProtoDefinition".
        path:
          type: string
          description: Path to the proto file that contains the message type's definition.
    GoogleCloudIntegrationsV1alphaIntegration:
      title: GoogleCloudIntegrationsV1alphaIntegration
      type: object
      properties:
        name:
          type: string
          description: Required. The resource name of the integration.
        updateTime:
          type: string
          description: Output only. Auto-generated.
        active:
          type: boolean
          description: Required. If any integration version is published.
        description:
          type: string
          description: Optional.
      description: The integration definition.
    GoogleCloudIntegrationsV1alphaOAuth2ClientCredentials:
      title: GoogleCloudIntegrationsV1alphaOAuth2ClientCredentials
      type: object
      properties:
        clientId:
          type: string
          description: The client's ID.
        clientSecret:
          type: string
          description: The client's secret.
        tokenParams:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap'
          - description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAccessToken'
          - description: The access token represents the authorization of a specific application to access specific parts of a user’s data.
        tokenEndpoint:
          type: string
          description: The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
        requestType:
          allOf:
          - $ref: '#/components/schemas/RequestType'
          - description: Represent how to pass parameters to fetch access token
        scope:
          type: string
          description: A space-delimited list of requested scope permissions.
      description: For client credentials grant, the client sends a POST request with grant_type as 'client_credentials' to the authorization server. The authorization server will respond with a JSON object containing the access token.
    EnterpriseCrmEventbusProtoCloudSchedulerConfig:
      title: EnterpriseCrmEventbusProtoCloudSchedulerConfig
      type: object
      properties:
        serviceAccountEmail:
          type: string
          description: Required. Service account used by Cloud Scheduler to trigger the integration at scheduled time
        cronTab:
          type: string
          description: Required. The cron tab of cloud scheduler trigger.
        errorMessage:
          type: string
          description: Optional. When the job was deleted from Pantheon UI, error_message will be populated when Get/List integrations
        location:
          type: string
          description: Required. The location where associated cloud scheduler job will be created
      description: Cloud Scheduler Trigger configuration
    GoogleCloudIntegrationsV1alphaLiftSuspensionRequest:
      title: GoogleCloudIntegrationsV1alphaLiftSuspensionRequest
      type: object
      properties:
        suspensionResult:
          type: string
          description: User passed in suspension result and will be used to control workflow execution branching behavior by setting up corresponnding edge condition with suspension result. For example, if you want to lift the suspension, you can pass "Approved", or if you want to reject the suspension and terminate workfloe execution, you can pass "Rejected" and terminate the workflow execution with configuring the edge condition.
      description: Request for lift Suspension
    GoogleCloudIntegrationsV1alphaCancelExecutionResponse:
      title: GoogleCloudIntegrationsV1alphaCancelExecutionResponse
      type: object
      properties:
        isCanceled:
          type: boolean
          description: True if cancellation performed successfully
      description: Response for cancelling an execution.
    EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails:
      title: EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails
      type: object
      properties:
        eventRetriesFromBeginningCount:
          type: integer
          description: Indicates the number of times the execution has restarted from the beginning.
          contentEncoding: int32
        eventExecutionSnapshot:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventExecutionSnapshot'
          description: After snapshot migration, this field will no longer be populated, but old execution snapshots will still be accessible.
        logFilePath:
          type: string
          description: The log file path (aka. cns address) for this event.
        nextExecutionTime:
          type: string
          description: Next scheduled execution time in case the execution status was RETRY_ON_HOLD.
        eventAttemptStats:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoEventExecutionDetailsEventAttemptStats'
          description: ''
        ryeLockUnheldCount:
          type: integer
          description: Used internally and shouldn't be exposed to users. A counter for the cron job to record how many times this event is in in_process state but don't have a lock consecutively/
          contentEncoding: int32
        networkAddress:
          type: string
          description: The network address (aka. bns address) that indicates where the event executor is running.
        eventExecutionState:
          allOf:
          - $ref: '#/components/schemas/EventExecutionState1'
          - description: The execution state of this event.
      description: 'Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10'
    GoogleCloudIntegrationsV1alphaTaskExecutionDetails:
      title: GoogleCloudIntegrationsV1alphaTaskExecutionDetails
      type: object
      properties:
        taskAttemptStats:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAttemptStats'
          description: Status for the current task execution attempt.
        taskNumber:
          type: string
          description: Pointer to the task config it used for execution.
        taskExecutionState:
          allOf:
          - $ref: '#/components/schemas/TaskExecutionState1'
          - description: The execution state of this task.
      description: Contains the details of the execution of this task.
    GoogleCloudIntegrationsV1alphaTriggerConfig:
      title: GoogleCloudIntegrationsV1alphaTriggerConfig
      type: object
      properties:
        alertConfig:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationAlertConfig'
          description: Optional. An alert threshold configuration for the [trigger + client + integration] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + integration] when published.
        startTasks:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaNextTask'
          description: Optional. Set of tasks numbers from where the integration execution is started by this trigger. If this is empty, then integration is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same integration execution graph).
        label:
          type: string
          description: Optional. The user created label for a particular trigger.
        nextTasksExecutionPolicy:
          allOf:
          - $ref: '#/components/schemas/NextTasksExecutionPolicy2'
          - description: Optional. Dictates how next tasks will be executed.
        cloudSchedulerConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCloudSchedulerConfig'
          - description: Cloud Scheduler Trigger configuration
        properties:
          type: object
          additionalProperties:
            type: string
          description: Optional. Configurable properties of the trigger, not to be confused with integration parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Pub/sub triggers.
        triggerType:
          allOf:
          - $ref: '#/components/schemas/TriggerType1'
          - description: Optional. Type of trigger
        triggerNumber:
          type: string
          description: Required. A number to uniquely identify each trigger config within the integration on UI.
        description:
          type: string
          description: Optional. User-provided description intended to give additional business context about the task.
        triggerId:
          type: string
          description: Optional. The backend trigger ID.
      description: Configuration detail of a trigger.
    EnterpriseCrmEventbusProtoScatterResponse:
      title: EnterpriseCrmEventbusProtoScatterResponse
      type: object
      properties:
        errorMsg:
          type: string
          description: The error message of the failure if applicable.
        responseParams:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterEntry'
          description: A list of all the response parameters in the aggregtorMap stored with the remapped key.
        isSuccessful:
          type: boolean
          description: If execution is sync, this is true if the execution passed and false if it failed. If the execution is async, this is true if the WF was fired off successfully, and false if it failed to execute. The success or failure of the subworkflows executed are not captured.
        scatterElement:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType'
          - description: 'LINT.IfChange To support various types of parameter values. Next available id: 14'
        executionIds:
          type: array
          items:
            type: string
          description: The execution ids of each Subworkflow fired by this scatter.
    EnterpriseCrmEventbusProtoLoopMetadata:
      title: EnterpriseCrmEventbusProtoLoopMetadata
      type: object
      properties:
        errorMsg:
          type: string
          description: Add the error message when loops fail.
        currentIterationCount:
          type: string
          description: Starting from 1, not 0.
        currentIterationDetail:
          type: string
          description: Needs to be set by the loop impl class before each iteration. The abstract loop class will append the request and response to it. Eg. The foreach Loop will clean up and set it as the current iteration element at the start of each loop. The post request and response will be appended to the value once they are available.
        failureLocation:
          allOf:
          - $ref: '#/components/schemas/FailureLocation'
          - description: Indicates where in the loop logic did it error out.
    EnterpriseCrmEventbusProtoBooleanArrayFunction:
      title: EnterpriseCrmEventbusProtoBooleanArrayFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName3'
    EnterpriseCrmEventbusProtoNodeIdentifier:
      title: EnterpriseCrmEventbusProtoNodeIdentifier
      type: object
      properties:
        elementIdentifier:
          type: string
          description: Configuration of the edge.
        elementType:
          allOf:
          - $ref: '#/components/schemas/ElementType'
          - description: Destination node where the edge ends. It can only be a task config.
      description: 'Represents a node identifier (type + id). Next highest id: 3'
    GoogleCloudIntegrationsV1alphaAuthConfig:
      title: GoogleCloudIntegrationsV1alphaAuthConfig
      type: object
      properties:
        overrideValidTime:
          type: string
          description: User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
        validTime:
          type: string
          description: The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
        lastModifierEmail:
          type: string
          description: The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        reason:
          type: string
          description: The reason / details of the current status.
        credentialType:
          allOf:
          - $ref: '#/components/schemas/CredentialType'
          - description: Credential type of the encrypted credential.
        expiryNotificationDuration:
          type: array
          items:
            type: string
          description: User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
        name:
          type: string
          description: Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
        description:
          type: string
          description: A description of the auth config.
        decryptedCredential:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCredential'
          - description: Defines parameters for a single, canonical credential.
        creatorEmail:
          type: string
          description: The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
        state:
          allOf:
          - $ref: '#/components/schemas/State3'
          - description: The status of the auth config.
        encryptedCredential:
          type: string
          description: Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
        certificateId:
          type: string
          description: Certificate id for client certificate
        visibility:
          allOf:
          - $ref: '#/components/schemas/Visibility'
          - description: The visibility of the auth config.
        createTime:
          type: string
          description: Output only. The timestamp when the auth config is created.
        displayName:
          type: string
          description: The name of the auth config.
        updateTime:
          type: string
          description: Output only. The timestamp when the auth config is modified.
      description: The AuthConfig resource use to hold channels and connection config data.
    EnterpriseCrmEventbusProtoSuspensionResolutionInfoAudit:
      title: EnterpriseCrmEventbusProtoSuspensionResolutionInfoAudit
      type: object
      properties:
        resolvedBy:
          type: string
        timestamp:
          type: string
    GoogleCloudIntegrationsV1alphaAttemptStats:
      title: GoogleCloudIntegrationsV1alphaAttemptStats
      type: object
      properties:
        endTime:
          type: string
          description: The end time of the event execution for current attempt.
        startTime:
          type: string
          description: The start time of the event execution for current attempt. This could be in the future if it's been scheduled.
      description: Status for the execution attempt.
    GoogleCloudIntegrationsV1alphaSfdcChannel:
      title: GoogleCloudIntegrationsV1alphaSfdcChannel
      type: object
      properties:
        updateTime:
          type: string
          description: Output only. Time when the channel was last updated
        name:
          type: string
          description: Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
        displayName:
          type: string
          description: Client level unique name/alias to easily reference a channel.
        deleteTime:
          type: string
          description: Output only. Time when the channel was deleted. Empty if not deleted.
        createTime:
          type: string
          description: Output only. Time when the channel is created
        isActive:
          type: boolean
          description: Indicated if a channel has any active integrations referencing it. Set to false when the channel is created, and set to true if there is any integration published with the channel configured in it.
        lastReplayId:
          type: string
          description: Last sfdc messsage replay id for channel
        description:
          type: string
          description: The description for this channel
        channelTopic:
          type: string
          description: The Channel topic defined by salesforce once an channel is opened
      description: The SfdcChannel that points to a CDC or Platform Event Channel.
    EnterpriseCrmEventbusProtoFailurePolicy:
      title: EnterpriseCrmEventbusProtoFailurePolicy
      type: object
      properties:
        intervalInSeconds:
          type: string
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the initial interval for backoff.
        maxNumRetries:
          type: integer
          description: Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_WORKFLOW_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
          contentEncoding: int32
        retryStrategy:
          allOf:
          - $ref: '#/components/schemas/RetryStrategy1'
          - description: Defines what happens to the task upon failure.
      description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
    EnterpriseCrmCardsTemplatesAplosSeriesDataRow:
      title: EnterpriseCrmCardsTemplatesAplosSeriesDataRow
      type: object
      properties:
        x: {}
        y: {}
      description: Aplos series row is exactly two columns labeled x and y.
    EnterpriseCrmEventbusProtoEventExecutionSnapshot:
      title: EnterpriseCrmEventbusProtoEventExecutionSnapshot
      type: object
      properties:
        diffParams:
          description: The parameters in Event object that differs from last snapshot.
        snapshotTime:
          type: string
          description: Indicates when this snapshot is taken.
        taskName:
          type: string
          description: The task name associated with this snapshot. Could be empty.
        eventExecutionInfoId:
          type: string
          description: Points to the event execution info this snapshot belongs to.
        checkpointTaskNumber:
          type: string
          description: Indicates "right after which checkpoint task's execution" this snapshot is taken.
        exceedMaxSize:
          type: boolean
          description: indicate whether snapshot exceeded maximum size before clean up
        taskExecutionDetails:
          type: array
          items: {}
          description: All of the task execution details at the given point of time.
        eventParams:
          description: The parameters in Event object.
        conditionResults:
          type: array
          items: {}
          description: All of the computed conditions that been calculated.
        eventExecutionSnapshotMetadata: {}
        eventExecutionSnapshotId:
          type: string
          description: Auto-generated. Used as primary key for EventExecutionSnapshots table.
      description: 'Contains the snapshot of the event execution for a given checkpoint. Next available id: 13'
    GoogleCloudConnectorsV1Connection:
      title: GoogleCloudConnectorsV1Connection
      type: object
      properties:
        updateTime:
          type: string
          description: Output only. Updated time.
        envoyImageLocation:
          type: string
          description: 'Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}'
        configVariables:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudConnectorsV1ConfigVariable'
          description: Optional. Configuration for configuring the connection with an external system.
        authConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1AuthConfig'
          - description: AuthConfig defines details of a authentication type.
        serviceAccount:
          type: string
          description: Optional. Service account needed for runtime plane to access GCP resources.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
        connectorVersion:
          type: string
          description: 'Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource.'
        status:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1ConnectionStatus'
          - description: ConnectionStatus indicates the state of the connection.
        description:
          type: string
          description: Optional. Description of the resource.
        serviceDirectory:
          type: string
          description: Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
        imageLocation:
          type: string
          description: 'Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}'
        lockConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1LockConfig'
          - description: Determines whether or no a connection is locked. If locked, a reason must be specified.
        name:
          type: string
          description: 'Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}'
        destinationConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudConnectorsV1DestinationConfig'
          description: Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
        createTime:
          type: string
          description: Output only. Created time.
        suspended:
          type: boolean
          description: Optional. Suspended indicates if a user has suspended a connection or not.
        nodeConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1NodeConfig'
          - description: Configuration for the connection.
      description: Connection represents an instance of connector.
    GoogleCloudIntegrationsV1alphaGetClientMetadataResponse:
      title: GoogleCloudIntegrationsV1alphaGetClientMetadataResponse
      type: object
      properties:
        properties:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaProjectProperties'
          - description: Metadata information for the given project
      description: Response for the GetClientMetadata rpc
    GoogleCloudIntegrationsV1alphaListSuspensionsResponse:
      title: GoogleCloudIntegrationsV1alphaListSuspensionsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results.
        suspensions:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSuspension'
          description: The suspensions for the relevant execution which the caller has permissions to view and resolve.
      description: Response for Suspensions.ListSuspensions.
    GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest:
      title: GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest
      type: object
      properties:
        doNotPropagateError:
          type: boolean
          description: Optional. Flag to determine how to should propagate errors. If this flag is set to be true, it will not throw an exception. Instead, it will return a {@link ExecuteIntegrationsResponse} with an execution id and error messages as PostWithTriggerIdExecutionException in {@link EventParameters}. The flag is set to be false by default.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters'
          - description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
        executionId:
          type: string
          description: Optional. The id of the ON_HOLD execution to be resumed.
        triggerId:
          type: string
          description: Required. Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id). The trigger_id is in the format of `api_trigger/TRIGGER_NAME`.
        inputParameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaValueType'
          description: Optional. Input parameters used by integration execution.
        parameterEntries:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry'
          description: Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
        requestId:
          type: string
          description: 'Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned.'
      description: The request for executing an integration.
    EnterpriseCrmEventbusProtoTriggerCriteria:
      title: EnterpriseCrmEventbusProtoTriggerCriteria
      type: object
      properties:
        triggerCriteriaTaskImplementationClassName:
          type: string
          description: Optional. Implementation class name. The class should implement the “TypedTask” interface.
        parameters:
          description: Optional. To be used in TaskConfig for the implementation class.
        condition:
          type: string
          description: Required. Standard filter expression, when true the workflow will be executed. If there's no trigger_criteria_task_implementation_class_name specified, the condition will be validated directly.
    EnterpriseCrmEventbusProtoBuganizerNotification:
      title: EnterpriseCrmEventbusProtoBuganizerNotification
      type: object
      properties:
        assigneeEmailAddress:
          type: string
          description: Whom to assign the new bug. Optional.
        title:
          type: string
          description: Title of the issue to be created. Required.
        templateId:
          type: string
          description: ID of the buganizer template to use. Optional.
        componentId:
          type: string
          description: ID of the buganizer component within which to create a new issue. Required.
    GoogleCloudIntegrationsV1alphaCloudKmsConfig:
      title: GoogleCloudIntegrationsV1alphaCloudKmsConfig
      type: object
      properties:
        keyVersion:
          type: string
          description: Optional. Each version of a key contains key material used for encryption or signing. A key's version is represented by an integer, starting at 1. To decrypt data or verify a signature, you must use the same key version that was used to encrypt or sign the data.
        kmsRing:
          type: string
          description: Required. A key ring organizes keys in a specific Google Cloud location and allows you to manage access control on groups of keys. A key ring's name does not need to be unique across a Google Cloud project, but must be unique within a given location.
        key:
          type: string
          description: Required. A Cloud KMS key is a named object containing one or more key versions, along with metadata for the key. A key exists on exactly one key ring tied to a specific location.
        kmsLocation:
          type: string
          description: Required. Location name of the key ring, e.g. "us-west1".
      description: Configuration information for Client's Cloud KMS information
    EnterpriseCrmEventbusProtoSuspensionExpiration:
      title: EnterpriseCrmEventbusProtoSuspensionExpiration
      type: object
      properties:
        liftWhenExpired:
          type: boolean
          description: Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.
        expireAfterMs:
          type: integer
          description: Milliseconds after which the suspension expires, if no action taken.
          contentEncoding: int32
        remindAfterMs:
          type: integer
          description: Milliseconds after which the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.
          contentEncoding: int32
    GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest:
      title: GoogleInternalCloudCrmEventbusV3PostToQueueWithTriggerIdRequest
      type: object
      properties:
        requestId:
          type: string
          description: 'Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned. Must have no more than 36 characters and contain only alphanumeric characters and hyphens.'
        workflowName:
          type: string
          description: Optional. If provided, the workflow_name is used to filter all the matched workflows having same trigger_id+client_id. A combination of trigger_id, client_id and workflow_name identifies a unique workflow.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: 'The request priority this request should be processed at. For internal users:'
        parameters:
          description: Passed in as parameters to each workflow execution. Optional.
        triggerId:
          type: string
          description: Matched against all {@link TriggerConfig}s across all workflows. i.e. TriggerConfig.trigger_id.equals(trigger_id) Required.
        testMode:
          type: boolean
          description: Optional. Sets test mode in {@link enterprise/crm/eventbus/event_message.proto}.
        ignoreErrorIfNoActiveWorkflow:
          type: boolean
          description: Optional. Flag to determine whether clients would suppress a warning when no ACTIVE workflows are not found. If this flag is set to be true, an error will not be thrown if the requested trigger_id or client_id is not found in any ACTIVE workflow. Otherwise, the error is always thrown. The flag is set to be false by default.
        clientId:
          type: string
          description: Optional. If the client id is provided, then the combination of trigger id and client id is matched across all the workflows. If the client id is not provided, then workflows with matching trigger id are executed for each client id in the {@link TriggerConfig}. For Api Trigger, the client id is required and will be validated against the allowed clients.
        scheduledTime:
          type: string
          description: Optional. Time in milliseconds since epoch when the given event would be scheduled.
      description: 'Use this request to post all workflows associated with a given trigger id. Next available id: 10'
    GoogleCloudIntegrationsV1alphaSuccessPolicy:
      title: GoogleCloudIntegrationsV1alphaSuccessPolicy
      type: object
      properties:
        finalState:
          allOf:
          - $ref: '#/components/schemas/FinalState1'
          - description: State to which the execution snapshot status will be set if the task succeeds.
      description: Policy that dictates the behavior for the task after it completes successfully.
    GoogleCloudIntegrationsV1alphaDownloadExecutionResponse:
      title: GoogleCloudIntegrationsV1alphaDownloadExecutionResponse
      type: object
      properties:
        content:
          type: string
          description: The content of downloaded execution.
      description: Response for downloading an execution.
    EnterpriseCrmEventbusProtoConnectorsConnection:
      title: EnterpriseCrmEventbusProtoConnectorsConnection
      type: object
      properties:
        serviceName:
          type: string
          description: 'Service name Format: projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}'
        connectorVersion:
          type: string
          description: 'Connector version Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}'
        connectionName:
          type: string
          description: 'Connection name Format: projects/{project}/locations/{location}/connections/{connection}'
    GoogleCloudIntegrationsV1alphaResolveSuspensionRequest:
      title: GoogleCloudIntegrationsV1alphaResolveSuspensionRequest
      type: object
      properties:
        suspension:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSuspension'
          - description: A record representing a suspension.
      description: Request for [Suspensions.ResolveSuspensions].
    GoogleCloudIntegrationsV1alphaJwt:
      title: GoogleCloudIntegrationsV1alphaJwt
      type: object
      properties:
        secret:
          type: string
          description: User's pre-shared secret to sign the token.
        jwtHeader:
          type: string
          description: Identifies which algorithm is used to generate the signature.
        jwt:
          type: string
          description: The token calculated by the header, payload and signature.
        jwtPayload:
          type: string
          description: Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
      description: Represents JSON web token(JWT), which is a compact, URL-safe means of representing claims to be transferred between two parties, enabling the claims to be digitally signed or integrity protected.
    GoogleCloudIntegrationsV1alphaSuspensionAudit:
      title: GoogleCloudIntegrationsV1alphaSuspensionAudit
      type: object
      properties:
        resolveTime:
          type: string
          description: Time at which this suspension was resolved.
        resolver:
          type: string
          description: Email address of the person who resolved this suspension.
      description: Contains when and by whom the suspension was resolved.
    GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse:
      title: GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse
      type: object
      properties:
        projectId:
          type: string
          description: The created AppsScriptProject ID.
      description: Response for CreateAppsScriptProject rpc call.
    EnterpriseCrmCardsTemplatesAplosSeriesListData:
      title: EnterpriseCrmCardsTemplatesAplosSeriesListData
      type: object
      properties:
        series:
          type: array
          items: {}
          description: ''
      description: Data used for Aplos charts that accept multiple Series.
    GoogleCloudIntegrationsV1alphaNextTask:
      title: GoogleCloudIntegrationsV1alphaNextTask
      type: object
      properties:
        taskId:
          type: string
          description: Task number of the next task.
        description:
          type: string
          description: User-provided description intended to give additional business context about the task.
        condition:
          type: string
          description: Standard filter expression for this task to become an eligible next task.
        displayName:
          type: string
          description: User-provided label that is attached to this edge in the UI.
        taskConfigId:
          type: string
          description: ID of the next task.
      description: The task that is next in line to be executed, if the condition specified evaluated to true.
    EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo:
      title: EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo
      type: object
      properties:
        executionTraceInfo:
          description: Execution trace info to aggregate parent-child executions.
        triggerId:
          type: string
          description: The trigger id of the workflow trigger config. If both trigger_id and client_id is present, the workflow is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
        workflowName:
          type: string
          description: Name of the workflow.
        workflowId:
          type: string
          description: Required. Pointer to the workflow it is executing.
        responseParams:
          description: Event parameters come out as part of the response.
        tenant:
          type: string
          description: Tenant this event is created. Used to reschedule the event to correct tenant.
        eventExecutionInfoId:
          type: string
          description: Auto-generated primary key.
        snapshotNumber:
          type: string
          description: Workflow snapshot number.
        requestId:
          type: string
          description: Optional. This is used to de-dup incoming request.
        lastModifiedTime:
          type: string
          description: Auto-generated.
        clientId:
          type: string
          description: The event data user sends as request.
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          - description: Which Google product the execution_info belongs to. If not set, the execution_info belongs to Integration Platform by default.
        createTime:
          type: string
          description: Auto-generated.
        eventExecutionDetails:
          description: The execution info about this event.
        postMethod:
          allOf:
          - $ref: '#/components/schemas/PostMethod'
          - description: The ways user posts this event.
        errors:
          type: array
          items: {}
          description: Errors, warnings, and informationals associated with the workflow/task. The order in which the errors were added by the workflow/task is maintained.
        workflowRetryBackoffIntervalSeconds:
          type: string
          description: Time interval in seconds to schedule retry of workflow in manifold when workflow is already running
        errorCode:
          description: Final error-code if event failed.
        requestParams:
          description: Event parameters come in as part of the request.
      description: 'Contains all the execution details for a workflow instance. Next available id: 24'
    EnterpriseCrmEventbusProtoParamSpecEntryConfig:
      title: EnterpriseCrmEventbusProtoParamSpecEntryConfig
      type: object
      properties:
        subSectionLabel:
          type: string
          description: A user-friendly label for subSection under which the parameter will be displayed.
        parameterNameOption:
          $ref: '#/components/schemas/ParameterNameOption'
        isHidden:
          type: boolean
          description: Whether this field is hidden in the UI.
        label:
          type: string
          description: A user-friendly label for the parameter.
        descriptivePhrase:
          type: string
          description: A short phrase to describe what this parameter contains.
        inputDisplayOption:
          $ref: '#/components/schemas/InputDisplayOption'
        hideDefaultValue:
          type: boolean
          description: Whether the default value is hidden in the UI.
        helpText:
          type: string
          description: Detailed help text for this parameter containing information not provided elsewhere. For example, instructions on how to migrate from a deprecated parameter.
        uiPlaceholderText:
          type: string
          description: Placeholder text which will appear in the UI input form for this parameter.
    GoogleCloudIntegrationsV1alphaIntParameterArray:
      title: GoogleCloudIntegrationsV1alphaIntParameterArray
      type: object
      properties:
        intValues:
          type: array
          items:
            type: string
          description: Integer array.
      description: This message only contains a field of integer array.
    EnterpriseCrmEventbusProtoParameterMapField:
      title: EnterpriseCrmEventbusProtoParameterMapField
      type: object
      properties:
        literalValue:
          description: Passing a literal value.
        referenceKey:
          type: string
          description: Referencing one of the WF variables.
      description: Field represents either the key or value in an entry.
    GoogleCloudConnectorsV1Destination:
      title: GoogleCloudConnectorsV1Destination
      type: object
      properties:
        port:
          type: integer
          description: The port is the target port number that is accepted by the destination.
          contentEncoding: int32
        host:
          type: string
          description: For publicly routable host.
        serviceAttachment:
          type: string
          description: 'PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*'
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest
      type: object
      properties:
        mashQuery:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQuery'
          - description: The MashQuery for searching data, set both queries for Join Operation.
        outputPeriod:
          type: string
          description: The output period for the query. Must be set if there is a window operation within the query and unset otherwise.
        duration:
          type: string
          description: 'How long the series data range: "1h","1d",etc.'
        metricFieldTable:
          type: boolean
          description: Returns a table of all possible metric field values within the specified duration, ignoring any data samples. Useful for autocomplete functionality.
        endTime:
          type: string
          description: Final time to query over, or the current time if left unset.
        responseTemplate:
          allOf:
          - $ref: '#/components/schemas/ResponseTemplate'
          - description: Required. Template for response.
      description: The request to get data for monarch connector config.
    GoogleCloudIntegrationsV1alphaRuntimeEntitySchema:
      title: GoogleCloudIntegrationsV1alphaRuntimeEntitySchema
      type: object
      properties:
        fieldSchema:
          type: string
          description: List of fields in the entity.
        entity:
          type: string
          description: Name of the entity.
        arrayFieldSchema:
          type: string
          description: The above schema, but for an array of the associated entity.
      description: Metadata of an entity, including a schema for its properties.
    GoogleCloudIntegrationsV1alphaClientConfig:
      title: GoogleCloudIntegrationsV1alphaClientConfig
      type: object
      properties:
        p4ServiceAccount:
          type: string
          description: The P4SA account associated with this client
        projectId:
          type: string
          description: The GCP project id of the client associated with
        description:
          type: string
          description: Description of what the client is used for
        clientState:
          allOf:
          - $ref: '#/components/schemas/ClientState'
          - description: Indicates the activity state the client
        createTime:
          type: string
          description: The timestamp when the client was first created.
        cloudKmsConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCloudKmsConfig'
          - description: Configuration information for Client's Cloud KMS information
        cloudLoggingConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCloudLoggingConfig'
          - description: Config info for Cloud Logging
        region:
          type: string
          description: The region the client is linked to.
        billingType:
          allOf:
          - $ref: '#/components/schemas/BillingType'
          - description: Indicates the billing type of the client
        id:
          type: string
          description: Globally unique ID (project_id + region)
      description: The configuration information for the Client
    EnterpriseCrmEventbusProtoDoubleParameterArray:
      title: EnterpriseCrmEventbusProtoDoubleParameterArray
      type: object
      properties:
        doubleValues:
          type: array
          items:
            type: number
          description: ''
    EnterpriseCrmEventbusProtoBooleanFunction:
      title: EnterpriseCrmEventbusProtoBooleanFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName6'
    GoogleCloudIntegrationsV1alphaListAuthConfigsResponse:
      title: GoogleCloudIntegrationsV1alphaListAuthConfigsResponse
      type: object
      properties:
        authConfigs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAuthConfig'
          description: The list of AuthConfigs retrieved.
        nextPageToken:
          type: string
          description: The token used to retrieve the next page of results.
      description: Response to list AuthConfigs.
    GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest:
      title: GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest
      type: object
      properties:
        authConfigId:
          type: string
          description: The auth config id necessary to fetch the necessary credentials to create the project for external clients
        appsScriptProject:
          type: string
          description: The name of the Apps Script project to be created.
      description: Request for CreateAppsScriptProject rpc call.
    EnterpriseCrmEventbusProtoConnectorsGenericConnectorTaskConfig:
      title: EnterpriseCrmEventbusProtoConnectorsGenericConnectorTaskConfig
      type: object
      properties:
        connection:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoConnectorsConnection'
        operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          - description: Operation to perform using the configured connection.
    EnterpriseCrmCardsRow:
      title: EnterpriseCrmCardsRow
      type: object
      properties:
        cells:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmCardsCellValue'
          description: Ordered list of cell values within a row.
    GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse:
      title: GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse
      type: object
      properties:
        integrationVersion:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationVersion'
          - description: The integration version definition.
      description: Response for TakeoverEditLock.
    EnterpriseCrmEventbusAuthconfigAuthConfigTaskParam:
      title: EnterpriseCrmEventbusAuthconfigAuthConfigTaskParam
      type: object
      properties:
        allowedServiceAccountInContext:
          type: boolean
        allowedCredentialTypes:
          type: array
          items:
            $ref: '#/components/schemas/AllowedCredentialType'
          description: Defines the credential types to be supported as Task may restrict specific types to use, e.g. Cloud SQL Task will use username/password type only.
        scope:
          type: string
          description: A space-delimited list of requested scope permissions.
        authConfigId:
          type: string
          description: UUID of the AuthConfig.
        useServiceAccountInContext:
          type: boolean
    EnterpriseCrmEventbusProtoEventParameters:
      title: EnterpriseCrmEventbusProtoEventParameters
      type: object
      properties:
        parameters:
          type: array
          items: {}
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
      description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
    GoogleCloudIntegrationsV1alphaAccessToken:
      title: GoogleCloudIntegrationsV1alphaAccessToken
      type: object
      properties:
        accessTokenExpireTime:
          type: string
          description: Required. The approximate time until the access token retrieved is valid.
        tokenType:
          type: string
          description: Only support "bearer" token in v1 as bearer token is the predominant type used with OAuth 2.0.
        accessToken:
          type: string
          description: The access token encapsulating the security identity of a process or thread.
        refreshTokenExpireTime:
          type: string
          description: The approximate time until the refresh token retrieved is valid.
        refreshToken:
          type: string
          description: If the access token will expire, use the refresh token to obtain another access token.
      description: The access token represents the authorization of a specific application to access specific parts of a user’s data.
    GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest:
      title: GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest
      type: object
      properties:
        content:
          type: string
          description: The textproto of the integration_version.
        fileFormat:
          allOf:
          - $ref: '#/components/schemas/FileFormat'
          - description: File format for upload request.
      description: Request for UploadIntegrationVersion.
    EnterpriseCrmEventbusProtoJsonFunction:
      title: EnterpriseCrmEventbusProtoJsonFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName8'
    GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse:
      title: GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse
      type: object
      properties:
        sfdcInstances:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaSfdcInstance'
          description: The list of SfdcInstances retrieved.
        nextPageToken:
          type: string
          description: The token used to retrieve the next page of results.
      description: Response to list SfdcInstances.
    EnterpriseCrmEventbusProtoCoordinate:
      title: EnterpriseCrmEventbusProtoCoordinate
      type: object
      properties:
        x:
          type: integer
          contentEncoding: int32
        y:
          type: integer
          contentEncoding: int32
      description: Represents two-dimensional positions.
    GoogleCloudConnectorsV1ConnectionStatus:
      title: GoogleCloudConnectorsV1ConnectionStatus
      type: object
      properties:
        status:
          type: string
          description: Status provides detailed information for the state.
        state:
          allOf:
          - $ref: '#/components/schemas/State4'
          - description: State.
        description:
          type: string
          description: Description.
      description: ConnectionStatus indicates the state of the connection.
    EnterpriseCrmFrontendsEventbusProtoEventExecutionSnapshot:
      title: EnterpriseCrmFrontendsEventbusProtoEventExecutionSnapshot
      type: object
      properties:
        conditionResults:
          type: array
          items: {}
          description: All of the computed conditions that been calculated.
        taskExecutionDetails:
          type: array
          items: {}
          description: All of the task execution details at the given point of time.
        eventExecutionSnapshotMetadata: {}
        eventParams:
          description: The parameters in Event object.
        eventExecutionInfoId:
          type: string
          description: Points to the event execution info this snapshot belongs to.
        diffParams:
          description: The parameters in Event object that differs from last snapshot.
        taskName:
          type: string
          description: The task name associated with this snapshot. Could be empty.
        checkpointTaskNumber:
          type: string
          description: Indicates "right after which checkpoint task's execution" this snapshot is taken.
        eventExecutionSnapshotId:
          type: string
          description: Auto-generated. Used as primary key for EventExecutionSnapshots table.
        snapshotTime:
          type: string
          description: Indicates when this snapshot is taken.
    EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue:
      title: EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue
      type: object
      properties:
        percentage:
          type: integer
          contentEncoding: int32
        absolute:
          type: string
      description: The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig. See go/eventbus-alert-config-examples
    GoogleCloudIntegrationsV1alphaIntegrationBundleConfig:
      title: GoogleCloudIntegrationsV1alphaIntegrationBundleConfig
      type: object
      properties:
        integrations:
          type: array
          items:
            type: string
          description: A bundle of integrations that can be executed by the task at runtime.
        serviceAccount:
          type: string
          description: Output only. The service account created and owned by IP and added to the customers GCP project.
      description: This proto holds the core runner data in the bundle task. It is not expected to be directly edited by the user. Instead, a default value will be provided at the task creation time.
    EnterpriseCrmEventbusProtoParameterMap:
      title: EnterpriseCrmEventbusProtoParameterMap
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterMapEntry'
          description: ''
        keyType:
          allOf:
          - $ref: '#/components/schemas/KeyType'
          - description: Option to specify key value type for all entries of the map. If provided then field types for all entries must conform to this.
        valueType:
          $ref: '#/components/schemas/ValueType'
      description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
    GoogleCloudIntegrationsV1alphaParameterMapEntry:
      title: GoogleCloudIntegrationsV1alphaParameterMapEntry
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMapField'
          - description: Field represents either the key or value in an entry.
        value:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMapField'
          - description: Field represents either the key or value in an entry.
      description: Entry is a pair of key and value.
    GoogleCloudIntegrationsV1alphaCreateCloudFunctionResponse:
      title: GoogleCloudIntegrationsV1alphaCreateCloudFunctionResponse
      type: object
      properties:
        triggerUrl:
          type: string
          description: The trigger url that will be returned
      description: Response for Creating Cloud Function rpc call.
    GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig:
      title: GoogleCloudIntegrationsV1alphaSuspensionApprovalConfig
      type: object
      properties:
        customMessage:
          type: string
          description: Information to provide for recipients.
        expiration:
          description: Indicates the next steps when no external actions happen on the suspension.
        emailAddresses:
          type: array
          items:
            type: string
          description: Email addresses to send approval request to.
      description: Configurations for approving the Suspension.
    EnterpriseCrmFrontendsEventbusProtoParameterValueType:
      title: EnterpriseCrmFrontendsEventbusProtoParameterValueType
      type: object
      properties:
        doubleValue:
          type: number
        jsonValue:
          type: string
        stringValue:
          type: string
        intValue:
          type: string
        booleanValue:
          type: boolean
        booleanArray:
          $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoBooleanParameterArray'
        intArray:
          $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoIntParameterArray'
        stringArray:
          $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoStringParameterArray'
        doubleArray:
          $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray'
        protoValue:
          type: object
          additionalProperties: {}
        serializedObjectValue:
          $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoSerializedObjectParameter'
        protoArray:
          $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoProtoParameterArray'
      description: 'To support various types of parameter values. Next available id: 14'
    EnterpriseCrmEventbusProtoToken:
      title: EnterpriseCrmEventbusProtoToken
      type: object
      properties:
        value:
          type: string
        name:
          type: string
    GoogleCloudConnectorsV1NodeConfig:
      title: GoogleCloudConnectorsV1NodeConfig
      type: object
      properties:
        minNodeCount:
          type: integer
          description: Minimum number of nodes in the runtime nodes.
          contentEncoding: int32
        maxNodeCount:
          type: integer
          description: Maximum number of nodes in the runtime nodes.
          contentEncoding: int32
      description: Configuration for the connection.
    GoogleCloudIntegrationsV1alphaListConnectionsResponse:
      title: GoogleCloudIntegrationsV1alphaListConnectionsResponse
      type: object
      properties:
        connections:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudConnectorsV1Connection'
          description: Connections.
        nextPageToken:
          type: string
          description: Next page token.
      description: Response containing Connections listed by region.
    GoogleCloudIntegrationsV1alphaProvisionClientRequest:
      title: GoogleCloudIntegrationsV1alphaProvisionClientRequest
      type: object
      properties:
        cloudKmsConfig:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCloudKmsConfig'
          - description: Configuration information for Client's Cloud KMS information
        createSampleWorkflows:
          type: boolean
          description: Optional. Indicates if sample workflow should be created along with provisioning
      description: Request for the Provision rpc
    EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage:
      title: EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage
      type: object
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParamSpecEntry'
          description: ''
    EnterpriseCrmEventbusProtoProtoArrayFunction:
      title: EnterpriseCrmEventbusProtoProtoArrayFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName3'
    GoogleCloudIntegrationsV1alphaUpdateBundleResponse:
      title: GoogleCloudIntegrationsV1alphaUpdateBundleResponse
      type: object
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaIntegrationBundleConfig'
          - description: This proto holds the core runner data in the bundle task. It is not expected to be directly edited by the user. Instead, a default value will be provided at the task creation time.
      description: Response message for Bundle update
    GoogleCloudIntegrationsV1alphaCreateCloudFunctionRequest:
      title: GoogleCloudIntegrationsV1alphaCreateCloudFunctionRequest
      type: object
      properties:
        functionName:
          type: string
          description: The function name of CF to be created
        functionRegion:
          type: string
          description: The function region of CF to be created
        projectId:
          type: string
          description: Indicates the id of the GCP project that the function will be created in.
      description: Request for Creating Cloud Function rpc call.
    GoogleCloudIntegrationsV1alphaAuthToken:
      title: GoogleCloudIntegrationsV1alphaAuthToken
      type: object
      properties:
        type:
          type: string
          description: Authentication type, e.g. "Basic", "Bearer", etc.
        token:
          type: string
          description: The token for the auth type.
      description: The credentials to authenticate a user agent with a server that is put in HTTP Authorization request header.
    EnterpriseCrmLoggingGwsFieldLimits:
      title: EnterpriseCrmLoggingGwsFieldLimits
      type: object
      properties:
        shortenerType:
          $ref: '#/components/schemas/ShortenerType'
        maxArraySize:
          type: integer
          description: maximum array size. If the array exceds this size, the field (list) is truncated.
          contentEncoding: int32
        logType:
          type: array
          items:
            $ref: '#/components/schemas/LogType'
          description: To which type(s) of logs the limits apply.
        maxStringLength:
          type: integer
          description: maximum string length. If the field exceeds this amount the field is shortened.
          contentEncoding: int32
        logAction:
          $ref: '#/components/schemas/LogAction'
      description: 'Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6'
    GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCode:
      title: GoogleCloudIntegrationsV1alphaOAuth2AuthorizationCode
      type: object
      properties:
        authParams:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap'
          - description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
        authCode:
          type: string
          description: The Auth Code that is used to initially retrieve the access token.
        tokenEndpoint:
          type: string
          description: The token url endpoint to send the token request to.
        authEndpoint:
          type: string
          description: The auth url endpoint to send the auth code request to.
        applyReauthPolicy:
          type: boolean
          description: Indicates if the user has opted in Google Reauth Policy. If opted in, the refresh token will be valid for 20 hours, after which time users must re-authenticate in order to obtain a new one.
        clientId:
          type: string
          description: The client's id.
        clientSecret:
          type: string
          description: The client's secret.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaAccessToken'
          - description: The access token represents the authorization of a specific application to access specific parts of a user’s data.
        tokenParams:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaParameterMap'
          - description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
        scope:
          type: string
          description: A space-delimited list of requested scope permissions.
        requestType:
          allOf:
          - $ref: '#/components/schemas/RequestType'
          - description: Represent how to pass parameters to fetch access token
      description: The OAuth Type where the client sends request with the client id and requested scopes to auth endpoint. User sees a consent screen and auth code is received at specified redirect url afterwards. The auth code is then combined with the client id and secret and sent to the token endpoint in exchange for the access and refresh token. The refresh token can be used to fetch new access tokens.
    EnterpriseCrmEventbusProtoNotification:
      title: EnterpriseCrmEventbusProtoNotification
      type: object
      properties:
        pubsubTopic:
          type: string
        escalatorQueue:
          type: string
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoAddress'
          - description: Email address along with optional name and tokens. These tokens will be substituted for the variables in the form of [{var_name}], where var_name could be any string of no more than 32 bytes.
        buganizerNotification:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoBuganizerNotification'
        request:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoCustomSuspensionRequest'
    EnterpriseCrmEventbusProtoProtoFunction:
      title: EnterpriseCrmEventbusProtoProtoFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName'
    EnterpriseCrmCardsCellValue:
      title: EnterpriseCrmCardsCellValue
      type: object
      properties:
        stringValue:
          type: string
        booleanValue:
          type: boolean
        longValue:
          type: string
        doubleValue:
          type: number
        empty: {}
    GoogleCloudIntegrationsV1alphaParameterMapField:
      title: GoogleCloudIntegrationsV1alphaParameterMapField
      type: object
      properties:
        referenceKey:
          type: string
          description: Referencing one of the Integration variables.
        literalValue:
          description: Passing a literal value.
      description: Field represents either the key or value in an entry.
    EnterpriseCrmFrontendsEventbusProtoIntParameterArray:
      title: EnterpriseCrmFrontendsEventbusProtoIntParameterArray
      type: object
      properties:
        intValues:
          type: array
          items:
            type: string
          description: ''
    EnterpriseCrmFrontendsEventbusProtoParamSpecEntry:
      title: EnterpriseCrmFrontendsEventbusProtoParamSpecEntry
      type: object
      properties:
        isOutput:
          type: boolean
        isDeprecated:
          type: boolean
          description: If set, this entry is deprecated, so further use of this parameter should be prohibited.
        defaultValue:
          description: Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
        required:
          type: boolean
          description: If set, the user must provide an input value for this parameter.
        jsonSchema:
          type: string
          description: If the data_type is JSON_VALUE, then this will define its schema.
        key:
          type: string
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given task. These parameters must be predefined in the workflow definition.
        className:
          type: string
          description: The FQCN of the Java object this represents. A string, for example, would be "java.lang.String". If this is "java.lang.Object", the parameter can be of any type.
        config:
          description: Optional fields, such as help text and other useful info.
        collectionElementClassName:
          type: string
          description: If it is a collection of objects, this would be the FCQN of every individual element in the collection. If this is "java.lang.Object", the parameter is a collection of any type.
        validationRule:
          description: Rule used to validate inputs (individual values and collection elements) for this parameter.
        protoDef:
          description: Populated if this represents a proto or proto array.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType1'
          - description: The data type of the parameter.
      description: 'Key-value pair of EventBus task parameters. Next id: 13'
    EnterpriseCrmEventbusProtoExternalTraffic:
      title: EnterpriseCrmEventbusProtoExternalTraffic
      type: object
      properties:
        gcpProjectId:
          type: string
          description: User’s GCP project id the traffic is referring to.
        location:
          type: string
          description: Location for the user's request.
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          - description: LINT.ThenChange(//depot/google3/enterprise/crm/eventbus/proto/product.proto:product, //depot/google3/java/com/google/enterprise/crm/integrationplatform/api/utils/ConverterUtils.java:source_to_product)
        gcpProjectNumber:
          type: string
          description: User’s GCP project number the traffic is referring to.
      description: Represents external traffic type and id.
    EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity:
      title: EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity
      type: object
      properties:
        emailAddress:
          type: string
        gaiaId:
          type: string
    EnterpriseCrmEventbusProtoSuspensionResolutionInfo:
      title: EnterpriseCrmEventbusProtoSuspensionResolutionInfo
      type: object
      properties:
        createdTimestamp:
          type: string
          description: Auto-generated.
        product:
          allOf:
          - $ref: '#/components/schemas/Product1'
          - description: Which Google product the suspension belongs to. If not set, the suspension belongs to Integration Platform by default.
        audit:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSuspensionResolutionInfoAudit'
        suspensionConfig:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSuspensionConfig'
        externalTraffic:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoExternalTraffic'
          - description: Represents external traffic type and id.
        workflowName:
          type: string
          description: Required. The name of the originating workflow.
        lastModifiedTimestamp:
          type: string
          description: Auto-generated.
        status:
          $ref: '#/components/schemas/Status2'
        eventExecutionInfoId:
          type: string
          description: Required. ID of the associated execution.
        taskNumber:
          type: string
          description: Required. Task number of the associated SuspensionTask.
        suspensionId:
          type: string
          description: Primary key for the SuspensionResolutionInfoTable.
    EnterpriseCrmFrontendsEventbusProtoParameterEntry:
      title: EnterpriseCrmFrontendsEventbusProtoParameterEntry
      type: object
      properties:
        value:
          description: Values for the defined keys. Each value can either be string, int, double or any proto message.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType'
          - description: Explicitly getting the type of the parameter.
        key:
          type: string
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
      description: Key-value pair of EventBus parameters.
    GoogleCloudIntegrationsV1alphaParameterMap:
      title: GoogleCloudIntegrationsV1alphaParameterMap
      type: object
      properties:
        entries:
          type: array
          items: {}
          description: A list of parameter map entries.
        keyType:
          allOf:
          - $ref: '#/components/schemas/KeyType1'
          - description: Option to specify key type for all entries of the map. If provided then field types for all entries must conform to this.
        valueType:
          allOf:
          - $ref: '#/components/schemas/ValueType1'
          - description: Option to specify value type for all entries of the map. If provided then field types for all entries must conform to this.
      description: A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
    GoogleCloudConnectorsV1AuthConfig:
      title: GoogleCloudConnectorsV1AuthConfig
      type: object
      properties:
        additionalVariables:
          type: array
          items: {}
          description: List containing additional auth configs.
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          - description: The type of authentication configured.
        userPassword:
          description: UserPassword.
        oauth2JwtBearer:
          description: Oauth2JwtBearer.
        sshPublicKey:
          description: SSH Public Key.
        oauth2ClientCredentials:
          description: Oauth2ClientCredentials.
      description: AuthConfig defines details of a authentication type.
    GoogleCloudIntegrationsV1alphaTestIntegrationsResponse:
      title: GoogleCloudIntegrationsV1alphaTestIntegrationsResponse
      type: object
      properties:
        executionFailed:
          type: boolean
          description: Is true if any execution in the integration failed. False otherwise.
        executionId:
          type: string
          description: The id of the execution corresponding to this run of integration.
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaValueType'
          description: Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
        parameterEntries:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry'
          description: Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
        eventParameters:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoEventParameters'
          - description: 'LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see go/integration-platform/event_bus.md for more details. Next id: 4'
      description: The response for testing an integration.
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange:
      title: EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange
      type: object
      properties:
        min:
          type: string
          description: The inclusive minimum of the acceptable range.
        max:
          type: string
          description: The inclusive maximum of the acceptable range.
      description: Range used to validate longs and ints.
    GoogleCloudIntegrationsV1alphaListCertificatesResponse:
      title: GoogleCloudIntegrationsV1alphaListCertificatesResponse
      type: object
      properties:
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaCertificate'
          description: The list of Certificates retrieved.
        nextPageToken:
          type: string
          description: The token used to retrieve the next page of results.
      description: Response to list Certificates.
    GoogleCloudIntegrationsV1alphaClientCertificate:
      title: GoogleCloudIntegrationsV1alphaClientCertificate
      type: object
      properties:
        encryptedPrivateKey:
          type: string
          description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
        passphrase:
          type: string
          description: "'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key."
        sslCertificate:
          type: string
          description: The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
      description: Contains client certificate information
    GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse:
      title: GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse
      type: object
      properties:
        executionInfoIds:
          type: array
          items:
            type: string
          description: The execution info id for the executed integrations.
      description: The response for executing an integration.
    EnterpriseCrmEventbusProtoStringArrayFunction:
      title: EnterpriseCrmEventbusProtoStringArrayFunction
      type: object
      properties:
        functionName:
          $ref: '#/components/schemas/FunctionName3'
    GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse:
      title: GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse
      type: object
      properties:
        taskEntities:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTaskEntity'
          description: The list of the tasks.
      description: This is a UI only method and will be moved away. Response for ListTaskEntities.
    GoogleCloudIntegrationsV1alphaOidcToken:
      title: GoogleCloudIntegrationsV1alphaOidcToken
      type: object
      properties:
        tokenExpireTime:
          type: string
          description: The approximate time until the token retrieved is valid.
        serviceAccountEmail:
          type: string
          description: The service account email to be used as the identity for the token.
        token:
          type: string
          description: ID token obtained for the service account
        audience:
          type: string
          description: Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
      description: OIDC Token
    GoogleCloudIntegrationsV1alphaDoubleParameterArray:
      title: GoogleCloudIntegrationsV1alphaDoubleParameterArray
      type: object
      properties:
        doubleValues:
          type: array
          items:
            type: number
          description: Double number array.
      description: This message only contains a field of double number array.
    EnterpriseCrmEventbusProtoTaskUiConfig:
      title: EnterpriseCrmEventbusProtoTaskUiConfig
      type: object
      properties:
        taskUiModuleConfigs:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTaskUiModuleConfig'
          description: Configurations of included config modules.
      description: 'Task authors would use this type to configure the UI for a particular task by specifying what UI config modules should be included to compose the UI. Learn more about config module framework: go/integration-platform-config-module-framework'
    GoogleCloudConnectorsV1AuthConfigOauth2ClientCredentials:
      title: GoogleCloudConnectorsV1AuthConfigOauth2ClientCredentials
      type: object
      properties:
        clientId:
          type: string
          description: The client identifier.
        clientSecret:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudConnectorsV1Secret'
          - description: Secret provides a reference to entries in Secret Manager.
      description: Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
    GoogleCloudIntegrationsV1alphaStringParameterArray:
      title: GoogleCloudIntegrationsV1alphaStringParameterArray
      type: object
      properties:
        stringValues:
          type: array
          items:
            type: string
          description: String array.
      description: This message only contains a field of string array.
    EnterpriseCrmEventbusProtoDoubleArray:
      title: EnterpriseCrmEventbusProtoDoubleArray
      type: object
      properties:
        values:
          type: array
          items:
            type: number
          description: ''
    EnterpriseCrmEventbusProtoBaseValue:
      title: EnterpriseCrmEventbusProtoBaseValue
      type: object
      properties:
        literalValue:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoParameterValueType'
          - description: 'LINT.IfChange To support various types of parameter values. Next available id: 14'
        baseFunction:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoFunction'
        referenceValue:
          type: string
          description: Start with a reference value to dereference.
    EnterpriseCrmEventbusProtoStringParameterArray:
      title: EnterpriseCrmEventbusProtoStringParameterArray
      type: object
      properties:
        stringValues:
          type: array
          items:
            type: string
          description: ''
    GoogleCloudIntegrationsV1alphaCredential:
      title: GoogleCloudIntegrationsV1alphaCredential
      type: object
      properties:
        oauth2ClientCredentials:
          description: OAuth2Implicit oauth2_implicit = 5; OAuth2 client credentials
        usernameAndPassword:
          description: Username and password credential
        oidcToken:
          description: Google OIDC ID Token
        authToken:
          description: Auth token credential
        credentialType:
          allOf:
          - $ref: '#/components/schemas/CredentialType1'
          - description: Credential type associated with auth config.
        oauth2AuthorizationCode:
          description: The api_key and oauth2_implicit are not covered in v1 and will be picked up once v1 is implemented. ApiKey api_key = 3; OAuth2 authorization code credential
        oauth2ResourceOwnerCredentials:
          description: OAuth2 resource owner credentials
        jwt:
          description: JWT credential
        serviceAccountCredentials:
          description: Service account credential
      description: Defines parameters for a single, canonical credential.
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex:
      title: EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex
      type: object
      properties:
        regex:
          type: string
          description: The regex applied to the input value(s).
        exclusive:
          type: boolean
          description: Whether the regex matcher is applied exclusively (if true, matching values will be rejected).
      description: Rule used to validate strings.
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationMode:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationMode
      type: object
      properties:
        joinConfig:
          description: Optional. join operation
        operationType:
          allOf:
          - $ref: '#/components/schemas/OperationType'
          - description: Optional. optional operation types.
        unionConfig:
          description: Optional. union operation
      description: Operation between 2 query
    EnterpriseCrmEventbusProtoTaskExecutionDetailsTaskAttemptStats:
      title: EnterpriseCrmEventbusProtoTaskExecutionDetailsTaskAttemptStats
      type: object
      properties:
        endTime:
          type: string
          description: The end time of the task execution for current attempt.
        startTime:
          type: string
          description: The start time of the task execution for current attempt. This could be in the future if it's been scheduled.
    EnterpriseCrmEventbusProtoSuspensionAuthPermissions:
      title: EnterpriseCrmEventbusProtoSuspensionAuthPermissions
      type: object
      properties:
        loasRole:
          type: string
        gaiaIdentity:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity'
        googleGroup:
          $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSuspensionAuthPermissionsGaiaIdentity'
        mdbGroup:
          type: string
      description: LINT.IfChange
    EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange:
      title: EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange
      type: object
      properties:
        max:
          type: number
          description: The inclusive maximum of the acceptable range.
        min:
          type: number
          description: The inclusive minimum of the acceptable range.
      description: Range used to validate doubles and floats.
    GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationModeUnionConfig:
      title: GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequestMashQueryOperationModeUnionConfig
      type: object
      properties:
        reducer:
          type: string
          description: Optional. optional, reduce function
      description: Union operation
    EnterpriseCrmFrontendsEventbusProtoTaskConfig:
      title: EnterpriseCrmFrontendsEventbusProtoTaskConfig
      type: object
      properties:
        incomingEdgeCount:
          type: integer
          description: The number of edges leading into this TaskConfig.
          contentEncoding: int32
        taskNumber:
          type: string
          description: 'REQUIRED: the identifier of this task within its parent event config, specified by the client. This should be unique among all the tasks belong to the same event config. We use this field as the identifier to find next tasks (via field `next_tasks.task_number`).'
        synchronousCallFailurePolicy:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoFailurePolicy'
          - description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
        description:
          type: string
          description: User-provided description intended to give more business context about the task.
        taskEntity:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoTaskEntity'
          - description: "Contains a task's metadata and associated information. Next available id: 7"
        jsonValidationOption:
          allOf:
          - $ref: '#/components/schemas/JsonValidationOption1'
          - description: If set, overrides the option configured in the Task implementation class.
        nextTasksExecutionPolicy:
          allOf:
          - $ref: '#/components/schemas/NextTasksExecutionPolicy3'
          - description: The policy dictating the execution of the next set of tasks for the current task.
        position:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoCoordinate'
          - description: Represents two-dimensional positions.
        taskTemplateName:
          type: string
          description: Used to define task-template name if task is of type task-template
        taskType:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          - description: Defines the type of the task
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoParameterEntry'
          description: The customized parameters the user can pass to this task.
        disableStrictTypeValidation:
          type: boolean
          description: If this config contains a TypedTask, allow validation to succeed if an input is read from the output of another TypedTask whose output type is declared as a superclass of the requested input type. For instance, if the previous task declares an output of type Message, any task with this flag enabled will pass validation when attempting to read any proto Message type from the resultant Event parameter.
        createTime:
          type: string
          description: Auto-generated.
        precondition:
          type: string
          description: Optional. Standard filter expression evaluated before execution. Independent of other conditions and tasks. Can be used to enable rollout. e.g. "rollout(5)" will only allow 5% of incoming traffic to task.
        creatorEmail:
          type: string
          description: The creator's email address. Auto-generated from the user's email.
        label:
          type: string
          description: User-provided label that is attached to this TaskConfig in the UI.
        successPolicy:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoSuccessPolicy'
          - description: Policy that dictates the behavior for the task after it completes successfully.
        failurePolicy:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmEventbusProtoFailurePolicy'
          - description: Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
        nextTasks:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoNextTask'
          description: The set of tasks that are next in line to be executed as per the execution graph defined for the parent event, specified by `event_config_id`. Each of these next tasks are executed only if the condition associated with them evaluates to true.
        taskExecutionStrategy:
          allOf:
          - $ref: '#/components/schemas/TaskExecutionStrategy1'
          - description: The policy dictating the execution strategy of this task.
        preconditionLabel:
          type: string
          description: Optional. User-provided label that is attached to precondition in the UI.
        alertConfigs:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseCrmEventbusProtoTaskAlertConfig'
          description: Alert configurations on error rate, warning rate, number of runs, durations, etc.
        taskName:
          type: string
          description: The name for the task.
        rollbackStrategy:
          allOf:
          - $ref: '#/components/schemas/EnterpriseCrmFrontendsEventbusProtoRollbackStrategy'
          - description: 'Next available id: 4'
        lastModifiedTime:
          type: string
          description: Auto-generated.
        taskSpec:
          type: string
          description: A string template that allows user to configure task parameters (with either literal default values or tokens which will be resolved at execution time) for the task. It will eventually replace the old "parameters" field. Please refer to go/eventbus-task-spec-example for detailed usage example.
      description: 'The task configuration details. This is not the implementation of Task. There might be multiple TaskConfigs for the same Task. Next available id: 27'
    EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList:
      title: EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList
      type: object
      properties:
        filterType:
          $ref: '#/components/schemas/FilterType'
        enumStrings:
          type: array
          items:
            type: string
          description: ''
      description: List of error enums for alerts.
    GoogleCloudIntegrationsV1alphaGetClientResponse:
      title: GoogleCloudIntegrationsV1alphaGetClientResponse
      type: object
      properties:
        client:
          allOf:
          - $ref: '#/components/schemas/GoogleCloudIntegrationsV1alphaClientConfig'
          - description: The configuration information for the Client
      description: Response for the GetClient rpc
    EnterpriseCrmFrontendsEventbusProtoTaskEntity:
      title: EnterpriseCrmFrontendsEventbusProtoTaskEntity
      type: object
      properties:
        metadata:
          description: Metadata inclueds the task name, author and so on.
        paramSpecs:
          description: Declarations for inputs/outputs for a TypedTask. This is also associated with the METADATA mask.
        taskType:
          allOf:
          - $ref: '#/components/schemas/TaskType'
          - description: Defines the type of the task
        stats:
          description: Deprecated - statistics from the Monarch query.
        uiConfig:
          description: UI configuration for this task Also associated with the METADATA mask.
        disabledForVpcSc:
          type: boolean
          description: True if the task has conflict with vpcsc
      description: "Contains a task's metadata and associated information. Next available id: 7"
    EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry:
      title: EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry
      type: object
      properties:
        defaultValue:
          description: Default values for the defined keys. Each value can either be string, int, double or any proto message or a serialized object.
        jsonSchema:
          type: string
          description: This schema will be used to validate runtime JSON-typed values of this parameter.
        attributes:
          description: Metadata information about the parameters.
        protoDefPath:
          type: string
          description: If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be "enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry".
        protoDefName:
          type: string
          description: The name of the protobuf type if the parameter has a protobuf data type.
        inOutType:
          allOf:
          - $ref: '#/components/schemas/InOutType'
          - description: Specifies the input/output type for the parameter.
        isTransient:
          type: boolean
          description: Whether this parameter is a transient parameter. go/ip-transient-parameters
        producedBy:
          description: The identifier of the node (TaskConfig/TriggerConfig) this parameter was produced by, if it is a transient param or a copy of an input param.
        key:
          type: string
          description: Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
        producer:
          type: string
        name:
          type: string
          description: The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType1'
          - description: The data type of the parameter.
        children:
          type: array
          items: {}
          description: Child parameters nested within this parameter. This field only applies to protobuf parameters
    EnterpriseCrmEventbusProtoExecutionTraceInfo:
      title: EnterpriseCrmEventbusProtoExecutionTraceInfo
      type: object
      properties:
        parentEventExecutionInfoId:
          type: string
          description: Parent event execution info id that triggers the current execution through SubWorkflowExecutorTask.
        traceId:
          type: string
          description: Used to aggregate ExecutionTraceInfo.
      description: Message that helps aggregate all sub-executions triggered by one execution and keeps track of child-parent relationships.
    EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray:
      title: EnterpriseCrmFrontendsEventbusProtoDoubleParameterArray
      type: object
      properties:
        doubleValues:
          type: array
          items:
            type: number
          description: ''
    AllowedCredentialType:
      title: AllowedCredentialType
      enum:
      - CREDENTIAL_TYPE_UNSPECIFIED
      - USERNAME_AND_PASSWORD
      - API_KEY
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_IMPLICIT
      - OAUTH2_CLIENT_CREDENTIALS
      - OAUTH2_RESOURCE_OWNER_CREDENTIALS
      - JWT
      - AUTH_TOKEN
      - SERVICE_ACCOUNT
      - CLIENT_CERTIFICATE_ONLY
      - OIDC_TOKEN
      type: string
    AuthType:
      title: AuthType
      enum:
      - AUTH_TYPE_UNSPECIFIED
      - USER_PASSWORD
      - OAUTH2_JWT_BEARER
      - OAUTH2_CLIENT_CREDENTIALS
      - SSH_PUBLIC_KEY
      - OAUTH2_AUTH_CODE_FLOW
      type: string
      description: The type of authentication configured.
    BillingType:
      title: BillingType
      enum:
      - BILLING_TYPE_UNSPECIFIED
      - BILLING_TYPE_APIGEE_TRIALS
      - BILLING_TYPE_APIGEE_SUBSCRIPTION
      - BILLING_TYPE_PAYG
      type: string
      description: Indicates the billing type of the client
    BorgTaskMetric:
      title: BorgTaskMetric
      enum:
      - BORG_TASK_METRIC_UNSPECIFIED
      - TASK_INDIVIDUAL_COUNT
      - EVENT_COUNT
      - EVENT_DURATION
      - TASK_INDIVIDUAL_DURATION
      type: string
      description: Required. The metric for monarch.BorgTask.
    Cardinality:
      title: Cardinality
      enum:
      - UNSPECIFIED
      - OPTIONAL
      type: string
      description: By default, if the cardinality is unspecified the field is considered required while mapping.
    Category:
      title: Category
      enum:
      - UNSPECIFIED_CATEGORY
      - CUSTOM
      - FLOW_CONTROL
      - DATA_MANIPULATION
      - SCRIPTING
      - CONNECTOR
      - HIDDEN
      - CLOUD_SYSTEMS
      - CUSTOM_TASK_TEMPLATE
      type: string
    CertificateStatus:
      title: CertificateStatus
      enum:
      - STATE_UNSPECIFIED
      - ACTIVE
      - EXPIRED
      type: string
      description: Status of the certificate
    ClientState:
      title: ClientState
      enum:
      - CLIENT_STATE_UNSPECIFIED
      - CLIENT_STATE_ACTIVE
      - CLIENT_STATE_DISABLED
      type: string
      description: Indicates the activity state the client
    CommonErrorCode:
      title: CommonErrorCode
      enum:
      - COMMON_ERROR_CODE_UNSPECIFIED
      - INVALID_CREDENTIALS
      - REQUIRED_FIELDS_MISSING
      - INVALID_FIELDS
      - BACKEND
      - GENERAL
      - INTERNAL
      - IO_ERROR
      - NOT_FOUND
      - EVENT_BUS
      - ALREADY_EXISTS
      - CONCORD
      - CONVERSION
      - FLUME
      - PERMISSION
      - SALES_FORCE
      - SPANNER
      - UNIMPLEMENTED
      - RELTIO
      - WORKFLOW_NOT_FOUND
      - QUOTA_THROTTLED
      - QUOTA_ENQUEUED
      - INVALID_QUOTA_CONFIGURATION
      - TASK_NOT_FOUND
      - EXECUTION_TIMEOUT
      - INVALID_EVENT_EXECUTION_STATE
      - INVALID_ATTRIBUTE
      - MISSING_ATTRIBUTE
      - CLIENT_UNAUTHORIZED_FOR_WORKFLOW
      - INVALID_PARAMETER
      - MISSING_PARAMETER
      - UNAUTHROIZED_WORKFLOW_EDITOR_ACTION
      - FAILED_PRECONDITION
      - INVALID_CLIENT
      - MISSING_CLIENT
      - INVALID_WORKFLOW
      - MISSING_QUOTA_CONFIGURATION
      - UNHANDLED_TASK_ERROR
      - SCRIPT_TASK_RUNTIME_ERROR
      - RPC
      - INVALID_PROTO
      - UNHANDLED_EVENTBUS_ERROR
      - INVALID_TASK_STATE
      - TYPED_TASK_INVALID_INPUT_OPERATION
      - TYPED_TASK_INVALID_OUTPUT_OPERATION
      - VALIDATION_ERROR
      - RESUME_ERROR
      - APPS_SCRIPT_EXECUTION_ERROR
      - INVALID_VECTOR_USER
      - INFORMATICA
      - RETRYABLE_TASK_ERROR
      - INVALID_TENANT
      - WRONG_TENANT
      - INFORMATICA_BACKEND_UNAVAILABLE
      - RPC_PERMISSION_DENIED
      - SYNC_EVENTBUS_EXECUTION_TIMEOUT
      - ASYNC_EVENTBUS_EXECUTION_TIMEOUT
      - NOT_SUPPORTED_DATA_TYPE
      - UNSANITIZED_USER_INPUT
      - TRANSFORM_EXPRESSION_EVALUATION_ERROR
      - HTTP_EXCEPTION
      - EXECUTION_CANCELLED
      type: string
    CredentialType:
      title: CredentialType
      enum:
      - CREDENTIAL_TYPE_UNSPECIFIED
      - USERNAME_AND_PASSWORD
      - API_KEY
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_IMPLICIT
      - OAUTH2_CLIENT_CREDENTIALS
      - OAUTH2_RESOURCE_OWNER_CREDENTIALS
      - JWT
      - AUTH_TOKEN
      - SERVICE_ACCOUNT
      - CLIENT_CERTIFICATE_ONLY
      - OIDC_TOKEN
      type: string
      description: Credential type of the encrypted credential.
    CredentialType1:
      title: CredentialType1
      enum:
      - CREDENTIAL_TYPE_UNSPECIFIED
      - USERNAME_AND_PASSWORD
      - API_KEY
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_IMPLICIT
      - OAUTH2_CLIENT_CREDENTIALS
      - OAUTH2_RESOURCE_OWNER_CREDENTIALS
      - JWT
      - AUTH_TOKEN
      - SERVICE_ACCOUNT
      - CLIENT_CERTIFICATE_ONLY
      - OIDC_TOKEN
      type: string
      description: Credential type associated with auth config.
    DatabasePersistencePolicy:
      title: DatabasePersistencePolicy
      enum:
      - DATABASE_PERSISTENCE_POLICY_UNSPECIFIED
      - DATABASE_PERSISTENCE_DISABLED
      type: string
      description: Optional. Flag to disable database persistence for execution data, including event execution info, execution export info, execution metadata index and execution param index.
    DataType:
      title: DataType
      enum:
      - DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - PROTO_VALUE
      - SERIALIZED_OBJECT_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - PROTO_ARRAY
      - PROTO_ENUM
      - BOOLEAN_ARRAY
      - PROTO_ENUM_ARRAY
      - BYTES
      - BYTES_ARRAY
      - NON_SERIALIZABLE_OBJECT
      - JSON_VALUE
      type: string
      description: Explicitly getting the type of the parameter.
    DataType1:
      title: DataType1
      enum:
      - DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - PROTO_VALUE
      - SERIALIZED_OBJECT_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - PROTO_ARRAY
      - PROTO_ENUM
      - BOOLEAN_ARRAY
      - PROTO_ENUM_ARRAY
      - BYTES
      - BYTES_ARRAY
      - NON_SERIALIZABLE_OBJECT
      - JSON_VALUE
      type: string
      description: The data type of the parameter.
    DataType2:
      title: DataType2
      enum:
      - DATA_TYPE_UNSPECIFIED
      - EMAIL
      - URL
      - CURRENCY
      - TIMESTAMP
      - DOMAIN_NAME
      type: string
      description: Things like URL, Email, Currency, Timestamp (rather than string, int64...)
    DataType3:
      title: DataType3
      enum:
      - INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - BOOLEAN_ARRAY
      - JSON_VALUE
      - PROTO_VALUE
      - PROTO_ARRAY
      type: string
      description: Type of the parameter.
    DefaultJsonValidationOption:
      title: DefaultJsonValidationOption
      enum:
      - UNSPECIFIED_JSON_VALIDATION_OPTION
      - SKIP
      - PRE_EXECUTION
      - POST_EXECUTION
      - PRE_POST_EXECUTION
      type: string
      description: Controls whether JSON workflow parameters are validated against provided schemas before and/or after this task's execution.
    ElementType:
      title: ElementType
      enum:
      - UNKNOWN_TYPE
      - TASK_CONFIG
      - TRIGGER_CONFIG
      type: string
      description: Destination node where the edge ends. It can only be a task config.
    EnumFilterType:
      title: EnumFilterType
      enum:
      - DEFAULT_INCLUSIVE
      - EXCLUSIVE
      type: string
      description: Whether to include or exclude the enums matching the regex.
    EventExecutionState:
      title: EventExecutionState
      enum:
      - UNSPECIFIED
      - ON_HOLD
      - IN_PROCESS
      - SUCCEEDED
      - FAILED
      - CANCELED
      - RETRY_ON_HOLD
      - SUSPENDED
      type: string
    EventExecutionState1:
      title: EventExecutionState1
      enum:
      - UNSPECIFIED
      - ON_HOLD
      - IN_PROCESS
      - SUCCEEDED
      - FAILED
      - CANCELED
      - RETRY_ON_HOLD
      - SUSPENDED
      type: string
      description: The execution state of this event.
    ExecutionMethod:
      title: ExecutionMethod
      enum:
      - EXECUTION_METHOD_UNSPECIFIED
      - POST
      - POST_TO_QUEUE
      - SCHEDULE
      type: string
      description: The ways user posts this event.
    ExternalCategory:
      title: ExternalCategory
      enum:
      - UNSPECIFIED_EXTERNAL_CATEGORY
      - CORE
      - CONNECTORS
      type: string
    FailureLocation:
      title: FailureLocation
      enum:
      - UNKNOWN
      - SUBWORKFLOW
      - PARAM_OVERRIDING
      - PARAM_AGGREGATING
      - SETTING_ITERATION_ELEMENT
      - GETTING_LIST_TO_ITERATE
      - CONDITION_EVALUATION
      - BUILDING_REQUEST
      type: string
      description: Indicates where in the loop logic did it error out.
    FieldType:
      title: FieldType
      enum:
      - DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - PROTO_VALUE
      - SERIALIZED_OBJECT_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - PROTO_ARRAY
      - PROTO_ENUM
      - BOOLEAN_ARRAY
      - PROTO_ENUM_ARRAY
      - BYTES
      - BYTES_ARRAY
      - NON_SERIALIZABLE_OBJECT
      - JSON_VALUE
      type: string
      description: Specifies the data type of the field.
    FileFormat:
      title: FileFormat
      enum:
      - FILE_FORMAT_UNSPECIFIED
      - JSON
      - YAML
      type: string
      description: File format for upload request.
    FilterType:
      title: FilterType
      enum:
      - DEFAULT_INCLUSIVE
      - EXCLUSIVE
      type: string
    FinalState:
      title: FinalState
      enum:
      - UNSPECIFIED
      - SUCCEEDED
      - SUSPENDED
      type: string
      description: State to which the execution snapshot status will be set if the task succeeds.
    FinalState1:
      title: FinalState1
      enum:
      - FINAL_STATE_UNSPECIFIED
      - SUCCEEDED
      - SUSPENDED
      type: string
      description: State to which the execution snapshot status will be set if the task succeeds.
    FunctionName:
      title: FunctionName
      enum:
      - UNSPECIFIED
      - GET_STRING_SUBFIELD
      - GET_INT_SUBFIELD
      - GET_DOUBLE_SUBFIELD
      - GET_BOOLEAN_SUBFIELD
      - GET_STRING_ARRAY_SUBFIELD
      - GET_INT_ARRAY_SUBFIELD
      - GET_DOUBLE_ARRAY_SUBFIELD
      - GET_BOOLEAN_ARRAY_SUBFIELD
      - GET_PROTO_ARRAY_SUBFIELD
      - GET_PROTO_SUBFIELD
      - TO_JSON
      - GET_BYTES_SUBFIELD_AS_UTF_8_STRING
      - GET_BYTES_SUBFIELD_AS_PROTO
      - EQUALS
      type: string
    FunctionName1:
      title: FunctionName1
      enum:
      - UNSPECIFIED
      - GET
      - APPEND
      - SIZE
      - SUM
      - AVG
      - MAX
      - MIN
      - TO_SET
      - APPEND_ALL
      - TO_JSON
      - SET
      - REMOVE
      - REMOVE_AT
      - CONTAINS
      - FOR_EACH
      - FILTER
      type: string
    FunctionName2:
      title: FunctionName2
      enum:
      - UNSPECIFIED
      - ADD
      - SUBTRACT
      - MULTIPLY
      - DIVIDE
      - EXPONENT
      - GREATER_THAN_EQUAL_TO
      - GREATER_THAN
      - LESS_THAN_EQUAL_TO
      - LESS_THAN
      - TO_DOUBLE
      - TO_STRING
      - EQUALS
      - TO_JSON
      - MOD
      - EPOCH_TO_HUMAN_READABLE_TIME
      type: string
    FunctionName3:
      title: FunctionName3
      enum:
      - UNSPECIFIED
      - GET
      - APPEND
      - SIZE
      - TO_SET
      - APPEND_ALL
      - TO_JSON
      - SET
      - REMOVE
      - REMOVE_AT
      - CONTAINS
      - FOR_EACH
      - FILTER
      type: string
    FunctionName5:
      title: FunctionName5
      enum:
      - UNSPECIFIED
      - NOW_IN_MILLIS
      - INT_LIST
      - ENVIRONMENT
      - GET_EXECUTION_ID
      - GET_INTEGRATION_NAME
      - GET_REGION
      - GET_UUID
      - GET_PROJECT_ID
      type: string
    FunctionName6:
      title: FunctionName6
      enum:
      - UNSPECIFIED
      - TO_JSON
      - NOT
      - AND
      - NAND
      - OR
      - XOR
      - NOR
      - XNOR
      - TO_STRING
      - EQUALS
      type: string
    FunctionName8:
      title: FunctionName8
      enum:
      - UNSPECIFIED
      - GET_PROPERTY
      - GET_ELEMENT
      - APPEND_ELEMENT
      - SIZE
      - SET_PROPERTY
      - FLATTEN
      - FLATTEN_ONCE
      - MERGE
      - TO_STRING
      - TO_INT
      - TO_DOUBLE
      - TO_BOOLEAN
      - TO_PROTO
      - TO_STRING_ARRAY
      - TO_INT_ARRAY
      - TO_DOUBLE_ARRAY
      - TO_PROTO_ARRAY
      - TO_BOOLEAN_ARRAY
      - REMOVE_PROPERTY
      - RESOLVE_TEMPLATE
      - EQUALS
      - FOR_EACH
      - FILTER_ELEMENTS
      type: string
    FunctionName9:
      title: FunctionName9
      enum:
      - UNSPECIFIED
      - CONCAT
      - TO_UPPERCASE
      - TO_LOWERCASE
      - CONTAINS
      - SPLIT
      - LENGTH
      - EQUALS
      - TO_INT
      - TO_DOUBLE
      - TO_BOOLEAN
      - TO_BASE_64
      - TO_JSON
      - EQUALS_IGNORE_CASE
      - REPLACE_ALL
      - SUBSTRING
      - RESOLVE_TEMPLATE
      type: string
    FunctionName10:
      title: FunctionName10
      enum:
      - UNSPECIFIED
      - TO_JSON
      - TO_STRING
      - ADD
      - SUBTRACT
      - MULTIPLY
      - DIVIDE
      - EXPONENT
      - ROUND
      - FLOOR
      - CEIL
      - GREATER_THAN
      - LESS_THAN
      - EQUALS
      - GREATER_THAN_EQUALS
      - LESS_THAN_EQUALS
      - MOD
      type: string
    InOutType:
      title: InOutType
      enum:
      - IN_OUT_TYPE_UNSPECIFIED
      - IN
      - OUT
      - IN_OUT
      type: string
      description: Specifies the input/output type for the parameter.
    InputDisplayOption:
      title: InputDisplayOption
      enum:
      - DEFAULT
      - STRING_MULTI_LINE
      - NUMBER_SLIDER
      - BOOLEAN_TOGGLE
      type: string
    InputOutputType:
      title: InputOutputType
      enum:
      - IN_OUT_TYPE_UNSPECIFIED
      - IN
      - OUT
      - IN_OUT
      type: string
      description: Specifies the input/output type for the parameter.
    IpEnablementState:
      title: IpEnablementState
      enum:
      - IP_ENABLEMENT_STATE_UNSPECIFIED
      - IP_ENABLEMENT_STATE_STANDALONE
      - IP_ENABLEMENT_STATE_APIGEE
      - IP_ENABLEMENT_STATE_APIGEE_ENTITLED
      type: string
      description: An enum value of what the enablement state is for the given project
    JsonValidationOption:
      title: JsonValidationOption
      enum:
      - JSON_VALIDATION_OPTION_UNSPECIFIED
      - SKIP
      - PRE_EXECUTION
      - POST_EXECUTION
      - PRE_POST_EXECUTION
      type: string
      description: Optional. If set, overrides the option configured in the Task implementation class.
    JsonValidationOption1:
      title: JsonValidationOption1
      enum:
      - UNSPECIFIED_JSON_VALIDATION_OPTION
      - SKIP
      - PRE_EXECUTION
      - POST_EXECUTION
      - PRE_POST_EXECUTION
      type: string
      description: If set, overrides the option configured in the Task implementation class.
    KeyType:
      title: KeyType
      enum:
      - DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - PROTO_VALUE
      - SERIALIZED_OBJECT_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - PROTO_ARRAY
      - PROTO_ENUM
      - BOOLEAN_ARRAY
      - PROTO_ENUM_ARRAY
      - BYTES
      - BYTES_ARRAY
      - NON_SERIALIZABLE_OBJECT
      - JSON_VALUE
      type: string
      description: Option to specify key value type for all entries of the map. If provided then field types for all entries must conform to this.
    KeyType1:
      title: KeyType1
      enum:
      - INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - BOOLEAN_ARRAY
      - JSON_VALUE
      - PROTO_VALUE
      - PROTO_ARRAY
      type: string
      description: Option to specify key type for all entries of the map. If provided then field types for all entries must conform to this.
    LogAction:
      title: LogAction
      enum:
      - LOG_ACTION_UNSPECIFIED
      - DONT_LOG
      - LOG
      type: string
    LogType:
      title: LogType
      enum:
      - LOG_TYPE_UNSPECIFIED
      - GWS
      - GTS
      - ALL
      type: string
    MetricType:
      title: MetricType
      enum:
      - METRIC_TYPE_UNSPECIFIED
      - TASK_ERROR_RATE
      - TASK_WARNING_RATE
      - TASK_RATE
      - TASK_AVERAGE_DURATION
      - TASK_PERCENTILE_DURATION
      type: string
    MetricType1:
      title: MetricType1
      enum:
      - METRIC_TYPE_UNSPECIFIED
      - EVENT_ERROR_RATE
      - EVENT_WARNING_RATE
      - TASK_ERROR_RATE
      - TASK_WARNING_RATE
      - TASK_RATE
      - EVENT_RATE
      - EVENT_AVERAGE_DURATION
      - EVENT_PERCENTILE_DURATION
      - TASK_AVERAGE_DURATION
      - TASK_PERCENTILE_DURATION
      type: string
    MetricType2:
      title: MetricType2
      enum:
      - METRIC_TYPE_UNSPECIFIED
      - EVENT_ERROR_RATE
      - EVENT_WARNING_RATE
      - TASK_ERROR_RATE
      - TASK_WARNING_RATE
      - TASK_RATE
      - EVENT_RATE
      - EVENT_AVERAGE_DURATION
      - EVENT_PERCENTILE_DURATION
      - TASK_AVERAGE_DURATION
      - TASK_PERCENTILE_DURATION
      type: string
      description: The type of metric.
    ModuleId:
      title: ModuleId
      enum:
      - UNSPECIFIED_TASK_MODULE
      - LABEL
      - ERROR_HANDLING
      - TASK_PARAM_TABLE
      - TASK_PARAM_FORM
      - PRECONDITION
      - SCRIPT_EDITOR
      - RPC
      - TASK_SUMMARY
      - SUSPENSION
      - RPC_TYPED
      - SUB_WORKFLOW
      - APPS_SCRIPT_NAVIGATOR
      - SUB_WORKFLOW_FOR_EACH_LOOP
      - FIELD_MAPPING
      - README
      - REST_CALLER
      - SUB_WORKFLOW_SCATTER_GATHER
      - CLOUD_SQL
      - GENERIC_CONNECTOR_TASK
      type: string
      description: ID of the config module.
    NextTasksExecutionPolicy:
      title: NextTasksExecutionPolicy
      enum:
      - UNSPECIFIED
      - RUN_ALL_MATCH
      - RUN_FIRST_MATCH
      type: string
      description: Dictates how next tasks will be executed.
    NextTasksExecutionPolicy1:
      title: NextTasksExecutionPolicy1
      enum:
      - NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED
      - RUN_ALL_MATCH
      - RUN_FIRST_MATCH
      type: string
      description: Optional. The policy dictating the execution of the next set of tasks for the current task.
    NextTasksExecutionPolicy2:
      title: NextTasksExecutionPolicy2
      enum:
      - NEXT_TASKS_EXECUTION_POLICY_UNSPECIFIED
      - RUN_ALL_MATCH
      - RUN_FIRST_MATCH
      type: string
      description: Optional. Dictates how next tasks will be executed.
    NextTasksExecutionPolicy3:
      title: NextTasksExecutionPolicy3
      enum:
      - UNSPECIFIED
      - RUN_ALL_MATCH
      - RUN_FIRST_MATCH
      type: string
      description: The policy dictating the execution of the next set of tasks for the current task.
    Operation:
      title: Operation
      enum:
      - OPERATION_UNSPECIFIED
      - EXECUTE_ACTION
      - LIST_ENTITIES
      - GET_ENTITY
      - CREATE_ENTITY
      - UPDATE_ENTITY
      - DELETE_ENTITY
      type: string
      description: Operation to perform using the configured connection.
    OperationType:
      title: OperationType
      enum:
      - OPERATION_TYPE_UNSPECIFIED
      - UNION
      - JOIN
      type: string
      description: Optional. optional operation types.
    Operator:
      title: Operator
      enum:
      - UNSET
      - EQUALS
      - CONTAINS
      - LESS_THAN
      - GREATER_THAN
      - EXISTS
      - DOES_NOT_EXIST
      - IS_EMPTY
      - IS_NOT_EMPTY
      type: string
      description: Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.
    Origin:
      title: Origin
      enum:
      - UNSPECIFIED
      - UI
      - PIPER_V2
      - PIPER_V3
      - APPLICATION_IP_PROVISIONING
      type: string
      description: Optional. The origin that indicates where this integration is coming from.
    ParameterNameOption:
      title: ParameterNameOption
      enum:
      - DEFAULT_NOT_PARAMETER_NAME
      - IS_PARAMETER_NAME
      - KEY_IS_PARAMETER_NAME
      - VALUE_IS_PARAMETER_NAME
      type: string
    PostMethod:
      title: PostMethod
      enum:
      - UNSPECIFIED
      - POST
      - POST_TO_QUEUE
      - SCHEDULE
      - POST_BY_EVENT_CONFIG_ID
      - POST_WITH_EVENT_DETAILS
      type: string
      description: The ways user posts this event.
    Priority:
      title: Priority
      enum:
      - UNSPCIFIED
      - SHEDDABLE
      - SHEDDABLE_PLUS
      - CRITICAL
      - CRITICAL_PLUS
      type: string
      description: 'The request priority this request should be processed at. For internal users:'
    Privacy:
      title: Privacy
      enum:
      - PRIVACY_TYPE_UNSPECIFIED
      - NOT_PII
      - PII
      - SPII
      - UNSURE
      type: string
    Product:
      title: Product
      enum:
      - UNSPECIFIED_PRODUCT
      - IP
      - APIGEE
      - SECURITY
      type: string
      description: Which Google product the execution_info belongs to. If not set, the execution_info belongs to Integration Platform by default.
    Product1:
      title: Product1
      enum:
      - UNSPECIFIED_PRODUCT
      - IP
      - APIGEE
      - SECURITY
      type: string
      description: Which Google product the suspension belongs to. If not set, the suspension belongs to Integration Platform by default.
    RequestType:
      title: RequestType
      enum:
      - REQUEST_TYPE_UNSPECIFIED
      - REQUEST_BODY
      - QUERY_PARAMETERS
      - ENCODED_HEADER
      type: string
      description: Represent how to pass parameters to fetch access token
    ResponseTemplate:
      title: ResponseTemplate
      enum:
      - DATA_FORMAT_UNSPECIFIED
      - TABLE_CONFIG
      - APLOSE_SERIES_LIST_CONFIG
      type: string
      description: Required. Template for response.
    RetryAttempt:
      title: RetryAttempt
      enum:
      - UNSPECIFIED
      - FINAL
      - RETRYABLE
      - CANCELED
      type: string
    RetryStrategy:
      title: RetryStrategy
      enum:
      - RETRY_STRATEGY_UNSPECIFIED
      - IGNORE
      - NONE
      - FATAL
      - FIXED_INTERVAL
      - LINEAR_BACKOFF
      - EXPONENTIAL_BACKOFF
      - RESTART_INTEGRATION_WITH_BACKOFF
      type: string
      description: Defines what happens to the task upon failure.
    RetryStrategy1:
      title: RetryStrategy1
      enum:
      - UNSPECIFIED
      - IGNORE
      - NONE
      - FATAL
      - FIXED_INTERVAL
      - LINEAR_BACKOFF
      - EXPONENTIAL_BACKOFF
      - RESTART_WORKFLOW_WITH_BACKOFF
      type: string
      description: Defines what happens to the task upon failure.
    SanitizeType:
      title: SanitizeType
      enum:
      - SANITIZE_TYPE_UNSPECIFIED
      - SCRUB
      - ANONYMIZE
      - ANONYMIZE_LIMITED_REPEATABLE
      - OBFUSCATE
      - ENCRYPT
      - DO_NOT_SANITIZE
      type: string
    Searchable:
      title: Searchable
      enum:
      - UNSPECIFIED
      - YES
      - NO
      type: string
    SeedPeriod:
      title: SeedPeriod
      enum:
      - SEED_PERIOD_UNSPECIFIED
      - DAY
      - WEEK
      - MONTH
      type: string
    SeedScope:
      title: SeedScope
      enum:
      - SEED_SCOPE_UNSPECIFIED
      - EVENT_NAME
      - TIME_PERIOD
      - PARAM_NAME
      type: string
    Severity:
      title: Severity
      enum:
      - SEVERITY_UNSPECIFIED
      - ERROR
      - WARN
      - INFO
      type: string
      description: 'The severity of the error: ERROR|WARN|INFO.'
    ShortenerType:
      title: ShortenerType
      enum:
      - SHORTENER_TYPE_UNSPECIFIED
      - SHORTEN
      - HASH
      - SHORTEN_WITH_HASH
      - SHORTEN_EMAIL
      - SHORTEN_EMAIL_WITH_HASH
      - SHORTEN_DOMAIN
      type: string
    Source:
      title: Source
      enum:
      - SOURCE_UNSPECIFIED
      - APIGEE
      - SECURITY
      type: string
      description: LINT.ThenChange(//depot/google3/enterprise/crm/eventbus/proto/product.proto:product, //depot/google3/java/com/google/enterprise/crm/integrationplatform/api/utils/ConverterUtils.java:source_to_product)
    State:
      title: State
      enum:
      - INTEGRATION_STATE_UNSPECIFIED
      - DRAFT
      - ACTIVE
      - ARCHIVED
      - SNAPSHOT
      type: string
      description: Output only. User should not set it as an input.
    State1:
      title: State1
      enum:
      - STATE_UNSPECIFIED
      - PENDING
      - PROCESSING
      - SUCCEEDED
      - FAILED
      - CANCELLED
      - RETRY_ON_HOLD
      - SUSPENDED
      type: string
      description: Status of the execution.
    State2:
      title: State2
      enum:
      - RESOLUTION_STATE_UNSPECIFIED
      - PENDING
      - REJECTED
      - LIFTED
      type: string
      description: Required. State of this suspension, indicating what action a resolver has taken.
    State3:
      title: State3
      enum:
      - STATE_UNSPECIFIED
      - VALID
      - INVALID
      - SOFT_DELETED
      - EXPIRED
      - UNAUTHORIZED
      - UNSUPPORTED
      type: string
      description: The status of the auth config.
    State4:
      title: State4
      enum:
      - STATE_UNSPECIFIED
      - CREATING
      - ACTIVE
      - INACTIVE
      - DELETING
      - UPDATING
      - ERROR
      type: string
      description: State.
    Status:
      title: Status
      enum:
      - UNKNOWN
      - DRAFT
      - ACTIVE
      - ARCHIVED
      - SNAPSHOT
      type: string
      description: Output only. Generated by eventbus. User should not set it as an input.
    Status1:
      title: Status1
      enum:
      - UNSPECIFIED_STATUS
      - DEFAULT_INACTIVE
      - ACTIVE
      type: string
      description: Allows author to indicate if the task is ready to use or not. If not set, then it will default to INACTIVE.
    Status2:
      title: Status2
      enum:
      - PENDING_UNSPECIFIED
      - REJECTED
      - LIFTED
      type: string
    System:
      title: System
      enum:
      - UNSPECIFIED_SYSTEM
      - GENERIC
      - BUGANIZER
      - SALESFORCE
      - CLOUD_SQL
      - PLX
      - SHEETS
      - GOOGLE_GROUPS
      - EMAIL
      - SPANNER
      - DATA_BRIDGE
      type: string
    TaskExecutionState:
      title: TaskExecutionState
      enum:
      - UNSPECIFIED
      - PENDING_EXECUTION
      - IN_PROCESS
      - SUCCEED
      - FAILED
      - FATAL
      - RETRY_ON_HOLD
      - SKIPPED
      - CANCELED
      - PENDING_ROLLBACK
      - ROLLBACK_IN_PROCESS
      - ROLLEDBACK
      - SUSPENDED
      type: string
    TaskExecutionState1:
      title: TaskExecutionState1
      enum:
      - TASK_EXECUTION_STATE_UNSPECIFIED
      - PENDING_EXECUTION
      - IN_PROCESS
      - SUCCEED
      - FAILED
      - FATAL
      - RETRY_ON_HOLD
      - SKIPPED
      - CANCELLED
      - PENDING_ROLLBACK
      - ROLLBACK_IN_PROCESS
      - ROLLEDBACK
      - SUSPENDED
      type: string
      description: The execution state of this task.
    TaskExecutionStrategy:
      title: TaskExecutionStrategy
      enum:
      - TASK_EXECUTION_STRATEGY_UNSPECIFIED
      - WHEN_ALL_SUCCEED
      - WHEN_ANY_SUCCEED
      - WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED
      type: string
      description: Optional. The policy dictating the execution strategy of this task.
    TaskExecutionStrategy1:
      title: TaskExecutionStrategy1
      enum:
      - WHEN_ALL_SUCCEED
      - WHEN_ANY_SUCCEED
      - WHEN_ALL_TASKS_AND_CONDITIONS_SUCCEED
      type: string
      description: The policy dictating the execution strategy of this task.
    TaskType:
      title: TaskType
      enum:
      - TASK
      - ASIS_TEMPLATE
      - IO_TEMPLATE
      type: string
      description: Defines the type of the task
    ThresholdType:
      title: ThresholdType
      enum:
      - UNSPECIFIED_THRESHOLD_TYPE
      - EXPECTED_MIN
      - EXPECTED_MAX
      type: string
      description: The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
    ThresholdType1:
      title: ThresholdType1
      enum:
      - UNSPECIFIED_THRESHOLD_TYPE
      - EXPECTED_MIN
      - EXPECTED_MAX
      type: string
      description: The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
    ThresholdType2:
      title: ThresholdType2
      enum:
      - THRESHOLD_TYPE_UNSPECIFIED
      - EXPECTED_MIN
      - EXPECTED_MAX
      type: string
      description: The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
    TriggerType:
      title: TriggerType
      enum:
      - UNKNOWN
      - CLOUD_PUBSUB
      - GOOPS
      - SFDC_SYNC
      - CRON
      - API
      - MANIFOLD_TRIGGER
      - DATALAYER_DATA_CHANGE
      - SFDC_CHANNEL
      - CLOUD_PUBSUB_EXTERNAL
      - SFDC_CDC_CHANNEL
      - SFDC_PLATFORM_EVENTS_CHANNEL
      - CLOUD_SCHEDULER
      type: string
    TriggerType1:
      title: TriggerType1
      enum:
      - TRIGGER_TYPE_UNSPECIFIED
      - CRON
      - API
      - SFDC_CHANNEL
      - CLOUD_PUBSUB_EXTERNAL
      - SFDC_CDC_CHANNEL
      - CLOUD_SCHEDULER
      type: string
      description: Optional. Type of trigger
    ValueType:
      title: ValueType
      enum:
      - DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - PROTO_VALUE
      - SERIALIZED_OBJECT_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - PROTO_ARRAY
      - PROTO_ENUM
      - BOOLEAN_ARRAY
      - PROTO_ENUM_ARRAY
      - BYTES
      - BYTES_ARRAY
      - NON_SERIALIZABLE_OBJECT
      - JSON_VALUE
      type: string
    ValueType1:
      title: ValueType1
      enum:
      - INTEGRATION_PARAMETER_DATA_TYPE_UNSPECIFIED
      - STRING_VALUE
      - INT_VALUE
      - DOUBLE_VALUE
      - BOOLEAN_VALUE
      - STRING_ARRAY
      - INT_ARRAY
      - DOUBLE_ARRAY
      - BOOLEAN_ARRAY
      - JSON_VALUE
      - PROTO_VALUE
      - PROTO_ARRAY
      type: string
      description: Option to specify value type for all entries of the map. If provided then field types for all entries must conform to this.
    Visibility:
      title: Visibility
      enum:
      - AUTH_CONFIG_VISIBILITY_UNSPECIFIED
      - PRIVATE
      - CLIENT_VISIBLE
      type: string
      description: The visibility of the auth config.
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: appsScriptProjects
  description: ''
- name: sfdcChannels
  description: ''
- name: sfdcInstances
  description: ''
- name: executionsnapshots
  description: ''
- name: versions
  description: ''
- name: suspensions
  description: ''
- name: executions
  description: ''
- name: integrations
  description: ''
- name: cloudFunctions
  description: ''
- name: authConfigs
  description: ''
- name: certificates
  description: ''
- name: products
  description: ''
- name: runtimeActionSchemas
  description: ''
- name: runtimeEntitySchemas
  description: ''
- name: connections
  description: ''
- name: clients
  description: ''
- name: locations
  description: ''
- name: projects
  description: ''
- name: callback
  description: ''
- name: connectorPlatformRegions
  description: ''
