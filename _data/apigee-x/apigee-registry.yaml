openapi: 3.1.0
info:
  title: Apigee Registry API
  description: ''
  contact: {}
  version: 'v1'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://apigeeregistry.googleapis.com/
  variables: {}
paths:
  /v1/{resource}:getIamPolicy:
    get:
      tags:
      - artifacts
      summary: GetIamPolicyV1GetIamPolicyByResource
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: GetIamPolicyV1GetIamPolicyByResource
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: options.requestedPolicyVersion
        in: query
        description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: resource
        in: path
        description: 'REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:
    delete:
      tags:
      - artifacts
      summary: DeleteV1ByName
      description: Removes a specified artifact.
      operationId: DeleteV1ByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: 'Required. The name of the artifact to delete. Format: `{parent}/artifacts/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    put:
      tags:
      - artifacts
      summary: ReplaceArtifactV1ByName
      description: Used to replace a specified artifact.
      operationId: ReplaceArtifactV1ByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: Resource name.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - artifacts
      summary: GetV1ByName
      description: Returns a specified artifact.
      operationId: GetV1ByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: 'Required. The name of the artifact to retrieve. Format: `{parent}/artifacts/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    patch:
      tags:
      - deployments
      summary: PatchV1ByName
      description: Used to modify a specified deployment.
      operationId: PatchV1ByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: allowMissing
        in: query
        description: If set to true, and the deployment is not found, a new deployment will be created. In this situation, `update_mask` is ignored.
        style: form
        explode: true
        schema:
          type: boolean
      - name: name
        in: path
        description: Resource name.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$
          type: string
      - name: updateMask
        in: query
        description: The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If an asterisk "*" is specified, all fields are updated, including fields that are unspecified/default in the request.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDeployment'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{resource}:setIamPolicy:
    post:
      tags:
      - artifacts
      summary: SetIamPolicyV1SetIamPolicyByResource
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: SetIamPolicyV1SetIamPolicyByResource
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: resource
        in: path
        description: 'REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetIamPolicyRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:getContents:
    get:
      tags:
      - artifacts
      summary: GetContentsV1GetContentsByName
      description: Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).
      operationId: GetContentsV1GetContentsByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: 'Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpBody'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/artifacts:
    post:
      tags:
      - artifacts
      summary: CreateV1ArtifactsByParent
      description: Creates a specified artifact.
      operationId: CreateV1ArtifactsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: artifactId
        in: query
        description: Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of artifacts. Format: `{parent}`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - artifacts
      summary: ListV1ArtifactsByParent
      description: Returns matching artifacts.
      operationId: ListV1ArtifactsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: pageSize
        in: query
        description: The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token.
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the "desc" identifier, e.g. "foo desc,bar"
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of artifacts. Format: `{parent}`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArtifactsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{resource}:testIamPermissions:
    post:
      tags:
      - artifacts
      summary: TestIamPermissionsV1TestIamPermissionsByResource
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: TestIamPermissionsV1TestIamPermissionsByResource
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: resource
        in: path
        description: 'REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/artifacts/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestIamPermissionsRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestIamPermissionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/deployments:
    post:
      tags:
      - deployments
      summary: CreateV1DeploymentsByParent
      description: Creates a specified deployment.
      operationId: CreateV1DeploymentsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of deployments. Format: `projects/*/locations/*/apis/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+$
          type: string
      - name: apiDeploymentId
        in: query
        description: Required. The ID to use for the deployment, which will become the final component of the deployment's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDeployment'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - deployments
      summary: ListV1DeploymentsByParent
      description: Returns matching deployments.
      operationId: ListV1DeploymentsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of deployments. Format: `projects/*/locations/*/apis/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+$
          type: string
      - name: orderBy
        in: query
        description: A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the "desc" identifier, e.g. "foo desc,bar"
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: A page token, received from a previous `ListApiDeployments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiDeployments` must match the call that provided the page token.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The maximum number of deployments to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiDeploymentsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:listRevisions:
    get:
      tags:
      - deployments
      summary: ListRevisionsV1ListRevisionsByName
      description: Lists all revisions of a deployment. Revisions are returned in descending order of revision creation time.
      operationId: ListRevisionsV1ListRevisionsByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: pageToken
        in: query
        description: The page token, received from a previous ListApiDeploymentRevisions call. Provide this to retrieve the subsequent page.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: Required. The name of the deployment to list revisions for.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: The maximum number of revisions to return per page.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiDeploymentRevisionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:deleteRevision:
    delete:
      tags:
      - deployments
      summary: DeleteRevisionV1DeleteRevisionByName
      description: Deletes a revision of a deployment.
      operationId: DeleteRevisionV1DeleteRevisionByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: 'Required. The name of the deployment revision to be deleted, with a revision ID explicitly included. Example: `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:rollback:
    post:
      tags:
      - deployments
      summary: RollbackV1RollbackByName
      description: Sets the current revision to a specified prior revision. Note that this creates a new revision with a new revision ID.
      operationId: RollbackV1RollbackByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: Required. The deployment being rolled back.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollbackApiDeploymentRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:tagRevision:
    post:
      tags:
      - deployments
      summary: TagRevisionV1TagRevisionByName
      description: Adds a tag to a specified revision of a deployment.
      operationId: TagRevisionV1TagRevisionByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: Required. The name of the deployment to be tagged, including the revision ID.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/deployments/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagApiDeploymentRevisionRequest'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDeployment'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/specs:
    get:
      tags:
      - specs
      summary: ListV1SpecsByParent
      description: Returns matching specs.
      operationId: ListV1SpecsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: orderBy
        in: query
        description: A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the "desc" identifier, e.g. "foo desc,bar"
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The maximum number of specs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of specs. Format: `projects/*/locations/*/apis/*/versions/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$
          type: string
      - name: pageToken
        in: query
        description: A page token, received from a previous `ListApiSpecs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiSpecs` must match the call that provided the page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiSpecsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    post:
      tags:
      - specs
      summary: CreateV1SpecsByParent
      description: Creates a specified spec.
      operationId: CreateV1SpecsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of specs. Format: `projects/*/locations/*/apis/*/versions/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+/versions/[^/]+$
          type: string
      - name: apiSpecId
        in: query
        description: Required. The ID to use for the spec, which will become the final component of the spec's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSpec'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSpec'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/versions:
    post:
      tags:
      - versions
      summary: CreateV1VersionsByParent
      description: Creates a specified version.
      operationId: CreateV1VersionsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: apiVersionId
        in: query
        description: Required. The ID to use for the version, which will become the final component of the version's resource name. This value should be 1-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of versions. Format: `projects/*/locations/*/apis/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiVersion'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - versions
      summary: ListV1VersionsByParent
      description: Returns matching versions.
      operationId: ListV1VersionsByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: orderBy
        in: query
        description: A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the "desc" identifier, e.g. "foo desc,bar"
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of versions. Format: `projects/*/locations/*/apis/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/apis/[^/]+$
          type: string
      - name: pageToken
        in: query
        description: A page token, received from a previous `ListApiVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiVersions` must match the call that provided the page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApiVersionsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/apis:
    post:
      tags:
      - apis
      summary: CreateV1ApisByParent
      description: Creates a specified API.
      operationId: CreateV1ApisByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: apiId
        in: query
        description: Required. The ID to use for the API, which will become the final component of the API's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
        style: form
        explode: true
        schema:
          type: string
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of APIs. Format: `projects/*/locations/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    get:
      tags:
      - apis
      summary: ListV1ApisByParent
      description: Returns matching APIs.
      operationId: ListV1ApisByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. The parent, which owns this collection of APIs. Format: `projects/*/locations/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: The maximum number of APIs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: filter
        in: query
        description: An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: A comma-separated list of fields, e.g. "foo,bar" Fields can be sorted in descending order using the "desc" identifier, e.g. "foo desc,bar"
        style: form
        explode: true
        schema:
          type: string
      - name: pageToken
        in: query
        description: A page token, received from a previous `ListApis` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApis` must match the call that provided the page token.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApisResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{parent}/instances:
    post:
      tags:
      - instances
      summary: CreateV1InstancesByParent
      description: Provisions instance resources for the Registry.
      operationId: CreateV1InstancesByParent
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: parent
        in: path
        description: 'Required. Parent resource of the Instance, of the form: `projects/*/locations/*`'
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: instanceId
        in: query
        description: Required. Identifier to assign to the Instance. Must be unique within scope of the parent resource.
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Instance'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}/operations:
    get:
      tags:
      - operations
      summary: ListV1OperationsByName
      description: "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
      operationId: ListV1OperationsByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: pageToken
        in: query
        description: The standard list page token.
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the operation's parent resource.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+$
          type: string
      - name: pageSize
        in: query
        description: The standard list page size.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: filter
        in: query
        description: The standard list filter.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}:cancel:
    post:
      tags:
      - operations
      summary: CancelV1CancelByName
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: CancelV1CancelByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: name
        in: path
        description: The name of the operation resource to be cancelled.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+/locations/[^/]+/operations/[^/]+$
          type: string
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              type: object
              contentMediaType: text/plain
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                contentMediaType: text/plain
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
  /v1/{name}/locations:
    get:
      tags:
      - locations
      summary: ListV1LocationsByName
      description: Lists information about the supported locations for this service.
      operationId: ListV1LocationsByName
      parameters:
      - name: upload_protocol
        in: query
        description: Upload protocol for media (e.g. "raw", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: quotaUser
        in: query
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
        style: form
        explode: true
        schema:
          type: string
      - name: alt
        in: query
        description: 'Data format for response. (Acceptable values are: "json", "media", "proto")'
        style: form
        explode: true
        schema:
          type: string
          default: json
      - name: fields
        in: query
        description: Selector specifying which fields to include in a partial response.
        style: form
        explode: true
        schema:
          type: string
      - name: access_token
        in: query
        description: OAuth access token.
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
        style: form
        explode: true
        schema:
          type: string
      - name: callback
        in: query
        description: JSONP
        style: form
        explode: true
        schema:
          type: string
      - name: prettyPrint
        in: query
        description: Returns response with indentations and line breaks.
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: uploadType
        in: query
        description: Legacy upload protocol for media (e.g. "media", "multipart").
        style: form
        explode: true
        schema:
          type: string
      - name: oauth_token
        in: query
        description: OAuth 2.0 token for the current user.
        style: form
        explode: true
        schema:
          type: string
      - name: $.xgafv
        in: query
        description: 'V1 error format. (Acceptable values are: "1", "2")'
        style: form
        explode: true
        schema:
          type: string
          default: '1'
      - name: pageSize
        in: query
        description: The maximum number of results to return. If not set, the service selects a default.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int32
      - name: pageToken
        in: query
        description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
        style: form
        explode: true
        schema:
          type: string
      - name: filter
        in: query
        description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: The resource that owns the locations collection, if applicable.
        required: true
        style: simple
        schema:
          pattern: ^projects/[^/]+$
          type: string
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      deprecated: false
      security:
      - httpBearer:
        - https://www.googleapis.com/auth/cloud-platform
    parameters: []
components:
  schemas:
    ListLocationsResponse:
      title: ListLocationsResponse
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: A list of locations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Locations.ListLocations.
    ApiVersion:
      title: ApiVersion
      type: object
      properties:
        name:
          type: string
          description: Resource name.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
        description:
          type: string
          description: A detailed description.
        createTime:
          type: string
          description: Output only. Creation timestamp.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
        state:
          type: string
          description: 'A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g., "CONCEPT", "DESIGN", "DEVELOPMENT", "STAGING", "PRODUCTION", "DEPRECATED", "RETIRED".'
        displayName:
          type: string
          description: Human-meaningful name.
        updateTime:
          type: string
          description: Output only. Last update timestamp.
      description: Describes a particular version of an API. ApiVersions are what consumers actually use.
    TagApiDeploymentRevisionRequest:
      title: TagApiDeploymentRevisionRequest
      type: object
      properties:
        tag:
          type: string
          description: Required. The tag to apply. The tag should be at most 40 characters, and match `a-z{3,39}`.
      description: Request message for TagApiDeploymentRevision.
    ListApiVersionsResponse:
      title: ListApiVersionsResponse
      type: object
      properties:
        apiVersions:
          type: array
          items:
            $ref: '#/components/schemas/ApiVersion'
          description: The versions from the specified publisher.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response message for ListApiVersions.
    Api:
      title: Api
      type: object
      properties:
        description:
          type: string
          description: A detailed description.
        name:
          type: string
          description: Resource name.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
        availability:
          type: string
          description: 'A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., "NONE", "TESTING", "PREVIEW", "GENERAL", "DEPRECATED", "SHUTDOWN".'
        updateTime:
          type: string
          description: Output only. Last update timestamp.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
        displayName:
          type: string
          description: Human-meaningful name.
        recommendedVersion:
          type: string
          description: 'The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`'
        recommendedDeployment:
          type: string
          description: 'The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`'
        createTime:
          type: string
          description: Output only. Creation timestamp.
      description: A top-level description of an API. Produced by producers and are commitments to provide services.
    TagApiSpecRevisionRequest:
      title: TagApiSpecRevisionRequest
      type: object
      properties:
        tag:
          type: string
          description: Required. The tag to apply. The tag should be at most 40 characters, and match `a-z{3,39}`.
      description: Request message for TagApiSpecRevision.
    TestIamPermissionsResponse:
      title: TestIamPermissionsResponse
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
      description: Response message for `TestIamPermissions` method.
    SetIamPolicyRequest:
      title: SetIamPolicyRequest
      type: object
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      description: Request message for `SetIamPolicy` method.
    Expr:
      title: Expr
      type: object
      properties:
        description:
          type: string
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
        title:
          type: string
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
        location:
          type: string
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
        expression:
          type: string
          description: Textual representation of an expression in Common Expression Language syntax.
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    Artifact:
      title: Artifact
      type: object
      properties:
        updateTime:
          type: string
          description: Output only. Last update timestamp.
        createTime:
          type: string
          description: Output only. Creation timestamp.
        sizeBytes:
          type: integer
          description: Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.
          contentEncoding: int32
        contents:
          type: string
          description: Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.
        hash:
          type: string
          description: Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.
        mimeType:
          type: string
          description: A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible "schema" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with "+gzip").
        name:
          type: string
          description: Resource name.
      description: Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.
    Instance:
      title: Instance
      type: object
      properties:
        stateMessage:
          type: string
          description: Output only. Extra information of Instance.State if the state is `FAILED`.
        name:
          type: string
          description: 'Format: `projects/*/locations/*/instance`. Currently only `locations/global` is supported.'
        createTime:
          type: string
          description: Output only. Creation timestamp.
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          - description: Output only. The current state of the Instance.
        updateTime:
          type: string
          description: Output only. Last update timestamp.
        config:
          allOf:
          - $ref: '#/components/schemas/Config'
          - description: Available configurations to provision an Instance.
      description: An Instance represents the instance resources of the Registry. Currently, only one instance is allowed for each project.
    OperationMetadata:
      title: OperationMetadata
      type: object
      properties:
        target:
          type: string
          description: Server-defined resource path for the target of the operation.
        statusMessage:
          type: string
          description: Human-readable status of the operation, if any.
        verb:
          type: string
          description: Name of the verb executed by the operation.
        cancellationRequested:
          type: boolean
          description: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
        endTime:
          type: string
          description: The time the operation finished running.
        apiVersion:
          type: string
          description: API version used to start the operation.
        createTime:
          type: string
          description: The time the operation was created.
      description: Represents the metadata of the long-running operation.
    ApiSpec:
      title: ApiSpec
      type: object
      properties:
        revisionUpdateTime:
          type: string
          description: 'Output only. Last update timestamp: when the represented revision was last modified.'
        filename:
          type: string
          description: A possibly-hierarchical name used to refer to the spec from other specs.
        name:
          type: string
          description: Resource name.
        createTime:
          type: string
          description: Output only. Creation timestamp; when the spec resource was created.
        description:
          type: string
          description: A detailed description.
        revisionId:
          type: string
          description: Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.
        revisionCreateTime:
          type: string
          description: Output only. Revision creation timestamp; when the represented revision was created.
        mimeType:
          type: string
          description: A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with "+gzip").
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
        sourceUri:
          type: string
          description: The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.
        hash:
          type: string
          description: Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.
        contents:
          type: string
          description: Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.
        sizeBytes:
          type: integer
          description: Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.
          contentEncoding: int32
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
      description: Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.
    HttpBody:
      title: HttpBody
      type: object
      properties:
        data:
          type: string
          description: The HTTP request/response body as raw binary.
        extensions:
          type: array
          items: {}
          description: Application specific response metadata. Must be set in the first response for streaming APIs.
        contentType:
          type: string
          description: The HTTP Content-Type header value specifying the content type of the body.
      description: "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
    RollbackApiSpecRequest:
      title: RollbackApiSpecRequest
      type: object
      properties:
        revisionId:
          type: string
          description: 'Required. The revision ID to roll back to. It must be a revision of the same spec. Example: `c7cfa2a8`'
      description: Request message for RollbackApiSpec.
    ApiDeployment:
      title: ApiDeployment
      type: object
      properties:
        accessGuidance:
          type: string
          description: Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.
        createTime:
          type: string
          description: Output only. Creation timestamp; when the deployment resource was created.
        revisionCreateTime:
          type: string
          description: Output only. Revision creation timestamp; when the represented revision was created.
        description:
          type: string
          description: A detailed description.
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.
        endpointUri:
          type: string
          description: The address where the deployment is serving. Changes to this value will update the revision.
        revisionId:
          type: string
          description: Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.
        externalChannelUri:
          type: string
          description: The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.
        revisionUpdateTime:
          type: string
          description: 'Output only. Last update timestamp: when the represented revision was last modified.'
        intendedAudience:
          type: string
          description: Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.
        apiSpecRevision:
          type: string
          description: 'The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `apis/{api}/deployments/{deployment}`'
        name:
          type: string
          description: Resource name.
        displayName:
          type: string
          description: Human-meaningful name.
      description: Describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.
    ListOperationsResponse:
      title: ListOperationsResponse
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
        nextPageToken:
          type: string
          description: The standard List next-page token.
      description: The response message for Operations.ListOperations.
    Operation:
      title: Operation
      type: object
      properties:
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        metadata:
          type: object
          additionalProperties: {}
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
        error:
          description: The error result of the operation in case of failure or cancellation.
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        response:
          type: object
          additionalProperties: {}
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
      description: This resource represents a long-running operation that is the result of a network API call.
    Binding:
      title: Binding
      type: object
      properties:
        condition:
          allOf:
          - $ref: '#/components/schemas/Expr'
          - description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
        members:
          type: array
          items:
            type: string
          description: 'Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.'
        role:
          type: string
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
      description: Associates `members`, or principals, with a `role`.
    Policy:
      title: Policy
      type: object
      properties:
        bindings:
          type: array
          items: {}
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
        version:
          type: integer
          description: 'Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'
          contentEncoding: int32
        etag:
          type: string
          description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.'
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    ListApiDeploymentsResponse:
      title: ListApiDeploymentsResponse
      type: object
      properties:
        apiDeployments:
          type: array
          items:
            $ref: '#/components/schemas/ApiDeployment'
          description: The deployments from the specified publisher.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response message for ListApiDeployments.
    Location:
      title: Location
      type: object
      properties:
        displayName:
          type: string
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
        locationId:
          type: string
          description: 'The canonical id for this location. For example: `"us-east1"`.'
        labels:
          type: object
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
        name:
          type: string
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
        metadata:
          type: object
          additionalProperties: {}
          description: Service-specific metadata. For example the available capacity at the given location.
      description: A resource that represents Google Cloud Platform location.
    Status:
      title: Status
      type: object
      properties:
        details:
          type: array
          items: {}
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          contentEncoding: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    ListApisResponse:
      title: ListApisResponse
      type: object
      properties:
        apis:
          type: array
          items:
            $ref: '#/components/schemas/Api'
          description: The APIs from the specified publisher.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response message for ListApis.
    RollbackApiDeploymentRequest:
      title: RollbackApiDeploymentRequest
      type: object
      properties:
        revisionId:
          type: string
          description: 'Required. The revision ID to roll back to. It must be a revision of the same deployment. Example: `c7cfa2a8`'
      description: Request message for RollbackApiDeployment.
    ListApiDeploymentRevisionsResponse:
      title: ListApiDeploymentRevisionsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        apiDeployments:
          type: array
          items:
            $ref: '#/components/schemas/ApiDeployment'
          description: The revisions of the deployment.
      description: Response message for ListApiDeploymentRevisionsResponse.
    ListApiSpecRevisionsResponse:
      title: ListApiSpecRevisionsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        apiSpecs:
          type: array
          items:
            $ref: '#/components/schemas/ApiSpec'
          description: The revisions of the spec.
      description: Response message for ListApiSpecRevisionsResponse.
    Config:
      title: Config
      type: object
      properties:
        location:
          type: string
          description: Output only. The GCP location where the Instance resides.
        cmekKeyName:
          type: string
          description: Required. The Customer Managed Encryption Key (CMEK) used for data encryption. The CMEK name should follow the format of `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`, where the `location` must match InstanceConfig.location.
      description: Available configurations to provision an Instance.
    ListArtifactsResponse:
      title: ListArtifactsResponse
      type: object
      properties:
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
          description: The artifacts from the specified publisher.
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
      description: Response message for ListArtifacts.
    ListApiSpecsResponse:
      title: ListApiSpecsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        apiSpecs:
          type: array
          items:
            $ref: '#/components/schemas/ApiSpec'
          description: The specs from the specified publisher.
      description: Response message for ListApiSpecs.
    TestIamPermissionsRequest:
      title: TestIamPermissionsRequest
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
      description: Request message for `TestIamPermissions` method.
    State:
      title: State
      enum:
      - STATE_UNSPECIFIED
      - INACTIVE
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - FAILED
      type: string
      description: Output only. The current state of the Instance.
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: artifacts
  description: ''
- name: runtime
  description: ''
- name: deployments
  description: ''
- name: specs
  description: ''
- name: versions
  description: ''
- name: apis
  description: ''
- name: instances
  description: ''
- name: operations
  description: ''
- name: locations
  description: ''
